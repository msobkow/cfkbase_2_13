<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="java+xmsg"
	Name="src/SchemaXMsgHandler/SchemaXMsgSchemaMessageFormatter.java"
	Revision="2.13"
	Descr="Java 11 XML SAX Element Handler for Table">

	<GenFile GenDef="SchemaDef" Name="fileSchemaXMsgSchemaMessageFormatterJava"
			GenerateOnce="false"
			ModuleName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$XMsg"
		SourceBundle="java"
		BasePackageName="$reference ManufacturingSchema lower PackageName$xmsg.src"
		SubPackageName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$XMsg"
		ExpansionClassName="$SchemaName$XMsgSchemaMessageFormatterJava"
		ExpansionKeyName="$SchemaName$XMsgSchemaMessageFormatterJava"
		ExpansionFileName="$SchemaName$XMsgSchemaMessageFormatter.java">
// Description: Java 11 XML Message message formatter for $SchemaName$

$MssSourceLicense$

package $reference ManufacturingSchema lower JavaPackage$.$SchemaName$XMsg;

import java.math.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import org.apache.commons.codec.binary.Base64;
import org.xml.sax.*;
import org.msscf.msscf.cflib.CFLib.*;$iterate SchemaRefs( each importJavaPackageSchemaName empty empty )$$importJavaPackageSchemaName$$iterate SchemaRefs( each importJavaPackageSchemaNameObj empty empty )$$importJavaPackageSchemaNameObj$$JavaXMsgSchemaImport$$ReferencedJavaXMsgSchemaImport$

/*
 *	$SchemaName$XMsgSchemaMessageFormatter XML message formatter
 *	for $SchemaName$.
 */
public class $SchemaName$XMsgSchemaMessageFormatter
{$implAttributesSchemaMessageFormatter$$implConstructXMsgSchemaMessageFormatter$$implXMsgSchemaMessageFormatterFormatRqstXmlPreamble$$implXMsgSchemaMessageFormatterFormatRqstXmlPostamble$$implXMsgSchemaMessageFormatterFormatRspnXmlPreamble$$implXMsgSchemaMessageFormatterFormatRspnXmlPostamble$$implXMsgSchemaMessageFormatterFormatRspnNoDataFound$$implXMsgSchemaMessageFormatterFormatRspnException$$implXMsgSchemaMessageFormatterFormatRqstFileImport$$implXMsgSchemaMessageFormatterFormatRqstLogIn$$implXMsgSchemaMessageFormatterFormatRqstLogOut$$implXMsgSchemaMessageFormatterFormatRspnFileLoaded$$implXMsgSchemaMessageFormatterFormatRspnServerProcExecuted$$implXMsgSchemaMessageFormatterFormatRspnLoggedIn$$implXMsgSchemaMessageFormatterFormatRspnLoggedOut$$JavaXMsgSchemaFormatters$$ReferencedJavaXMsgSchemaFormatters$}
</GenFile>

	<GenRule GenDef="SchemaDef" Name="implAttributesSchemaMessageFormatter">
	private String messageNamespace = "$SchemaName$";

	public String getMessageNamespace() {
		return( messageNamespace );
	}

	public void setMessageNamespace( String value ) {
		final String S_ProcName = "setMessageNamespace";
		if( ( value == null ) || ( value.length() &lt;= 0 ) ) {
			throw new CFLibNullArgumentException( getClass(),
				S_ProcName,
				1,
				"value" );
		}
		messageNamespace = new String( value );
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="ReferencedJavaXMsgSchemaFormatters"
		>$iterate SchemaRefs( each ApplyJavaXMsgSchemaFormatters empty empty )$</GenRule>

	<GenRule GenDef="SchemaRef" Name="ApplyJavaXMsgSchemaFormatters"
		>$reference RefSchema JavaXMsgSchemaFormatters$</GenRule>

	<GenRule GenDef="SchemaDef" Name="ReferencedJavaXMsgSchemaImport"
		>$iterate SchemaRefs( each ApplyJavaXMsgSchemaImport empty empty )$</GenRule>

	<GenRule GenDef="SchemaRef" Name="ApplyJavaXMsgSchemaImport"
		>$reference RefSchema JavaXMsgSchemaImport$</GenRule>

	<GenRule GenDef="SchemaDef" Name="implConstructXMsgSchemaMessageFormatter">
	public $SchemaName$XMsgSchemaMessageFormatter() {
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="implXMsgSchemaMessageFormatterFormatRqstXmlPreamble">
	public static String formatRqstXmlPreamble() {
		String retval =
				"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;"
			+	"&lt;$SchemaName$Rqst\n"
			+	"\t\txmlns=\"$SchemaXMsgRqstNamespace$\"\n"
			+	"\t\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
			+	"\t\txmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n"
			+	"\t\txsi:schemaLocation=\"$SchemaXMsgRqstNamespace$ file:../bin/xsd/$lower SchemaName$-rqst.xsd\" &gt;";
		return( retval );
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="implXMsgSchemaMessageFormatterFormatRqstXmlPostamble">
	public static String formatRqstXmlPostamble() {
		String retval =
				"&lt;/$SchemaName$Rqst&gt;\n";
		return( retval );
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="implXMsgSchemaMessageFormatterFormatRspnXmlPreamble">
	public String formatRspnXmlPreamble() {
		String lowerNamespace = messageNamespace.toLowerCase();
		String retval =
				"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;"
			+	"&lt;" + messageNamespace + "Rspn\n"
			+	"\t\txmlns=\"uri://" + lowerNamespace + "/" + lowerNamespace + "rspn\"\n"
			+	"\t\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
			+	"\t\txmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n"
			+	"\t\txsi:schemaLocation=\"uri://" + lowerNamespace + "/" + lowerNamespace + "rspn file:../bin/xsd/" + lowerNamespace + "-rspn.xsd\" &gt;";
		return( retval );
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="implXMsgSchemaMessageFormatterFormatRspnXmlPostamble">
	public String formatRspnXmlPostamble() {
		String retval =
				"&lt;/" + messageNamespace + "Rspn&gt;\n";
		return( retval );
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="implXMsgSchemaMessageFormatterFormatRspnNoDataFound">
	public static String formatRspnNoDataFound() {
		String retval = "&lt;RspnNoDataFound /&gt;";
		return( retval );
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="implXMsgSchemaMessageFormatterFormatRspnException">
	public static String formatRspnException( String separator, Throwable t ) {
		String msg = t.getMessage();
		if( msg == null ) {
			msg = "";
		}
		String retval = "&lt;RspnException "
			+	CFLibXmlUtil.formatRequiredXmlString( null,
					"Name",
					t.getClass().getName() )
			+	CFLibXmlUtil.formatRequiredXmlString( separator,
					"Message",
					msg )
			+	" /&gt;";
		return( retval );
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="implXMsgSchemaMessageFormatterFormatRqstFileImport">
	public static String formatRqstFileImport( String separator, String fileName, String fileContent ) {
		String retval = "&lt;RqstFileImport "
			+	CFLibXmlUtil.formatRequiredXmlString( null,
					"FileName",
					fileName )
			+	CFLibXmlUtil.formatRequiredXmlString( separator,
					"FileContent",
					fileContent )
			+	" /&gt;";
		return( retval );
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="implXMsgSchemaMessageFormatterFormatRqstLogIn">
	public static String formatRqstLogIn( String separator, String loginId, String deviceName, byte devEncPWHash[], String clusterName, String tenantName ) {
		String retval = "&lt;RqstLogIn "
			+	CFLibXmlUtil.formatRequiredXmlString( null,
					"LoginId",
					loginId )
			+	CFLibXmlUtil.formatRequiredXmlString( separator,
					"DeviceName",
					deviceName )
			+	CFLibXmlUtil.formatRequiredBlob( separator,
					"DevEncPWHash",
					devEncPWHash )
			+	CFLibXmlUtil.formatRequiredXmlString( separator,
					"ClusterName",
					clusterName )
			+	CFLibXmlUtil.formatRequiredXmlString( separator,
					"TenantName",
					tenantName )
			+	" /&gt;";
		return( retval );
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="implXMsgSchemaMessageFormatterFormatRspnFileLoaded">
	public static String formatRspnFileLoaded( String separator, String logContent ) {
		String retval = "&lt;RspnFileLoaded "
			+	CFLibXmlUtil.formatRequiredXmlString( null,
					"LogContent",
					logContent )
			+	" /&gt;";
		return( retval );
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="implXMsgSchemaMessageFormatterFormatRspnServerProcExecuted">
	public static String formatRspnServerProcExecuted( String separator, boolean dataChanged ) {
		String retval = "&lt;RspnServerProcExecuted "
			+	CFLibXmlUtil.formatRequiredBoolean( null,
					"DataChanged",
					dataChanged )
			+	" /&gt;";
		return( retval );
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="implXMsgSchemaMessageFormatterFormatRspnLoggedIn">
	public static String formatRspnLoggedIn( String separator, long clusterId, String clusterName, long tenantId, String tenantName, UUID secUserId, String secUserName, UUID secSessionId ) {
		String retval = "&lt;RspnLoggedIn "
			+	CFLibXmlUtil.formatRequiredInt64( null,
					"ClusterId",
					clusterId )
			+	CFLibXmlUtil.formatRequiredXmlString( separator,
					"ClusterName",
					clusterName )
			+	CFLibXmlUtil.formatRequiredInt64( separator,
					"TenantId",
					tenantId )
			+	CFLibXmlUtil.formatRequiredXmlString( separator,
					"TenantName",
					tenantName )
			+	CFLibXmlUtil.formatRequiredXmlString( separator,
					"SecUserId",
					secUserId.toString() )
			+	CFLibXmlUtil.formatRequiredXmlString( separator,
					"SecUserName",
					secUserName )
			+	CFLibXmlUtil.formatRequiredXmlString( separator,
					"SecSessionId",
					secSessionId.toString() )
			+	" /&gt;";
		return( retval );
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="implXMsgSchemaMessageFormatterFormatRqstLogOut">
	public static String formatRqstLogOut( String separator, UUID secSessionId ) {
		String retval = "&lt;RqstLogOut "
			+	CFLibXmlUtil.formatRequiredXmlString( null,
					"SecSessionId",
					secSessionId.toString() )
			+	" /&gt;";
		return( retval );
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="implXMsgSchemaMessageFormatterFormatRspnLoggedOut">
	public static String formatRspnLoggedOut( String separator, UUID secSessionId ) {
		String retval = "&lt;RspnLoggedOut "
			+	CFLibXmlUtil.formatRequiredXmlString( null,
					"SecSessionId",
					secSessionId.toString() )
			+	" /&gt;";
		return( retval );
	}
</GenRule>

</RuleSet>
