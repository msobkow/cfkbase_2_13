<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="java+jee"
	Name="src/SchemaXMsgSrvWar/SchemaXMsgSrvWarUtil.java"
	Revision="2.13"
	Descr="Java 11 XMsg Server Utilities">

	<GenFile GenDef="SchemaDef" Name="fileSchemaXMsgSrvWarUtilJava"
			GenerateOnce="false"
			ModuleName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$XMsgSrvWar"
		SourceBundle="java"
		BasePackageName="$reference ManufacturingSchema lower PackageName$xmsgsrvwar.src"
		SubPackageName="$lower JavaPackage$.$SchemaName$XMsgSrvWar"
		ExpansionClassName="$SchemaName$XMsgSrvWarUtilJava"
		ExpansionKeyName="$SchemaName$XMsgSrvWarUtilJava"
		ExpansionFileName="$SchemaName$XMsgSrvWarUtil.java">
// Description: Java 11 XMsg Server Utilities

$MssSourceLicense$

package $reference ManufacturingSchema lower JavaPackage$.$SchemaName$XMsgSrvWar;

import java.io.*;
import java.security.*;
import java.util.*;

import javax.mail.*;
import javax.mail.internet.*;
import javax.naming.*;

import org.msscf.msscf.cflib.CFLib.*;$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaName empty empty )$$poptop SchemaDef importJavaPackageSchemaName$$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaNameObj empty empty )$$poptop SchemaDef importJavaPackageSchemaNameObj$

public class $SchemaName$XMsgSrvWarUtil {$SchemaXMsgSrvWarUtilPart01$$SchemaXMsgSrvWarUtilPart02$$SchemaXMsgSrvWarUtilPart03$$SchemaXMsgSrvWarUtilPart04$
}
</GenFile>

	<GenRule GenDef="SchemaDef" Name="SchemaXMsgSrvWarUtilPart01">
	private static final long serialVersionUID = 1L;

	protected String smtpUsername = null;
	protected String smtpPassword = null;

	public $SchemaName$XMsgSrvWarUtil() {
		super();
	}

	public void sendEMailToUser(
		I$SecSchemaName$SecUserObj toUser,
		String msgSubject,
		String msgBody )
	throws
		IOException,
		MessagingException,
		NamingException
	{

		final String S_ProcName = "sendEMailToUser";

		Properties props = System.getProperties();

		Context ctx = new InitialContext();

		String smtpEmailFrom = (String)ctx.lookup( "java:comp/env/$SchemaName$SmtpEmailFrom");
		if( ( smtpEmailFrom == null ) || ( smtpEmailFrom.length() &lt;= 0 ) ) {
			throw new CFLibNullArgumentException( getClass(),
					S_ProcName,
					0,
					"JNDI lookup for $SchemaName$SmtpEmailFrom" );
		}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaXMsgSrvWarUtilPart02">
		smtpUsername = (String)ctx.lookup( "java:comp/env/$SchemaName$SmtpUsername");
		if( ( smtpUsername == null ) || ( smtpUsername.length() &lt;= 0 ) ) {
			throw new CFLibNullArgumentException( getClass(),
					S_ProcName,
					0,
					"JNDI lookup for $SchemaName$SmtpUsername" );
		}

		smtpPassword = (String)ctx.lookup( "java:comp/env/$SchemaName$SmtpPassword");
		if( ( smtpPassword == null ) || ( smtpPassword.length() &lt;= 0 ) ) {
			throw new CFLibNullArgumentException( getClass(),
					S_ProcName,
					0,
					"JNDI lookup for $SchemaName$SmtpPassword" );
		}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaXMsgSrvWarUtilPart03">
		Session emailSess = Session.getInstance( props,
			new Authenticator() {
				protected PasswordAuthentication getPasswordAuthentication() {
					return new PasswordAuthentication( smtpUsername, smtpPassword );
				}
			} );
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaXMsgSrvWarUtilPart04">
		MimeMessage msg = new MimeMessage( emailSess );
		msg.setFrom( new InternetAddress( smtpEmailFrom ) );
		InternetAddress mailTo[] = InternetAddress.parse( toUser.getRequiredEMailAddress(), false );
		msg.setRecipient( Message.RecipientType.TO, mailTo[0] );
		msg.setSubject( ( msgSubject != null ) ? msgSubject : "No subject" );
		msg.setSentDate( new Date() );
		msg.setContent( msgBody, "text/html" );
		msg.saveChanges();

		Transport.send( msg );
	}
</GenRule>

</RuleSet>
