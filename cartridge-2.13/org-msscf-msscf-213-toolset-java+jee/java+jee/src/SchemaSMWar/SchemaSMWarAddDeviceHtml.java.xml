<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="java+jee"
	Name="src/SchemaSMWar/SchemaSMWarAddDeviceHtml.java"
	Revision="2.13"
	Descr="Java 11 Sec Manager Add Device Servlet">

	<GenFile GenDef="SchemaDef" Name="fileSchemaSMWarAddDeviceHtmlJava"
			GenerateOnce="false"
			ModuleName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$SMWar"
		SourceBundle="java"
		BasePackageName="$reference ManufacturingSchema lower PackageName$smwar.src"
		SubPackageName="$lower JavaPackage$.$SchemaName$SMWar"
		ExpansionClassName="$SchemaName$SMWarAddDeviceHtmlJava"
		ExpansionKeyName="$SchemaName$SMWarAddDeviceHtmlJava"
		ExpansionFileName="$SchemaName$SMWarAddDeviceHtml.java">
// Description: Java 11 Sec Manager Add Device Servlet

$MssSourceLicense$

package $reference ManufacturingSchema lower JavaPackage$.$SchemaName$SMWar;

import java.io.*;
import java.security.*;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.X509EncodedKeySpec;
import java.util.*;

import javax.crypto.Cipher;
import javax.crypto.NoSuchPaddingException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;

import org.apache.commons.codec.binary.Base64;

import org.msscf.msscf.cflib.CFLib.*;$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaName empty empty )$$poptop SchemaDef importJavaPackageSchemaName$$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaNameObj empty empty )$$poptop SchemaDef importJavaPackageSchemaNameObj$

/**
 * Servlet implementation class $SchemaName$SMWarLoginHtml
 */
@WebServlet("/$SchemaName$SMWarAddDeviceHtml")
public class $SchemaName$SMWarAddDeviceHtml extends HttpServlet {$SchemaSMWarAddDevicePart01$$SchemaSMWarAddDevicePart02$$SchemaSMWarAddDevicePart03$$SchemaSMWarAddDevicePart04$$SchemaSMWarAddDevicePart05$$SchemaSMWarAddDevicePart06$$SchemaSMWarAddDevicePart07$$SchemaSMWarAddDevicePart08$$SchemaSMWarAddDevicePart09$$SchemaSMWarAddDevicePart10$$SchemaSMWarAddDevicePart11$$SchemaSMWarAddDevicePart12$$SchemaSMWarAddDevicePart13$$SchemaSMWarAddDevicePart14$
}
</GenFile>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart01">
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public $SchemaName$SMWarAddDeviceHtml() {
		super();
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		final String S_ProcName="doGet";
		I$SchemaName$SchemaObj schemaObj;
		HttpSession sess = request.getSession( false );
		if( sess == null ) {
			sess = request.getSession( true );
			schemaObj = new $SchemaName$SchemaPooledObj();
			sess.setAttribute( "SchemaObj", schemaObj );
		}
		else {
			schemaObj = (I$SchemaName$SchemaObj)sess.getAttribute( "SchemaObj" );
			if( schemaObj == null ) {
				schemaObj = new $SchemaName$SchemaPooledObj();
				sess.setAttribute( "SchemaObj", schemaObj );
			}
		}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart02">
		$SecSchemaName$Authorization auth = schemaObj.getAuthorization();
		if( auth == null ) {
			response.sendRedirect( "$SchemaName$SMWarLoginHtml" );
			return;
		}

		I$SchemaName$Schema dbSchema = null;
		try {
			dbSchema = (I$SchemaName$Schema)$SchemaName$SchemaPool.getSchemaPool().getInstance();
			schemaObj.setBackingStore( dbSchema );
			schemaObj.beginTransaction();
			I$SecSchemaName$SecUserObj secUser = schemaObj.getSecUserTableObj().readSecUserByIdIdx( auth.getSecUserId() );

			I$SecSchemaName$ClusterObj secCluster = schemaObj.getClusterTableObj().readClusterByIdIdx( auth.getSecClusterId() );
			if( secCluster == null ) {
				throw new CFLibNullArgumentException( getClass(),
					S_ProcName,
					0,
					"secCluster" );
			}
			String clusterDescription = secCluster.getRequiredDescription();
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart03">
			response.setContentType( "text/html" );
			PrintWriter out = response.getWriter();
			out.println( "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;" );
			out.println( "&lt;HTML&gt;" );
			out.println( "&lt;BODY&gt;" );
			out.println( "&lt;form method=\"post\" formaction=\"$SchemaName$SMWarAddDeviceHtml\"&gt;" );
			out.println( "&lt;H1 style=\"text-align:center\"&gt;" + clusterDescription + " Sec Manager&lt;/H1&gt;" );
			out.println( "&lt;H2 style=\"text-align:center\"&gt;Add new device for "
					+ secUser.getRequiredEMailAddress()
					+ "&lt;/H2&gt;" );
			out.println( "&lt;p&gt;" );
			out.println( "&lt;table style=\"width:90%\"&gt;" );
			out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Device Name:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"DeviceName\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
			out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Public Key:&lt;/th&gt;&lt;td&gt;&lt;textarea name=\"PublicKey\" cols=\"60\" rows=\"10\"&gt;&lt;/textarea&gt;&lt;/td&gt;&lt;/tr&gt;");
			out.println( "&lt;/table&gt;" );
			out.println( "&lt;p style=\"text-align:center\"&gt;&lt;button type=\"submit\" name=\"Ok\"\"&gt;Add Device&lt;/button&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;button type=\"button\" name=\"Cancel\"\" onclick=\"window.location.href='$SchemaName$SMWarSecMainHtml'\"&gt;Cancel;&lt;/button&gt;" );
			out.println( "&lt;/form&gt;" );
			out.println( "&lt;/BODY&gt;" );
			out.println( "&lt;/HTML&gt;" );
		}</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart04">
		catch( RuntimeException e ) {
			throw new CFLibRuntimeException( getClass(),
				S_ProcName,
				"Caught RuntimeException -- " + e.getMessage(),
				e );
		}
		finally {
			if( dbSchema != null ) {
				try {
					if( schemaObj.isTransactionOpen() ) { 
						schemaObj.rollback();
					}
				}
				catch( RuntimeException e ) {
				}
				schemaObj.setBackingStore( null );
				$SchemaName$SchemaPool.getSchemaPool().releaseInstance( dbSchema );
			}
		}
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart05">
	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		final String S_ProcName = "doPost";

		I$SchemaName$SchemaObj schemaObj;
		HttpSession sess = request.getSession( false );
		if( sess == null ) {
			sess = request.getSession( true );
			schemaObj = new $SchemaName$SchemaPooledObj();
			sess.setAttribute( "SchemaObj", schemaObj );
		}
		else {
			schemaObj = (I$SchemaName$SchemaObj)sess.getAttribute( "SchemaObj" );
			if( schemaObj == null ) {
				response.sendRedirect( "$SchemaName$SMWarLoginHtml" );
				return;
			}
		}

		$SecSchemaName$Authorization auth = schemaObj.getAuthorization();
		if( auth == null ) {
			response.sendRedirect( "$SchemaName$SMWarLoginHtml" );
			return;
		}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart06">
		I$SecSchemaName$SecUserObj secUser = null;
		I$SecSchemaName$ClusterObj secCluster = null;
		String clusterDescription = "";

		I$SchemaName$Schema dbSchema = null;
		try {
			dbSchema = (I$SchemaName$Schema)$SchemaName$SchemaPool.getSchemaPool().getInstance();
			schemaObj.setBackingStore( dbSchema );
			schemaObj.beginTransaction();

			secUser = schemaObj.getSecUserTableObj().readSecUserByIdIdx( auth.getSecUserId() );

			secCluster = schemaObj.getClusterTableObj().readClusterByIdIdx( auth.getSecClusterId() );
			if( secCluster == null ) {
				throw new CFLibNullArgumentException( getClass(),
					S_ProcName,
					0,
					"secCluster" );
			}
			clusterDescription = secCluster.getRequiredDescription();
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart07">
			String deviceName = request.getParameter( "DeviceName" );
			if( ( deviceName == null ) || ( deviceName.length() &lt;= 0 ) ) {
				response.setContentType( "text/html" );
				PrintWriter out = response.getWriter();
				out.println( "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;" );
				out.println( "&lt;HTML&gt;" );
				out.println( "&lt;BODY&gt;" );
				out.println( "&lt;form method=\"post\" formaction=\"$SchemaName$SMWarAddDeviceHtml\"&gt;" );
				out.println( "&lt;H1 style=\"text-align:center\"&gt;" + clusterDescription + " Sec Manager&lt;/H1&gt;" );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;ERROR&lt;/H2&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;Device Name must be specified." );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;Add new device for "
						+ secUser.getRequiredEMailAddress()
						+ "&lt;/H2&gt;" );
				out.println( "&lt;p&gt;" );
				out.println( "&lt;table style=\"width:90%\"&gt;" );
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Device Name:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"DeviceName\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Public Key:&lt;/th&gt;&lt;td&gt;&lt;textarea name=\"PublicKey\" cols=\"60\" rows=\"10\"&gt;&lt;/textarea&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;/table&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;&lt;button type=\"submit\" name=\"Ok\"\"&gt;Add Device&lt;/button&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;button type=\"button\" name=\"Cancel\"\" onclick=\"window.location.href='$SchemaName$SMWarSecMainHtml'\"&gt;Cancel&lt;/button&gt;" );
				out.println( "&lt;/form&gt;" );
				out.println( "&lt;/BODY&gt;" );
				out.println( "&lt;/HTML&gt;" );
				return;
			}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart08">
			I$SecSchemaName$SecDeviceObj secDev = schemaObj.getSecDeviceTableObj().readSecDeviceByIdIdx( secUser.getRequiredSecUserId(), deviceName );
			if( secDev != null ) {
				response.setContentType( "text/html" );
				PrintWriter out = response.getWriter();
				out.println( "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;" );
				out.println( "&lt;HTML&gt;" );
				out.println( "&lt;BODY&gt;" );
				out.println( "&lt;form method=\"post\" formaction=\"$SchemaName$SMWarAddDeviceHtml\"&gt;" );
				out.println( "&lt;H1 style=\"text-align:center\"&gt;" + clusterDescription + " Sec Manager&lt;/H1&gt;" );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;ERROR&lt;/H2&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;Device Name \"" + deviceName + "\" already in use." );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;Add new device for "
						+ secUser.getRequiredEMailAddress()
						+ "&lt;/H2&gt;" );
				out.println( "&lt;p&gt;" );
				out.println( "&lt;table style=\"width:90%\"&gt;" );
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Device Name:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"DeviceName\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Public Key:&lt;/th&gt;&lt;td&gt;&lt;textarea name=\"PublicKey\" cols=\"60\" rows=\"10\"&gt;&lt;/textarea&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;/table&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;&lt;button type=\"submit\" name=\"Ok\"\"&gt;Add Device&lt;/button&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;button type=\"button\" name=\"Cancel\"\" onclick=\"window.location.href='$SchemaName$SMWarSecMainHtml'\"&gt;Cancel&lt;/button&gt;" );
				out.println( "&lt;/form&gt;" );
				out.println( "&lt;/BODY&gt;" );
				out.println( "&lt;/HTML&gt;" );
				return;
			}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart09">
			String publicKey = request.getParameter( "PublicKey" );
			if( ( publicKey == null ) || ( publicKey.length() &lt;= 0 ) ) {
				response.setContentType( "text/html" );
				PrintWriter out = response.getWriter();
				out.println( "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;" );
				out.println( "&lt;HTML&gt;" );
				out.println( "&lt;BODY&gt;" );
				out.println( "&lt;form method=\"post\" formaction=\"$SchemaName$SMWarAddDeviceHtml\"&gt;" );
				out.println( "&lt;H1 style=\"text-align:center\"&gt;" + clusterDescription + " Sec Manager&lt;/H1&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;Public Key must be specified." );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;Add new device for "
						+ secUser.getRequiredEMailAddress()
						+ "&lt;/H2&gt;" );
				out.println( "&lt;p&gt;" );
				out.println( "&lt;table style=\"width:90%\"&gt;" );
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Device Name:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"DeviceName\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Public Key:&lt;/th&gt;&lt;td&gt;&lt;textarea name=\"PublicKey\" cols=\"60\" rows=\"10\"&gt;&lt;/textarea&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;/table&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;&lt;button type=\"submit\" name=\"Ok\"\"&gt;Add Device&lt;/button&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;button type=\"button\" name=\"Cancel\"\" onclick=\"window.location.href='$SchemaName$SMWarSecMainHtml'\"&gt;Cancel&lt;/button&gt;" );
				out.println( "&lt;/form&gt;" );
				out.println( "&lt;/BODY&gt;" );
				out.println( "&lt;/HTML&gt;" );
				return;
			}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart10">
			byte wrapped[] = Base64.decodeBase64( publicKey );

			X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec( wrapped );
			KeyFactory kf = KeyFactory.getInstance( "RSA" );
			if( kf == null ) {
				throw new CFLibNullArgumentException( getClass(),
					S_ProcName,
					0,
					"kf" );
			}

			PublicKey decodedPublicKey = kf.generatePublic( x509KeySpec );
			if( decodedPublicKey == null ) {
				response.setContentType( "text/html" );
				PrintWriter out = response.getWriter();
				out.println( "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;" );
				out.println( "&lt;HTML&gt;" );
				out.println( "&lt;BODY&gt;" );
				out.println( "&lt;form method=\"post\" formaction=\"$SchemaName$SMWarAddDeviceHtml\"&gt;" );
				out.println( "&lt;H1 style=\"text-align:center\"&gt;" + clusterDescription + " Sec Manager&lt;/H1&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;Public Key must be a valid RSA 2048 Key." );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;Add new device for "
						+ secUser.getRequiredEMailAddress()
						+ "&lt;/H2&gt;" );
				out.println( "&lt;p&gt;" );
				out.println( "&lt;table style=\"width:90%\"&gt;" );
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Device Name:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"DeviceName\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Public Key:&lt;/th&gt;&lt;td&gt;&lt;textarea name=\"PublicKey\" cols=\"60\" rows=\"10\"&gt;&lt;/textarea&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;/table&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;&lt;button type=\"submit\" name=\"Ok\"\"&gt;Add Device&lt;/button&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;button type=\"button\" name=\"Cancel\"\" onclick=\"window.location.href='$SchemaName$SMWarSecMainHtml'\"&gt;Cancel&lt;/button&gt;" );
				out.println( "&lt;/form&gt;" );
				out.println( "&lt;/BODY&gt;" );
				out.println( "&lt;/HTML&gt;" );
				return;
			}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart11">
			I$SecSchemaName$ClusterObj systemCluster = schemaObj.getClusterTableObj().readClusterByUDomNameIdx( "system" );
			I$SecSchemaName$TenantObj systemTenant = schemaObj.getTenantTableObj().readTenantByUNameIdx( systemCluster.getRequiredId(), "system" );
			I$SecSchemaName$SecUserObj systemUser = schemaObj.getSecUserTableObj().readSecUserByULoginIdx( "system" );
			I$SecSchemaName$SecSessionObj systemSession = schemaObj.getSecSessionTableObj().newInstance();
			I$SecSchemaName$SecSessionEditObj editSystemSession = (I$SecSchemaName$SecSessionEditObj)systemSession.beginEdit();
			editSystemSession.setRequiredContainerSecUser( systemUser );
			editSystemSession.setRequiredStart( Calendar.getInstance() );
			systemSession = editSystemSession.create();
			editSystemSession = null;

			$SecSchemaName$Authorization secAuth = new $SecSchemaName$Authorization();
			secAuth.setSecCluster( systemCluster );
			secAuth.setSecTenant( systemTenant );
			secAuth.setSecSession( systemSession );
			schemaObj.setAuthorization( secAuth );

			secDev = schemaObj.getSecDeviceTableObj().newInstance();
			I$SecSchemaName$SecDeviceEditObj editDev = secDev.beginEdit();
			editDev.setRequiredContainerSecUser( secUser );
			editDev.setRequiredDevName( deviceName );
			editDev.setOptionalPubKey( publicKey );
			secDev = editDev.create();
			editDev = null;
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart12">
			if( null == secUser.getOptionalLookupDefDev() ) {
				I$SecSchemaName$SecUserEditObj editSecUser = secUser.beginEdit();
				editSecUser.setOptionalLookupDefDev( secDev );
				editSecUser.update();
				editSecUser = null;
			}

			editSystemSession = (I$SecSchemaName$SecSessionEditObj)systemSession.beginEdit();
			editSystemSession.setOptionalFinish( Calendar.getInstance() );
			editSystemSession.update();
			editSystemSession = null;

			schemaObj.commit();

			schemaObj.setAuthorization( auth );

			response.sendRedirect( "$SchemaName$SMWarSecMainHtml" );

		}</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart13">
		catch( InvalidKeySpecException e ) {
			response.setContentType( "text/html" );
			PrintWriter out = response.getWriter();
			out.println( "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;" );
			out.println( "&lt;HTML&gt;" );
			out.println( "&lt;BODY&gt;" );
			out.println( "&lt;form method=\"post\" formaction=\"$SchemaName$SMWarAddDeviceHtml\"&gt;" );
			out.println( "&lt;H1 style=\"text-align:center\"&gt;" + clusterDescription + " Sec Manager&lt;/H1&gt;" );
			out.println( "&lt;p style=\"text-align:center\"&gt;Public Key must be a valid RSA 2048 Key." );
			out.println( "&lt;H2 style=\"text-align:center\"&gt;Add new device for "
					+ secUser.getRequiredEMailAddress()
					+ "&lt;/H2&gt;" );
			out.println( "&lt;p&gt;" );
			out.println( "&lt;table style=\"width:90%\"&gt;" );
			out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Device Name:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"DeviceName\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
			out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Public Key:&lt;/th&gt;&lt;td&gt;&lt;textarea name=\"PublicKey\" cols=\"60\" rows=\"10\"&gt;&lt;/textarea&gt;&lt;/td&gt;&lt;/tr&gt;");
			out.println( "&lt;/table&gt;" );
			out.println( "&lt;p style=\"text-align:center\"&gt;&lt;button type=\"submit\" name=\"Ok\"\"&gt;Add Device&lt;/button&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;button type=\"button\" name=\"Cancel\"\" onclick=\"window.location.href='$SchemaName$SMWarSecMainHtml'\"&gt;Cancel&lt;/button&gt;" );
			out.println( "&lt;/form&gt;" );
			out.println( "&lt;/BODY&gt;" );
			out.println( "&lt;/HTML&gt;" );
		}</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarAddDevicePart14">
		catch( NoSuchAlgorithmException e ) {
			throw new CFLibRuntimeException( getClass(),
				S_ProcName,
				"Caught NoSuchAlgorithmException -- " + e.getMessage(),
				e );
		}
		catch( RuntimeException e ) {
			throw new CFLibRuntimeException( getClass(),
				S_ProcName,
				"Caught RuntimeException -- " + e.getMessage(),
				e );
		}
		finally {
			schemaObj.setAuthorization( auth );
			if( dbSchema != null ) {
				try {
					if( schemaObj.isTransactionOpen() ) { 
						schemaObj.rollback();
					}
				}
				catch( RuntimeException e ) {
				}
				schemaObj.setBackingStore( null );
				$SchemaName$SchemaPool.getSchemaPool().releaseInstance( dbSchema );
			}
		}
	}</GenRule>

</RuleSet>
