<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="java+jee"
	Name="src/SchemaSMWar/SchemaSMWarCreateNewAccountHtml.java"
	Revision="2.13"
	Descr="Java 11 Sec Manager Create New Account Servlet">

	<GenFile GenDef="SchemaDef" Name="fileSchemaSMWarCreateNewAccountHtmlJava"
			GenerateOnce="false"
			ModuleName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$SMWar"
		SourceBundle="java"
		BasePackageName="$reference ManufacturingSchema lower PackageName$smwar.src"
		SubPackageName="$lower JavaPackage$.$SchemaName$SMWar"
		ExpansionClassName="$SchemaName$SMWarCreateNewAccountHtmlJava"
		ExpansionKeyName="$SchemaName$SMWarCreateNewAccountHtmlJava"
		ExpansionFileName="$SchemaName$SMWarCreateNewAccountHtml.java">
// Description: Java 11 Sec Manager Create New Account Servlet

$MssSourceLicense$

package $reference ManufacturingSchema lower JavaPackage$.$SchemaName$SMWar;

import java.io.IOException;
import java.io.PrintWriter;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;
import java.util.UUID;

import javax.mail.*;
import javax.mail.internet.*;
import javax.naming.*;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;

import org.apache.commons.codec.binary.Base64;

import org.msscf.msscf.cflib.CFLib.*;$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaName empty empty )$$poptop SchemaDef importJavaPackageSchemaName$$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaNameObj empty empty )$$poptop SchemaDef importJavaPackageSchemaNameObj$

/**
 * Servlet implementation class $SchemaName$SMWarCreateNewAccountHtml
 */
@WebServlet("/$SchemaName$SMWarCreateNewAccountHtml")
public class $SchemaName$SMWarCreateNewAccountHtml extends HttpServlet {$SchemaSMWarCreateNewAccountPart01$$SchemaSMWarCreateNewAccountPart02$$SchemaSMWarCreateNewAccountPart03$$SchemaSMWarCreateNewAccountPart04$$SchemaSMWarCreateNewAccountPart05$$SchemaSMWarCreateNewAccountPart06$$SchemaSMWarCreateNewAccountPart07$$SchemaSMWarCreateNewAccountPart08$$SchemaSMWarCreateNewAccountPart09$$SchemaSMWarCreateNewAccountPart10$$SchemaSMWarCreateNewAccountPart11$$SchemaSMWarCreateNewAccountPart12$$SchemaSMWarCreateNewAccountPart13$$SchemaSMWarCreateNewAccountPart14$$SchemaSMWarCreateNewAccountPart15$$SchemaSMWarCreateNewAccountPart16$$SchemaSMWarCreateNewAccountPart17$$SchemaSMWarCreateNewAccountPart18$$SchemaSMWarCreateNewAccountPart19$
}
</GenFile>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart01">
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public $SchemaName$SMWarCreateNewAccountHtml() {
		super();
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		final String S_ProcName="doGet";
		I$SchemaName$SchemaObj schemaObj;
		HttpSession sess = request.getSession( false );
		if( sess == null ) {
			sess = request.getSession( true );
			schemaObj = new $SchemaName$SchemaPooledObj();
			sess.setAttribute( "SchemaObj", schemaObj );
		}
		else {
			schemaObj = (I$SchemaName$SchemaObj)sess.getAttribute( "SchemaObj" );
			if( schemaObj == null ) {
				schemaObj = new $SchemaName$SchemaPooledObj();
				sess.setAttribute( "SchemaObj", schemaObj );
			}
		}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart02">
		I$SchemaName$Schema dbSchema = null;
		try {
			$SecSchemaName$Authorization auth = schemaObj.getAuthorization();
			if( auth != null ) {
				response.sendRedirect( "$SchemaName$SMWarSecMainHtml" );
				return;
			}

			dbSchema = (I$SchemaName$Schema)$SchemaName$SchemaPool.getSchemaPool().getInstance();
			schemaObj.setBackingStore( dbSchema );
			schemaObj.beginTransaction();
			I$SecSchemaName$SecUserObj systemUser = schemaObj.getSecUserTableObj().readSecUserByULoginIdx( "system" );
			String passwordHash = systemUser.getRequiredPasswordHash();
			if( ( passwordHash == null ) || ( passwordHash.length() &lt;= 0 ) || passwordHash.equals( "bootstrap" ) ) {
				response.sendRedirect( "$SchemaName$SMWarSetSystemPasswordHtml" );
				return;
			}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart03">
			I$SecSchemaName$SysClusterObj sysCluster = schemaObj.getSysClusterTableObj().readSysClusterByIdIdx( 1, false );
			if( sysCluster == null ) {
				throw new CFLibNullArgumentException( getClass(),
					S_ProcName,
					0,
					"sysCluster" );
			}

			I$SecSchemaName$ClusterObj resolvedCluster = sysCluster.getRequiredContainerCluster();
			if( resolvedCluster == null ) {
				throw new CFLibNullArgumentException( getClass(),
					S_ProcName,
					"resolvedCluster" );
			}
			String clusterDomName = resolvedCluster.getRequiredFullDomName();
			String clusterDescription = resolvedCluster.getRequiredDescription();
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart04">
			response.setContentType( "text/html" );
			PrintWriter out = response.getWriter();
			out.println( "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;" );
			out.println( "&lt;HTML&gt;" );
			out.println( "&lt;BODY&gt;" );
			out.println( "&lt;form method=\"post\" formaction=\"$SchemaName$SMWarCreateNewAccountHtml\"&gt;" );
			out.println( "&lt;H1 style=\"text-align:center\"&gt;" + clusterDescription + " Sec Manager&lt;/H1&gt;" );
			out.println( "&lt;H2 style=\"text-align:center\"&gt;Create New Account&lt;/H2&gt;" );
			out.println( "&lt;p&gt;" );
			out.println( "&lt;center&gt;" );
			out.println( "&lt;table style=\"width:75%\"&gt;" );
			out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Login Id:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"LoginId\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
			out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;EMail Address:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"EMailAddress\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
			out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"Password\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
			out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Confirm Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"ConfirmPassword\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
			out.println( "&lt;tr&gt;&lt;td colspan=\"2\" style=\"text-align:center\"&gt;&lt;button type=\"submit\" name=\"Ok\"\"&gt;Create Account&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;" );
			out.println( "&lt;tr&gt;&lt;td colSpan=\"2\" style=\"text-align:center\"&gt;You may now &lt;A HRef=\"$SchemaName$SMWarLoginHtml\"&gt;log in&lt;/A&gt; to the " + clusterDescription + " Sec Manager&lt;/td&gt;&lt;/tr&gt;" );
			out.println( "&lt;/table&gt;" );
			out.println( "&lt;/center&gt;" );
			out.println( "&lt;/form&gt;" );
			out.println( "&lt;/BODY&gt;" );
			out.println( "&lt;/HTML&gt;" );</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart05">
		}
		catch( RuntimeException e ) {
			throw new CFLibRuntimeException( getClass(),
				S_ProcName,
				"Caught RuntimeException -- " + e.getMessage(),
				e );
		}
		finally {
			if( dbSchema != null ) {
				try {
					if( schemaObj.isTransactionOpen() ) { 
						schemaObj.rollback();
					}
				}
				catch( RuntimeException e ) {
				}
				schemaObj.setBackingStore( null );
				$SchemaName$SchemaPool.getSchemaPool().releaseInstance( dbSchema );
			}
		}
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart06">
	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		final String S_ProcName = "doPost";

		I$SchemaName$SchemaObj schemaObj;
		HttpSession sess = request.getSession( false );
		if( sess == null ) {
			sess = request.getSession( true );
			schemaObj = new $SchemaName$SchemaPooledObj();
			sess.setAttribute( "SchemaObj", schemaObj );
		}
		else {
			schemaObj = (I$SchemaName$SchemaObj)sess.getAttribute( "SchemaObj" );
			if( schemaObj == null ) {
				schemaObj = new $SchemaName$SchemaPooledObj();
				sess.setAttribute( "SchemaObj", schemaObj );
			}
		}

		I$SchemaName$Schema dbSchema = null;
		try {
			$SecSchemaName$Authorization auth = schemaObj.getAuthorization();
			if( auth != null ) {
				response.sendRedirect( "$SchemaName$SMWarSecMainHtml" );
				return;
			}

			dbSchema = (I$SchemaName$Schema)$SchemaName$SchemaPool.getSchemaPool().getInstance();
			schemaObj.setBackingStore( dbSchema );
			schemaObj.beginTransaction();
			I$SecSchemaName$SecUserObj systemUser = schemaObj.getSecUserTableObj().readSecUserByULoginIdx( "system" );
			String passwordHash = systemUser.getRequiredPasswordHash();
			if( ( passwordHash == null ) || ( passwordHash.length() &lt;= 0 ) || passwordHash.equals( "bootstrap" ) ) {
				response.sendRedirect( "$SchemaName$SMWarSetSystemPasswordHtml" );
				return;
			}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart07">
			I$SecSchemaName$ClusterObj resolvedCluster;
			I$SecSchemaName$SysClusterObj sysCluster = schemaObj.getSysClusterTableObj().readSysClusterByIdIdx( 1, false );
			if( sysCluster == null ) {
				throw new CFLibNullArgumentException( getClass(),
					S_ProcName,
					0,
					"sysCluster" );
			}
			resolvedCluster = sysCluster.getRequiredContainerCluster();
			if( resolvedCluster == null ) {
				throw new CFLibNullArgumentException( getClass(),
					S_ProcName,
					"resolvedCluster" );
			}
			String clusterDomName = resolvedCluster.getRequiredFullDomName();
			String clusterDescription = resolvedCluster.getRequiredDescription();
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart08">
			String loginId = (String)request.getParameter( "LoginId" );
			if( ( loginId == null ) || ( loginId.length() &lt;= 0 ) ) {
				response.setContentType( "text/html" );
				PrintWriter out = response.getWriter();
				out.println( "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;" );
				out.println( "&lt;HTML&gt;" );
				out.println( "&lt;BODY&gt;" );
				out.println( "&lt;form method=\"post\" formaction=\"$SchemaName$SMWarCreateNewAccountHtml\"&gt;" );
				out.println( "&lt;H1 style=\"text-align:center\"&gt;" + clusterDescription + " Sec Manager&lt;/H1&gt;" );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;ERROR&lt;/H2&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;" );
				out.println( "Login Id must be specified." );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;Create New Account&lt;/H2&gt;" );
				out.println( "&lt;p&gt;" );
				out.println( "&lt;center&gt;" );
				out.println( "&lt;table style=\"width:75%\"&gt;" );
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Login Id:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"LoginId\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;EMail Address:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"EMailAddress\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"Password\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Confirm Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"ConfirmPassword\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;td colspan=\"2\" style=\"text-align:center\"&gt;&lt;button type=\"submit\" name=\"Ok\"\"&gt;Create Account&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;" );
				out.println( "&lt;tr&gt;&lt;td colSpan=\"2\" style=\"text-align:center\"&gt;&lt;A HRef=\"$SchemaName$SMWarLoginHtml\"&gt;Back to " + clusterDescription + " Sec Manager Login&lt;/A&gt;&lt;/td&gt;&lt;/tr&gt;" );
				out.println( "&lt;/table&gt;" );
				out.println( "&lt;/center&gt;" );
				out.println( "&lt;/form&gt;" );
				out.println( "&lt;/BODY&gt;" );
				out.println( "&lt;/HTML&gt;" );
				return;
			}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart09">
			String emailAddress = (String)request.getParameter( "EMailAddress" );
			if( ( emailAddress == null ) || ( emailAddress.length() &lt;= 0 ) ) {
				response.setContentType( "text/html" );
				PrintWriter out = response.getWriter();
				out.println( "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;" );
				out.println( "&lt;HTML&gt;" );
				out.println( "&lt;BODY&gt;" );
				out.println( "&lt;form method=\"post\" formaction=\"$SchemaName$SMWarCreateNewAccountHtml\"&gt;" );
				out.println( "&lt;H1 style=\"text-align:center\"&gt;" + clusterDescription + " Sec Manager&lt;/H1&gt;" );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;ERROR&lt;/H2&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;" );
				out.println( "EMail Address must be specified." );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;Create New Account&lt;/H2&gt;" );
				out.println( "&lt;p&gt;" );
				out.println( "&lt;center&gt;" );
				out.println( "&lt;table style=\"width:75%\"&gt;" );
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Login Id:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"LoginId\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;EMail Address:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"EMailAddress\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"Password\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Confirm Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"ConfirmPassword\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;td colspan=\"2\" style=\"text-align:center\"&gt;&lt;button type=\"submit\" name=\"Ok\"\"&gt;Create Account&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;" );
				out.println( "&lt;tr&gt;&lt;td colSpan=\"2\" style=\"text-align:center\"&gt;&lt;A HRef=\"$SchemaName$SMWarLoginHtml\"&gt;Back to " + clusterDescription + " Sec Manager Login&lt;/A&gt;&lt;/td&gt;&lt;/tr&gt;" );
				out.println( "&lt;/table&gt;" );
				out.println( "&lt;/center&gt;" );
				out.println( "&lt;/form&gt;" );
				out.println( "&lt;/BODY&gt;" );
				out.println( "&lt;/HTML&gt;" );
				return;
			}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart10">
			I$SecSchemaName$SecUserObj existingUser = schemaObj.getSecUserTableObj().readSecUserByULoginIdx( loginId, true );
			if( existingUser != null ) {

				if( null != existingUser.getOptionalEMailConfirmUuid() ) {
					sendConfirmationEMail( request, existingUser, resolvedCluster );
				}

				response.setContentType( "text/html" );
				PrintWriter out = response.getWriter();
				out.println( "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;" );
				out.println( "&lt;HTML&gt;" );
				out.println( "&lt;BODY&gt;" );
				out.println( "&lt;form method=\"post\" formaction=\"$SchemaName$SMWarCreateNewAccountHtml\"&gt;" );
				out.println( "&lt;H1 style=\"text-align:center\"&gt;" + clusterDescription + " Sec Manager&lt;/H1&gt;" );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;ERROR&lt;/H2&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;" );

				if( null != existingUser.getOptionalEMailConfirmUuid() ) {
					out.println( "User id \"" + loginId + "\" has already been registered.  The confirmation email has been resent." );
				}
				else {
					out.println( "User id \"" + loginId + "\" is already in use." );
				}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart11">
				out.println( "&lt;p&gt;" );
				out.println( "&lt;center&gt;" );
				out.println( "&lt;table style=\"width:75%\"&gt;" );
				if( null == existingUser.getOptionalEMailConfirmUuid() ) {
					out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Login Id:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"LoginId\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
					out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;EMail Address:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"EMailAddress\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
					out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"Password\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
					out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Confirm Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"ConfirmPassword\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
					out.println( "&lt;tr&gt;&lt;td colspan=\"2\" style=\"text-align:center\"&gt;&lt;button type=\"submit\" name=\"Ok\"\"&gt;Create Account&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;" );
				}
				out.println( "&lt;tr&gt;&lt;td colSpan=\"2\" style=\"text-align:center\"&gt;&lt;A HRef=\"$SchemaName$SMWarLoginHtml\"&gt;Back to " + clusterDescription + " Sec Manager Login&lt;/A&gt;&lt;/td&gt;&lt;/tr&gt;" );
				out.println( "&lt;/table&gt;" );
				out.println( "&lt;/center&gt;" );
				out.println( "&lt;/form&gt;" );
				out.println( "&lt;/BODY&gt;" );
				out.println( "&lt;/HTML&gt;" );

				return;
			}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart12">
			String password = (String)request.getParameter( "Password" );
			if( ( password == null ) || ( password.length() &lt;= 0 ) ) {
				response.setContentType( "text/html" );
				PrintWriter out = response.getWriter();
				out.println( "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;" );
				out.println( "&lt;HTML&gt;" );
				out.println( "&lt;BODY&gt;" );
				out.println( "&lt;form method=\"post\" formaction=\"$SchemaName$SMWarCreateNewAccountHtml\"&gt;" );
				out.println( "&lt;H1 style=\"text-align:center\"&gt;" + clusterDescription + " Sec Manager&lt;/H1&gt;" );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;ERROR&lt;/H2&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;" );
				out.println( "Password must be specified." );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;Create New Account&lt;/H2&gt;" );
				out.println( "&lt;p&gt;" );
				out.println( "&lt;center&gt;" );
				out.println( "&lt;table style=\"width:75%\"&gt;" );
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Login Id:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"LoginId\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;EMail Address:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"EMailAddress\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"Password\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Confirm Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"ConfirmPassword\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;td colspan=\"2\" style=\"text-align:center\"&gt;&lt;button type=\"submit\" name=\"Ok\"\"&gt;Create Account&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;" );
				out.println( "&lt;tr&gt;&lt;td colSpan=\"2\" style=\"text-align:center\"&gt;&lt;A HRef=\"$SchemaName$SMWarLoginHtml\"&gt;Back to " + clusterDescription + " Sec Manager Login&lt;/A&gt;&lt;/td&gt;&lt;/tr&gt;" );
				out.println( "&lt;/table&gt;" );
				out.println( "&lt;/center&gt;" );
				out.println( "&lt;/form&gt;" );
				out.println( "&lt;/BODY&gt;" );
				out.println( "&lt;/HTML&gt;" );
				return;
			}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart13">
			String confirmPassword = (String)request.getParameter( "ConfirmPassword" );
			if( ( confirmPassword == null ) || ( confirmPassword.length() &lt;= 0 ) ) {
				response.setContentType( "text/html" );
				PrintWriter out = response.getWriter();
				out.println( "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;" );
				out.println( "&lt;HTML&gt;" );
				out.println( "&lt;BODY&gt;" );
				out.println( "&lt;form method=\"post\" formaction=\"$SchemaName$SMWarCreateNewAccountHtml\"&gt;" );
				out.println( "&lt;H1 style=\"text-align:center\"&gt;" + clusterDescription + " Sec Manager&lt;/H1&gt;" );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;ERROR&lt;/H2&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;" );
				out.println( "Confirmation Password must be specified." );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;Create New Account&lt;/H2&gt;" );
				out.println( "&lt;p&gt;" );
				out.println( "&lt;center&gt;" );
				out.println( "&lt;table style=\"width:75%\"&gt;" );
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Login Id:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"LoginId\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;EMail Address:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"EMailAddress\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"Password\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Confirm Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"ConfirmPassword\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;td colspan=\"2\" style=\"text-align:center\"&gt;&lt;button type=\"submit\" name=\"Ok\"\"&gt;Create Account&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;" );
				out.println( "&lt;tr&gt;&lt;td colSpan=\"2\" style=\"text-align:center\"&gt;&lt;A HRef=\"$SchemaName$SMWarLoginHtml\"&gt;Back to " + clusterDescription + " Sec Manager Login&lt;/A&gt;&lt;/td&gt;&lt;/tr&gt;" );
				out.println( "&lt;/table&gt;" );
				out.println( "&lt;/center&gt;" );
				out.println( "&lt;/form&gt;" );
				out.println( "&lt;/BODY&gt;" );
				out.println( "&lt;/HTML&gt;" );
				return;
			}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart14">
			if( ! confirmPassword.equals( password ) ) {
				response.setContentType( "text/html" );
				PrintWriter out = response.getWriter();
				out.println( "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;" );
				out.println( "&lt;HTML&gt;" );
				out.println( "&lt;BODY&gt;" );
				out.println( "&lt;form method=\"post\" formaction=\"$SchemaName$SMWarCreateNewAccountHtml\"&gt;" );
				out.println( "&lt;H1 style=\"text-align:center\"&gt;" + clusterDescription + " Sec Manager&lt;/H1&gt;" );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;ERROR&lt;/H2&gt;" );
				out.println( "&lt;p style=\"text-align:center\"&gt;" );
				out.println( "Password and Confirmation Password do not match." );
				out.println( "&lt;H2 style=\"text-align:center\"&gt;Create New Account&lt;/H2&gt;" );
				out.println( "&lt;p&gt;" );
				out.println( "&lt;center&gt;" );
				out.println( "&lt;table style=\"width:75%\"&gt;" );
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Login Id:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"LoginId\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;EMail Address:&lt;/th&gt;&lt;td&gt;&lt;input type=\"text\" name=\"EMailAddress\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"Password\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;th style=\"text-align:left\"&gt;Confirm Password:&lt;/th&gt;&lt;td&gt;&lt;input type=\"password\" name=\"ConfirmPassword\"/&gt;&lt;/td&gt;&lt;/tr&gt;");
				out.println( "&lt;tr&gt;&lt;td colspan=\"2\" style=\"text-align:center\"&gt;&lt;button type=\"submit\" name=\"Ok\"\"&gt;Create Account&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;" );
				out.println( "&lt;tr&gt;&lt;td colSpan=\"2\" style=\"text-align:center\"&gt;&lt;A HRef=\"$SchemaName$SMWarLoginHtml\"&gt;Back to " + clusterDescription + " Sec Manager Login&lt;/A&gt;&lt;/td&gt;&lt;/tr&gt;" );
				out.println( "&lt;/table&gt;" );
				out.println( "&lt;/center&gt;" );
				out.println( "&lt;/form&gt;" );
				out.println( "&lt;/BODY&gt;" );
				out.println( "&lt;/HTML&gt;" );
				return;
			}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart15">
			MessageDigest msgDigest = MessageDigest.getInstance( "SHA-512" );
			msgDigest.update( password.getBytes( "UTF-8" ) );
			byte[] hash = msgDigest.digest();
			byte[] encodedHash = Base64.encodeBase64( hash );
			msgDigest.update( encodedHash );
			hash = msgDigest.digest();
			encodedHash = Base64.encodeBase64( hash );
			String hashedAndEncodedPassword = new String( encodedHash );

			I$SecSchemaName$ClusterObj systemCluster = schemaObj.getClusterTableObj().readClusterByUDomNameIdx( "system" );
			I$SecSchemaName$TenantObj systemTenant = schemaObj.getTenantTableObj().readTenantByUNameIdx( systemCluster.getRequiredId(), "system" );
			I$SecSchemaName$SecSessionObj systemSession = schemaObj.getSecSessionTableObj().newInstance();
			I$SecSchemaName$SecSessionEditObj editSystemSession = (I$SecSchemaName$SecSessionEditObj)systemSession.beginEdit();
			editSystemSession.setRequiredContainerSecUser( systemUser );
			editSystemSession.setRequiredStart( Calendar.getInstance() );
			systemSession = editSystemSession.create();
			editSystemSession = null;

			auth = new $SecSchemaName$Authorization();
			auth.setSecCluster( systemCluster );
			auth.setSecTenant( systemTenant );
			auth.setSecSession( systemSession );
			schemaObj.setAuthorization( auth );
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart16">
			I$SecSchemaName$SecUserObj newUser = schemaObj.getSecUserTableObj().newInstance();
			I$SecSchemaName$SecUserEditObj editUser = (I$SecSchemaName$SecUserEditObj)newUser.beginEdit();
			editUser.setRequiredLoginId( loginId );
			editUser.setRequiredEMailAddress( emailAddress );
			editUser.setRequiredPasswordHash( hashedAndEncodedPassword );
			editUser.setOptionalEMailConfirmUuid( UUID.randomUUID() );
			newUser = editUser.create();
			editUser = null;

			editSystemSession = (I$SecSchemaName$SecSessionEditObj)systemSession.beginEdit();
			editSystemSession.setOptionalFinish( Calendar.getInstance() );
			editSystemSession.update();
			editSystemSession = null;

			schemaObj.commit();

			schemaObj.setAuthorization( null );

			sendConfirmationEMail( request, newUser, resolvedCluster );

			response.sendRedirect( "$SchemaName$SMWarLoginHtml" );</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart17">
		}
		catch( AddressException e ) {
			throw new CFLibRuntimeException( getClass(),
				S_ProcName,
				"Caught AddressException -- " + e.getMessage(),
				e );
		}
		catch( MessagingException e ) {
			throw new CFLibRuntimeException( getClass(),
				S_ProcName,
				"Caught MessagingException -- " + e.getMessage(),
				e );
		}
		catch( NamingException e ) {
			throw new CFLibRuntimeException( getClass(),
				S_ProcName,
				"Caught NamingException -- " + e.getMessage(),
				e );
		}
		catch( NoSuchAlgorithmException e ) {
			throw new CFLibRuntimeException( getClass(),
				S_ProcName,
				"Caught NoSuchAlgorithmException -- " + e.getMessage(),
				e );
		}
		catch( RuntimeException e ) {
			throw new CFLibRuntimeException( getClass(),
				S_ProcName,
				"Caught RuntimeException -- " + e.getMessage(),
				e );
		}
		finally {
			if( dbSchema != null ) {
				try {
					if( schemaObj.isTransactionOpen() ) { 
						schemaObj.rollback();
					}
				}
				catch( RuntimeException e ) {
				}
				schemaObj.setBackingStore( null );
				$SchemaName$SchemaPool.getSchemaPool().releaseInstance( dbSchema );
			}
		}
	}
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart18">
	protected void sendConfirmationEMail(
		HttpServletRequest request,
		I$SecSchemaName$SecUserObj confirmUser,
		I$SecSchemaName$ClusterObj cluster )
	throws
		IOException,
		MessagingException,
		NamingException
	{
		final String S_ProcName = "sendConfirmationEMail";

		Properties props = System.getProperties();
		String clusterDescription = cluster.getRequiredDescription();

		String thisURI = request.getScheme()
			+	"://"
			+	request.getServerName()
			+	":"
			+	request.getServerPort()
			+	request.getRequestURI().toString();
		int lastSlash = thisURI.lastIndexOf( '/' );
		String baseURI = thisURI.substring( 0, lastSlash );
		UUID confirmationUUID = confirmUser.getOptionalEMailConfirmUuid();
</GenRule>

	<GenRule GenDef="SchemaDef" Name="SchemaSMWarCreateNewAccountPart19">
		String msgBody =
				"&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"&gt;\n"
			+	"&lt;HTML&gt;\n"
			+	"&lt;BODY&gt;\n"
			+	"&lt;p&gt;\n"
			+	"You requested a new account for login " + confirmUser.getRequiredLoginId() + " with " + clusterDescription + ".\n"
			+	"&lt;p&gt;"
			+	"Please click on the following link to confirm your email address:&lt;br&gt;\n"
			+	"&lt;A HRef=\"" + baseURI + "/$SchemaName$SMWarConfirmEMailAddressHtml?ConfirmationUUID=" + confirmationUUID.toString() + "\"&gt;"
			+		 baseURI + "/$SchemaName$SMWarConfirmEMailAddressHtml?ConfirmationUUID=" + confirmationUUID.toString() + "&lt;/A&gt;\n"
			+	"&lt;p&gt;"
			+	"Or click on the following link to cancel the request for a new account:&lt;br&gt;\n"
			+	"&lt;A HRef=\"" + baseURI + "/$SchemaName$SMWarCancelEMailAddressHtml?ConfirmationUUID=" + confirmationUUID.toString() + "\"&gt;"
			+		 baseURI + "/$SchemaName$SMWarCancelEMailAddressHtml?ConfirmationUUID=" + confirmationUUID.toString() + "&lt;/A&gt;\n"
			+	"&lt;/BODY&gt;\n"
			+	"&lt;/HTML&gt;\n";

		$SchemaName$SMWarUtil warUtil = new $SchemaName$SMWarUtil();
		warUtil.sendEMailToUser( confirmUser,
			"You requested an account with " + clusterDescription + "?",
			msgBody );
	}</GenRule>

</RuleSet>
