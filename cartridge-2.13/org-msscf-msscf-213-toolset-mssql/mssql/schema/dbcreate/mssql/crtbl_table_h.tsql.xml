<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="mssql"
	Name="schema/dbcreate/mssql/crtbl_table_h.tsql"
	Revision="2.13"
	Descr="null">

	<GenFile ScopeDef="SchemaDef" GenDef="Table" Name="dbadminfile_CreateTableH"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="dbcreate"
		BasePackageName="$lower SchemaName$"
		SubPackageName="mssql"
		ExpansionClassName="crtbl_$lower DbTableName$_h"
		ExpansionKeyName="crtbl_$lower DbTableName$_h"
		ExpansionFileName="$dbadminfilename_CreateTableH$">--
--	@(#) $GenPackageDir$/$GenFileName$
$MssDoubleDashScriptLicense$
use $lower DbSchemaName$
go

create table $lower DbSchemaName$..$DbTableName$_h ($reference BaseClass reference PrimaryKeyIndex iterate Columns( each clause_CreateHColComma )$$clause_CreateColRevision$,$clause_CreateColSessionIdComma$$poptop Table switch BaseHasClassCode yes dbadminfile_implTableHClassCodeColComma default empty$$dbadminfile_CreateTableHInheritedCols$$dbadminfile_CreateTableHAuditCodeComma$$dbadminfile_CreateTableHAuditStamp$ )$RunSqlStmt$

quit
</GenFile>

	<GenRule GenDef="Table" Name="clause_HPrimaryKey">$reference PrimaryKeyIndex clause_CreateHPrimaryIndex$$reference PrimaryKeyIndex clause_HPrimaryKey$</GenRule>

	<GenRule ScopeDef="SchemaDef" GenDef="Index" Name="clause_CreateHPrimaryIndex">
create$clause_Unique$ index $DbHIndexName$ on $lower DbSchemaName$..$DbHTableName$ (
	auditclusterid,
	auditstamp,$iterate Columns( each clause_PrimaryIndexColComma )$
	auditaction,
	revision )$RunSqlStmt$</GenRule>

	<GenRule ScopeDef="Table" GenDef="Index" Name="clause_CreateHPrimaryIndex">
create$clause_Unique$ index $DbHIndexName$ on $lower DbSchemaName$..$DbHTableName$ (
	auditclusterid,
	auditstamp,$iterate Columns( each clause_PrimaryIndexColComma )$
	auditaction,
	revision )$RunSqlStmt$</GenRule>

	<GenRule GenDef="Index" Name="clause_HPrimaryKey">
alter table $lower DbSchemaName$..$DbHTableName$
	add constraint pk_$lower DbHIndexName$ primary key ( auditclusterid, auditstamp,$iterate Columns( each clause_PKeyColComma )$ auditaction, revision )$RunSqlStmt$</GenRule>

	<GenRule GenDef="Table" Name="clause_CreateColRevisionComma"
		>$clause_CreateColRevision$,</GenRule>

	<GenRule GenDef="Table" Name="clause_CreateColSessionIdComma"
		>$clause_CreateColSessionId$,</GenRule>

	<GenRule GenDef="Table" Name="clause_CreateColSessionId">
	auditclusterid	$DbSchemaName$ClusterIdGenSeq not null,
		constraint chk_$lower poptop Table DbTableName$_h_auditcluster
			foreign key ( auditclusterid )
			references $lower DbSchemaName$..clus( id ),
	auditsessionid	$DbSchemaName$SecSessionIdGen not null,
		constraint chk_$lower poptop Table DbTableName$_h_auditsession
			foreign key ( auditsessionid )
			references $lower DbSchemaName$..SecSess( secsessionid )</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_CreateTableHAuditCodeComma"
		>$dbadminfile_CreateTableHAuditCode$,</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_CreateTableHAuditCode">
	auditaction	$DbSchemaName$AuditActionEnum not null</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_CreateTableHAuditStamp">
	auditstamp	datetime2 not null</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_CreateTableHInheritedCols"
		>$switch HasSuperClassRelation yes dbadminfile_TableHInhCols default dbadminfile_TableHBaseCols$</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_TableHInhCols"
		>$reference SuperClassRelation reference ToTable dbadminfile_CreateTableHInheritedCols$$dbadminfile_TableHBaseCols$</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_TableHBaseCols"
		>$iterate Columns( each clause_CreateColNonPKColComma )$</GenRule>

	<GenRule GenDef="Atom" Name="clause_CreateColNonPKColComma"
		>$switch ColumnInPrimaryIndex yes empty default clause_CreateHColComma$</GenRule>

	<GenRule GenDef="IndexCol" Name="clause_CreateColNonPKColComma"
		>$switch ColumnInPrimaryIndex yes empty default clause_CreateHColComma$</GenRule>

	<GenRule GenDef="TableCol" Name="clause_CreateColNonPKColComma"
		>$switch ColumnInPrimaryIndex yes empty default clause_CreateHColComma$</GenRule>

	<GenRule GenDef="Table" Name="clause_PrimaryHKey">$reference PrimaryKeyIndex clause_CreatePrimaryHIndex$$reference PrimaryKeyIndex clause_PrimaryHKey$</GenRule>

	<GenRule ScopeDef="SchemaDef" GenDef="Index" Name="clause_CreatePrimaryHIndex">
create unique index $DbHIndexName$ on $lower DbSchemaName$..$DbTableName$_h ($iterate Columns( each clause_PrimaryIndexColComma  )$
	revision )$RunSqlStmt$</GenRule>

	<GenRule ScopeDef="Table" GenDef="Index" Name="clause_CreatePrimaryHIndex">
create unique index $DbHIndexName$ on $lower DbSchemaName$..$DbTableName$_h ($iterate Columns( each clause_PrimaryIndexColComma )$
	revision )$RunSqlStmt$</GenRule>

	<GenRule GenDef="Index" Name="clause_PrimaryHKey">
alter table $lower DbSchemaName$..$DbTableName$_h
	add constraint pk_$lower DbIndexName$_h primary key ($iterate Columns( each clause_PKeyHColComma empty empty after clause_CreatePKeyHColRevision )$ )$RunSqlStmt$</GenRule>

	<GenRule ScopeDef="Index" GenDef="IndexCol" Name="clause_PKeyHColComma">$clause_PKeyHCol$,</GenRule>

	<GenRule GenDef="IndexCol" Name="clause_PKeyHCol">$clause_PKeyCol$</GenRule>

	<GenRule GenDef="Object" Name="clause_CreatePKeyHColRevision"> revision</GenRule> 

</RuleSet>
