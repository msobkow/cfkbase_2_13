<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="mssql"
	Name="schema/dbcreate/mssql/crdb_schema.bat"
	Revision="2.13"
	Descr="Microsoft SQL Server Developer Edition Create Database Schema Bash Script">

	<GenFile GenDef="SchemaDef" Name="dbadminfile_CreateSchema"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="dbcreate"
		BasePackageName="$lower SchemaName$"
		SubPackageName="mssql"
		ExpansionClassName="crdb_$lower DbSchemaName$"
		ExpansionKeyName="crdb_$lower DbSchemaName$"
		ExpansionFileName="$dbadminfilename_CreateSchema$"
>@ECHO OFF
REM	@(#) $GenPackageDir$/$GenFileName$
$MssBatScriptLicense$
$parseMSSqlArgs$$validateMSSqlArgs$$defineMSSqlCommands$
if exist %logfilename% (
	DEL %logfilename%
)

$exec_DropDb$$exec_CreateOwner$$exec_CreateLogins$$exec_CreateGroups$$exec_CreateRoles$$exec_CreateUsers$$exec_CreateDefaults$$exec_CreateDb$$exec_CreateRules$$exec_CreateTypes$$exec_CreateAllTables$$exec_CreateAllIndexes$$exec_CreateAllRelations$$exec_CreateAllStoredProcs$$exec_LoadAllData$$exec_CreateAllTriggers$
PAUSE
</GenFile>

	<GenRule GenDef="SchemaDef" Name="exec_CreateOwner">
REM
REM	Create the database owner
REM
if exist $dbadminfilename_CreateOwner$ (
	echo 	Creating database owner '$lower DbSchemaName$' ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing SQL script $dbadminfilename_CreateOwner$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	%cmddb% &lt;$dbadminfilename_CreateOwner$ &gt;&gt;%logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_DropDb">
REM
REM	Drop the database, if it exists
REM
if exist $dbadminfilename_DropDb$ (
	echo 	Dropping any existing database '$lower DbSchemaName$' ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing SQL script $dbadminfilename_DropDb$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	%cmddb% &lt;$dbadminfilename_DropDb$ &gt;&gt;%logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_DropTypes">
REM
REM	Drop the database types, if they exist
REM
if exist $dbadminfilename_DropTypes$ (
	echo 	Dropping any existing database types ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing SQL script $dbadminfilename_DropTypes$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	%cmddb% &lt;$dbadminfilename_DropTypes$ &gt;&gt;%logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_DropRules">
REM
REM	Drop the database rules, if they exist
REM
if exist $dbadminfilename_DropRules$ (
	echo 	Dropping any existing database rules ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing SQL script $dbadminfilename_DropRules$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	%cmddb% &lt;$dbadminfilename_DropRules$ &gt;&gt;%logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateDb">
REM
REM	Create the database
REM
if exist $dbadminfilename_CreateDb$ (
	echo 	Creating database $lower DbSchemaName$ ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing SQL script $dbadminfilename_CreateDb$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	%cmddb% &lt;$dbadminfilename_CreateDb$ &gt;&gt;%logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateLogins">
REM
REM	Create the database logins
REM
if exist $dbadminfilename_CreateLogins$ (
	echo 	Creating database logins ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing SQL script $dbadminfilename_CreateLogins$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	%cmddb% &lt;$dbadminfilename_CreateLogins$ &gt;&gt;%logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateGroups">
REM
REM	Create the database groups
REM
if exist $dbadminfilename_CreateGroups$ (
	echo 	Creating database groups ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing SQL script $dbadminfilename_CreateGroups$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	%cmddb% &lt;$dbadminfilename_CreateGroups$ &gt;&gt;%logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateRoles">
REM
REM	Create the database roles
REM
if exist $dbadminfilename_CreateRoles$ (
	echo 	Creating database roles ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing SQL script $dbadminfilename_CreateRoles$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	%cmddb% &lt;$dbadminfilename_CreateRoles$ &gt;&gt;%logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateUsers">
REM
REM	Create the database users
REM
if exist $dbadminfilename_CreateUsers$ (
	echo 	Creating database users ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing SQL script $dbadminfilename_CreateUsers$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	%cmddb% &lt;$dbadminfilename_CreateUsers$ &gt;&gt;%logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateRules">
REM
REM	Create the database rules
REM
if exist $dbadminfilename_CreateRules$ (
	echo 	Creating database rules ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing SQL script $dbadminfilename_CreateRules$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	%cmddb% &lt;$dbadminfilename_CreateRules$ &gt;&gt;%logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateTypes">
REM
REM	Create the database types
REM
if exist $dbadminfilename_CreateTypes$ (
	echo 	Creating database types ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing SQL script $dbadminfilename_CreateTypes$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	%cmddb% &lt;$dbadminfilename_CreateTypes$ &gt;&gt;%logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateDefaults">
REM
REM	Create the database defaults
REM
if exist $dbadminfilename_CreateDefaults$ (
	echo 	Creating database defaults ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing SQL script $dbadminfilename_CreateDefaults$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	%cmddb% &lt;$dbadminfilename_CreateDefaults$ &gt;&gt;%logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateAllTables">
REM
REM	Create the database tables
REM
if exist $dbadminfilename_CreateAllTables$ (
	echo 	Creating database tables ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing script $dbadminfilename_CreateAllTables$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	CALL $dbadminfilename_CreateAllTables$ %mssqlsrv% %mssqluser% %mssqlpwd% %logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateAllIndexes">
REM
REM	Create the database indexes
REM
if exist $dbadminfilename_CreateAllIndexes$ (
	echo 	Creating database indexes ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing script $dbadminfilename_CreateAllIndexes$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	CALL $dbadminfilename_CreateAllIndexes$ %mssqlsrv% %mssqluser% %mssqlpwd% %logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateAllRelations">
REM
REM	Create the database relations
REM
if exist $dbadminfilename_CreateAllRelations$ (
	echo 	Creating database relations ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing script $dbadminfilename_CreateAllRelations$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	CALL $dbadminfilename_CreateAllRelations$ %mssqlsrv% %mssqluser% %mssqlpwd% %logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateAllStoredProcs">
REM
REM	Create the database stored procedures
REM
if exist $dbadminfilename_CreateAllStoredProcs$ (
	echo 	Creating database stored procedures ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing script $dbadminfilename_CreateAllStoredProcs$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	CALL $dbadminfilename_CreateAllStoredProcs$ %mssqlsrv% %mssqluser% %mssqlpwd% %logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_LoadAllData">
REM
REM	Load initial data
REM
if exist $dbadminfilename_LoadAllData$ (
	echo 	Loading initial data ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing script $dbadminfilename_LoadAllData$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	CALL $dbadminfilename_LoadAllData$ %mssqlsrv% %mssqluser% %mssqlpwd% %logfilename%
)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateAllTriggers">
REM
REM	Create the database triggers
REM
if exist $dbadminfilename_CreateAllTriggers$ (
	echo 	Creating database triggers ...
	echo REM &gt;&gt;%logfilename%
	echo REM	Executing script $dbadminfilename_CreateAllTriggers$ &gt;&gt;%logfilename%
	echo REM &gt;&gt;%logfilename%
	CALL $dbadminfilename_CreateAllTriggers$ %mssqlsrv% %mssqluser% %mssqlpwd% %logfilename%
)
</GenRule>

</RuleSet>
