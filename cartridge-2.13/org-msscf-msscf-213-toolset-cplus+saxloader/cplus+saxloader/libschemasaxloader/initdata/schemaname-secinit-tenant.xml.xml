<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="cplus+saxloader"
	Name="libschemaxml/initdata/schemaname-secinit-tenant.xml"
	Revision="2.13"
	Descr="C++18 Copy of XML Initialization Data for Tenant">

	<GenFile GenDef="SchemaDef" Name="fileSchemaSecInitTenantXmlFile"
		GenerateOnce="false"
		ModuleName=""
		SourceBundle="cplus"
		BasePackageName="lib$reference ManufacturingSchema lower PackageName$saxloader"
		SubPackageName="initdata"
		ExpansionClassName="$lower SchemaName$-secinit-tenant.xml"
		ExpansionKeyName="$lower SchemaName$-secinit-tenant.xml"
		ExpansionFileName="$lower SchemaName$-secinit-tenant.xml"
>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;CFSec
		xmlns="uri://cfsec/cfsecloader"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:xs="http://www.w3.org/2001/XMLSchema"
		xsi:schemaLocation="uri://cfsec/cfsecloader file:/opt/$reference MinorVersion refernce ParentMajVer reference ParentSPrj reference ParentTPrj Name$/$reference MinorVersion reference ParentMajVer Name$.0.$reference MinorVersion Name$/cfsec-structured.xsd" &gt;
	&lt;Cluster FullDomName="system" Description="system"&gt;
		&lt;Tenant TenantName="tenant"&gt;
			&lt;TSecGroup Name="TenantAdmin" IsVisible="true" &gt;
				&lt;TSecGroupMember User="system" /&gt;
			&lt;/TSecGroup&gt;
			&lt;TSecGroup Name="$SchemaName$Admin" IsVisible="true" &gt;
				&lt;TSecGroupInclude SubGroup="TenantAdmin" /&gt;
			&lt;/TSecGroup&gt;
			&lt;TSecGroup Name="$SchemaName$Reader" IsVisible="true" &gt;
				&lt;TSecGroupInclude SubGroup="$SchemaName$Admin" /&gt;
			&lt;/TSecGroup&gt;
			&lt;TSecGroup Name="$SchemaName$Creator" IsVisible="true" &gt;
				&lt;TSecGroupInclude SubGroup="$SchemaName$Admin" /&gt;
			&lt;/TSecGroup&gt;
			&lt;TSecGroup Name="$SchemaName$Updater" IsVisible="true" &gt;
				&lt;TSecGroupInclude SubGroup="$SchemaName$Admin" /&gt;
			&lt;/TSecGroup&gt;
			&lt;TSecGroup Name="$SchemaName$Deleter" IsVisible="true" &gt;
				&lt;TSecGroupInclude SubGroup="$SchemaName$Admin" /&gt;
			&lt;/TSecGroup&gt;$iterate SchemaRefs( each SchemaSecInitTenantXmlFileDeclRefGroupAdmin empty empty )$$iterate SchemaTables( each maybeSchemaSecInitTenantXmlFileDeclTableGroups empty empty )$
		&lt;/Tenant&gt;
	&lt;/Cluster&gt;
&lt;/CFSec&gt;
</GenFile>

	<GenRule GenDef="SchemaRef" Name="SchemaSecInitTenantXmlFileDeclRefGroupAdmin">
			&lt;TSecGroup Name="$reference RefSchema SchemaName$Admin" IsVisible="true" &gt;
				&lt;TSecGroupInclude SubGroup="TenantAdmin" /&gt;
			&lt;/TSecGroup&gt;
			&lt;TSecGroup Name="$reference RefSchema SchemaName$Reader" IsVisible="true" &gt;
				&lt;TSecGroupInclude SubGroup="$reference RefSchema SchemaName$Admin" /&gt;
			&lt;/TSecGroup&gt;
			&lt;TSecGroup Name="$reference RefSchema SchemaName$Creator" IsVisible="true" &gt;
				&lt;TSecGroupInclude SubGroup="$reference RefSchema SchemaName$Admin" /&gt;
			&lt;/TSecGroup&gt;
			&lt;TSecGroup Name="$reference RefSchema SchemaName$Updater" IsVisible="true" &gt;
				&lt;TSecGroupInclude SubGroup="$reference RefSchema SchemaName$Admin" /&gt;
			&lt;/TSecGroup&gt;
			&lt;TSecGroup Name="$reference RefSchema SchemaName$Deleter" IsVisible="true" &gt;
				&lt;TSecGroupInclude SubGroup="$reference RefSchema SchemaName$Admin" /&gt;
			&lt;/TSecGroup&gt;</GenRule>

	<GenRule GenDef="Table" Name="maybeSchemaSecInitTenantXmlFileDeclTableGroups"
		>$switch SecScope Tenant schemaSecInitTenantXmlFileDeclTableGroups default empty$</GenRule>

	<GenRule GenDef="Table" Name="schemaSecInitTenantXmlFileDeclTableGroups">
			&lt;TSecGroup Name="Read$TableName$" IsVisible="false" &gt;
				&lt;TSecGroupInclude SubGroup="$SchemaNameWhichDefinesTable$Reader" /&gt;
			&lt;/TSecGroup&gt;
			&lt;TSecGroup Name="Create$TableName$" IsVisible="false" &gt;
				&lt;TSecGroupInclude SubGroup="$SchemaNameWhichDefinesTable$Creator" /&gt;
			&lt;/TSecGroup&gt;
			&lt;TSecGroup Name="Update$TableName$" IsVisible="false" &gt;
				&lt;TSecGroupInclude SubGroup="$SchemaNameWhichDefinesTable$Updater" /&gt;
			&lt;/TSecGroup&gt;
			&lt;TSecGroup Name="Delete$TableName$" IsVisible="false" &gt;
				&lt;TSecGroupInclude SubGroup="$SchemaNameWhichDefinesTable$Deleter" /&gt;
			&lt;/TSecGroup&gt;</GenRule>

</RuleSet>
