<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="java"
	Name="src/SchemaObj/IEditObj.java"
	Revision="2.13"
	Descr="Java 11 Edit Object interface">

	<GenFile GenDef="Table" Name="fileIEditObjJava"
			GenerateOnce="false"
		ModuleName="$reference ManufacturingSchema lower JavaPackage$"
		SourceBundle="java"
		BasePackageName="$reference ManufacturingSchema lower PackageName$.src"
		SubPackageName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$Obj"
		ExpansionClassName="I$SchemaName$$TableName$EditObjJava"
		ExpansionKeyName="I$SchemaName$$TableName$EditObjJava"
		ExpansionFileName="I$SchemaName$$TableName$EditObj.java"
>// Description: Java 11 Instance Edit Object interface for $SchemaName$ $TableName$.

$MssSourceLicense$

package $reference ManufacturingSchema lower JavaPackage$.$SchemaName$Obj;

import java.math.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import org.msscf.msscf.cflib.CFLib.*;$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaName empty empty )$$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaNameObj empty empty )$$importJavaPackageSchemaName$$JavaEditObjImport$

public interface I$SchemaName$$TableName$EditObj
	extends I$SchemaName$$TableName$Obj$iterate TableRefs( each alsoExtendISchemaTableEditObj empty empty )$$switch HasSuperClassRelation yes alsoIEditObjInheritSuperClass default empty$
{$switch HasSuperClassRelation yes empty default declIEditObjOrigIfNoDefSchema$$declIEditObjOrigAsCast$$switch HasSuperClassRelation yes empty default declIEditObjCreate$$switch HasSuperClassRelation yes empty default declIEditObjUpdate$$switch HasSuperClassRelation yes empty default declIEditObjDelete$$switch HasDefSchema yes empty default declIEditObjColumnAccessors$$iterate Relation( each declIEditObjRelationAccessors empty empty )$$JavaEditObjInterface$$switch HasSuperClassRelation yes empty default declIEditObjOptAuditAccessors$}
</GenFile>

	<GenRule GenDef="Table" Name="alsoExtendISchemaTableEditObj">,
		I$reference SchemaDef SchemaName$$TableName$EditObj</GenRule>

	<GenRule GenDef="Table" Name="extendISchemaTableEditObj">
	extends I$reference DefSchema SchemaName$$TableName$EditObj$switch HasSuperClassRelation yes alsoIEditObjInheritSuperClass default empty$</GenRule>

	<GenRule GenDef="Table" Name="alsoIEditObjInheritSuperClass">,
		I$reference SuperClassRelation reference ToTable SchemaName$$reference SuperClassRelation reference ToTable TableName$EditObj</GenRule>

	<GenRule GenDef="Table" Name="declIEditObjInheritSuperClass">,
		I$reference SuperClassRelation reference ToTable DefSchemaName$$reference SuperClassRelation reference ToTable TableName$EditObj</GenRule>

	<GenRule GenDef="Table" Name="declIEditObjOptAuditAccessors"
		>$switch HasDefSchema yes empty default reallyDeclIEditObjOptAuditAccessors$</GenRule>

	<GenRule GenDef="Table" Name="reallyDeclIEditObjOptAuditAccessors"
		>$switch HasAuditColumns yes declIEditObjAuditAccessors default empty$</GenRule>

	<GenRule GenDef="Table" Name="declIEditObjAuditAccessors">
	/**
	 *	Set the user who created this instance.
	 *
	 *	@param	value	The I$SecSchemaName$SecUserObj instance who created this instance.
	 */
	void setCreatedBy( I$SecSchemaName$SecUserObj value );

	/**
	 *	Set the Calendar date-time this instance was created.
	 *
	 *	@param	value	The Calendar value for the create time of the instance.
	 */
	void setCreatedAt( Calendar value );

	/**
	 *	Set the user who updated this instance.
	 *
	 *	@param	value	The I$SecSchemaName$SecUserObj instance who updated this instance.
	 */
	void setUpdatedBy( I$SecSchemaName$SecUserObj value );

	/**
	 *	Set the Calendar date-time this instance was updated.
	 *
	 *	@param	value	The Calendar value for the create time of the instance.
	 */
	void setUpdatedAt( Calendar value );</GenRule>

	<GenRule GenDef="Table" Name="declIEditObjColumnAccessors"
		>$switch HasSuperClassRelation yes declIEditObjInhColumnAccessors default declIEditObjBaseColumnAccessors$</GenRule>

	<GenRule GenDef="Table" Name="declIEditObjInhColumnAccessors"
		>$iterate Columns( each declIEditObjColumnAccessors )$</GenRule>

	<GenRule GenDef="Table" Name="declIEditObjBaseColumnAccessors"
		>$iterate Columns( each declIEditObjBaseColumnAccessors )$</GenRule>

	<GenRule GenDef="Relation" Name="declIEditObjRelationAccessors"
		>$switch RelationToIndexIsUnique yes maybeDeclIEditObjRelationSingletonAccessors default empty$</GenRule>

	<GenRule GenDef="Relation" Name="maybeDeclIEditObjRelationSingletonAccessors"
		>$switch RelationTypeTag Superclass empty default declIEditObjRelationSingletonAccessors$</GenRule>

	<GenRule GenDef="Relation" Name="declIEditObjRelationSingletonAccessors">
	/**
	 *	Get the I$reference ToTable DefSchemaName$$reference ToTable TableName$Obj instance referenced by the $Suffix$ key.
	 *
	 *	@return	The I$reference ToTable DefSchemaName$$reference ToTable TableName$Obj instance referenced by the $Suffix$ key.
	 */
	I$reference ToTable DefSchemaName$$reference ToTable TableName$Obj get$OptionalOrRequired$$RelationTypeTag$$Suffix$();

	/**
	 *	Set the I$reference ToTable DefSchemaName$$reference ToTable TableName$Obj instance referenced by the $Suffix$ key.
	 *
	 *	@param	value	the I$reference ToTable DefSchemaName$$reference ToTable TableName$Obj instance to be referenced by the $Suffix$ key.
	 */
	void set$OptionalOrRequired$$RelationTypeTag$$Suffix$( I$reference ToTable DefSchemaName$$reference ToTable TableName$Obj value );
</GenRule>

	<GenRule GenDef="TableCol" Name="declIEditObjBaseColumnAccessors"
		>$switch ColumnInPrimaryIndex yes declIEditObjPKeyAccessors default declIEditObjColumnDataAccessor$</GenRule>
	<GenRule GenDef="Atom" Name="declIEditObjBaseColumnAccessors"
		>$switch ColumnInPrimaryIndex yes declIEditObjPKeyAccessors default declIEditObjColumnDataAccessor$</GenRule>

	<GenRule GenDef="TableCol" Name="declIEditObjPKeyAccessors"
		>$switch ColumnInAnyRelation yes empty default declIEditObjPKeyNonGenAccessors$</GenRule>
	<GenRule GenDef="Atom" Name="declIEditObjPKeyAccessors"
		>$switch ColumnInAnyRelation yes empty default declIEditObjPKeyNonGenAccessors$</GenRule>

	<GenRule GenDef="TableCol" Name="declIEditObjPKeyNonGenAccessors"
		>$switch GenerateId yes empty default declIEditObjColumnDataAccessor$</GenRule>
	<GenRule GenDef="Atom" Name="declIEditObjPKeyNonGenAccessors"
		>$switch GenerateId yes empty default declIEditObjColumnDataAccessor$</GenRule>

	<GenRule GenDef="TableCol" Name="declIEditObjColumnAccessors"
		>$switch ColumnInPrimaryIndex yes empty default declIEditObjColumnDataAccessor$</GenRule>
	<GenRule GenDef="Atom" Name="declIEditObjColumnAccessors"
		>$switch ColumnInPrimaryIndex yes empty default declIEditObjColumnDataAccessor$</GenRule>

	<GenRule GenDef="TableCol" Name="declIEditObjColumnDataAccessor"
		>$switch ColumnInAnyRelation yes empty default declIEditObjColumnRWDataAccessor$</GenRule>
	<GenRule GenDef="Atom" Name="declIEditObjColumnDataAccessor"
		>$switch ColumnInAnyRelation yes empty default declIEditObjColumnRWDataAccessor$</GenRule>

	<GenRule GenDef="TableCol" Name="declIEditObjColumnBaseROPKeyAccessor"
		>$switch HasSuperClassRelation no declIEditObjColumnROPKeyAccessor default empty$</GenRule>
	<GenRule GenDef="Atom" Name="declIEditObjColumnBaseROPKeyAccessor"
		>$switch HasSuperClassRelation no declIEditObjColumnROPKeyAccessor default empty$</GenRule>

	<GenRule GenDef="TableCol" Name="declIEditObjColumnROAccessor"
		>$switch ColumnInPrimaryIndex yes declIEditObjColumnROPKeyAccessor default declIEditObjColumnRODataAccessor$</GenRule>
	<GenRule GenDef="Atom" Name="declIEditObjColumnROAccessor"
		>$switch ColumnInPrimaryIndex yes declIEditObjColumnROPKeyAccessor default declIEditObjColumnRODataAccessor$</GenRule>

	<GenRule GenDef="Object" Name="declIEditObjColumnRWDataAccessor">
	/**
	 *	Get the $lower implColumnAttrOptionality$ $implJavaAtomType$ attribute $Name$.
	 *
	 *	@return	The $implJavaAtomType$ value of the attribute $Name$.
	 */
	$implJavaAtomType$ get$implColumnAttrOptionality$$Name$();

	/**
	 *	Set the $lower implColumnAttrOptionality$ $implJavaAtomType$ attribute $Name$.
	 *
	 *	@param	value	the $implJavaAtomType$ value of the attribute $Name$.
	 */
	void set$implColumnAttrOptionality$$Name$( $implJavaAtomType$ value );
</GenRule>

	<GenRule GenDef="Table" Name="declIEditObjCreate">
	/*
	 *	create() may return a different instance than the
	 *	one used to invoke the operation.  All future references
	 *	should be to the returned instance, not the original
	 *	invoker.  You should lose all references to the original
	 *	invoker.
	 *
	 *	@return The created instance.
	 */
	I$reference BaseClass DefSchemaName$$reference BaseClass TableName$Obj create();
</GenRule>

	<GenRule GenDef="Table" Name="declIEditObjUpdate">
	/*
	 *	Update the instance.
	 */
	$reference BaseClass DefSchemaName$$reference BaseClass TableName$EditObj update();
</GenRule>

	<GenRule GenDef="Table" Name="declIEditObjDelete"
		>$switch HasDefSchema yes empty default reallyDeclIEditObjDelete$</GenRule>

	<GenRule GenDef="Table" Name="reallyDeclIEditObjDelete">
	/*
	 *	Delete the instance.
	 */
	$reference BaseClass DefSchemaName$$reference BaseClass TableName$EditObj deleteInstance();
</GenRule>

	<GenRule GenDef="Table" Name="declIEditObjOrigIfNoDefSchema"
		>$switch HasDefSchema yes empty default reallyDeclIEditObjOrig$</GenRule>

	<GenRule GenDef="Table" Name="reallyDeclIEditObjOrig">
	/*
	 *	Get the original for this edition as the base type for the class hierarchy.
	 *
	 *	@return The original, non-modifiable instance as a base I$SchemaName$$TableName$Obj.
	 */
	I$DefSchemaName$$TableName$Obj getOrig();
</GenRule>

	<GenRule GenDef="Table" Name="declIEditObjOrigAsCast"
		>$switch HasDefSchema yes empty default reallyDeclIEditObjOrigAsCast$</GenRule>

	<GenRule GenDef="Table" Name="reallyDeclIEditObjOrigAsCast">
	/*
	 *	Get the original for this edition cast as the specified type.
	 *
	 *	@return The original, non-modifiable instance cast to a I$DefSchemaName$$TableName$Obj.
	 */
	I$DefSchemaName$$TableName$Obj getOrigAs$TableName$();
</GenRule>

</RuleSet>
