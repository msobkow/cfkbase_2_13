<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="java"
	Name="src/Schema/SchemaTableHPKey.java"
	Revision="2.13"
	Descr="Java 11 implementation of a $TableName$ history primary key object.">

	<GenFile GenDef="Table" Name="fileSchemaTableHPKeyJava"
			GenerateOnce="false"
		ModuleName="$reference ManufacturingSchema lower JavaPackage$"
		SourceBundle="java"
		BasePackageName="$reference ManufacturingSchema lower PackageName$.src"
		SubPackageName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$"
		ExpansionClassName="$SchemaName$$TableName$HPKeyJava"
		ExpansionKeyName="$SchemaName$$TableName$HPKeyJava"
		ExpansionFileName="$SchemaName$$TableName$HPKey.java"
>// Description: Java 11 implementation of a $TableName$ history primary key object.

$MssSourceLicense$

package $reference ManufacturingSchema lower JavaPackage$.$SchemaName$;

import java.lang.reflect.*;
import java.io.*;
import java.math.*;
import java.net.*;
import java.rmi.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import org.msscf.msscf.cflib.CFLib.*;$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaName empty empty )$
import org.apache.commons.codec.binary.Base64;

/*
 *	$SchemaName$$TableName$HPKey History Primary Key for $TableName$
$switch IsBaseTable yes implClassCodeAttrComment default empty$$reference PrimaryKeyIndex iterate Columns( each implColumnAttrComment )
$ */
public class $poptop SchemaDef SchemaName$$TableName$HPKey$switch HasDefSchema yes SchemaTableHPKeyExtendDefSchemaNameHPKey default SchemaTableExtendSchemaHPKeyImplementsComparable$
{$switch HasDefSchema yes SchemaTableHPKeyExtendDefBody default SchemaTableHPKeyImplDefBody$}
</GenFile>

	<GenRule GenDef="Table" Name="SchemaTableHPKeyExtendDefBody">
	public $poptop SchemaDef SchemaName$$TableName$HPKey() {
		super();
	}
</GenRule>

	<GenRule GenDef="Table" Name="SchemaTableHPKeyImplDefBody">
$switch IsBaseTable yes implClassCodeColumnAttr default empty$$reference PrimaryKeyIndex iterate Columns( each implColumnAttr )$$reference PrimaryKeyIndex implHPKeyConstructor$$switch IsBaseTable yes implClassCodeGetterSetter default empty$$reference PrimaryKeyIndex iterate Columns( each implColumnGetterSetter )$$reference PrimaryKeyIndex implHPKeyEquals$$reference PrimaryKeyIndex implHPKeyGetHashCode$$reference PrimaryKeyIndex implHPKeyCompareTo$$reference PrimaryKeyIndex implHPKeyToString$
</GenRule>

	<GenRule GenDef="Table" Name="SchemaTableExtendSchemaHPKeyImplementsComparable">
	extends $DefSchemaName$HPKey
	implements Comparable&lt;Object&gt;,
		Serializable</GenRule>

	<GenRule GenDef="Table" Name="SchemaTableHPKeyExtendDefSchemaNameHPKey">
	extends $DefSchemaName$$TableName$HPKey</GenRule>

	<GenRule GenDef="Index" Name="implHPKeyConstructor">
	public $SchemaName$$TableName$HPKey()
	{
		super();$iterate Columns( each implConstructorInitAttr )$
	}
</GenRule>

	<GenRule GenDef="Index" Name="implHPKeyGetHashCode">
	public int hashCode() {
		int hashCode = super.hashCode();$iterate Columns( each implGetHashCodeAttr )$
		return( hashCode &amp; 0x7fffffff );
	}
</GenRule>

	<GenRule GenDef="Index" Name="implHPKeyCompareTo">
	public int compareTo( Object obj ) {
		if( obj == null ) {
			return( -1 );
		}$implHPKeyCompareToHistoryObjects$
		else if( obj instanceof $SchemaName$$TableName$PKey ) {
			$SchemaName$$TableName$PKey rhs = ($SchemaName$$TableName$PKey)obj;$iterate Columns( each implCompareToAttr )$
			return( 0 );
		}
		else if( obj instanceof $SchemaName$$TableName$Buff ) {
			$SchemaName$$TableName$Buff rhs = ($SchemaName$$TableName$Buff)obj;$iterate Columns( each implCompareToAttr )$
			return( 0 );
		}
		else {
			throw new CFLibUnsupportedClassException( getClass(),
				"compareTo",
				"obj",
				obj,
				"$SchemaName$$TableName$HPKey, $SchemaName$$TableName$PKey, $SchemaName$$TableName$Buff" );
		}
	}
</GenRule>

	<GenRule GenDef="Index" Name="implHPKeyCompareToHistoryObjects">
		else if( obj instanceof $SchemaName$$TableName$HBuff ) {
			$SchemaName$$TableName$HBuff rhs = ($SchemaName$$TableName$HBuff)obj;$reference Table switch HasSuperClassRelation yes implBuffCompareInvokeSuperRetVal default implBuffCompareInitRetVal$$implHPKeyCompareToAuditClusterId$$implHPKeyCompareToAuditStamp$$implHPKeyCompareToAuditActionId$$implHPKeyCompareToRequiredRevision$$implHPKeyCompareToAuditSessionId$$iterate Columns( each implCompareToAttr )$
			return( 0 );
		}$switch HasSuperClassRelation no implHPKeyCompareToHPKey default empty$</GenRule>

	<GenRule GenDef="Index" Name="implHPKeyCompareToHPKey">
		else if( obj instanceof $SchemaName$$TableName$HPKey ) {
			$SchemaName$$TableName$HPKey rhs = ($SchemaName$$TableName$HPKey)obj;$implHPKeyCompareToAuditClusterId$$implHPKeyCompareToAuditStamp$$implHPKeyCompareToAuditActionId$$implHPKeyCompareToRequiredRevision$$implHPKeyCompareToAuditSessionId$$iterate Columns( each implCompareToAttr )$
			return( 0 );
		}
		else if( obj instanceof $SchemaName$HPKey ) {
			$SchemaName$HPKey rhs = ($SchemaName$HPKey)obj;$implHPKeyCompareToAuditClusterId$$implHPKeyCompareToAuditStamp$$implHPKeyCompareToAuditActionId$$implHPKeyCompareToRequiredRevision$$implHPKeyCompareToAuditSessionId$
			return( 0 );
		}</GenRule>

	<GenRule GenDef="Index" Name="implHPKeyEquals">
	public boolean equals( Object obj ) {
		if( obj == null ) {
			return( false );
		}
		else if( obj instanceof $SchemaName$$TableName$HPKey ) {
			$SchemaName$$TableName$HPKey rhs = ($SchemaName$$TableName$HPKey)obj;$implHPKeyEqualsAuditClusterId$$implHPKeyEqualsAuditStamp$$implHPKeyEqualsAuditActionId$$implHPKeyEqualsRequiredRevision$$implHPKeyEqualsAuditSessionId$$iterate Columns( each implEqualsCmpAttr)$
			return( true );
		}
		else if( obj instanceof $SchemaName$HPKey ) {
			$SchemaName$HPKey rhs = ($SchemaName$HPKey)obj;$implHPKeyEqualsAuditClusterId$$implHPKeyEqualsAuditStamp$$implHPKeyEqualsAuditActionId$$implHPKeyEqualsRequiredRevision$$implHPKeyEqualsAuditSessionId$
			return( true );
		}
		else if( obj instanceof $SchemaName$$TableName$PKey ) {
			$SchemaName$$TableName$PKey rhs = ($SchemaName$$TableName$PKey)obj;$iterate Columns( each implEqualsCmpAttr)$
			return( true );
		}
		else if( obj instanceof $SchemaName$$TableName$HBuff ) {
			$SchemaName$$TableName$HBuff rhs = ($SchemaName$$TableName$HBuff)obj;$implHPKeyEqualsAuditClusterId$$implHPKeyEqualsAuditStamp$$implHPKeyEqualsAuditActionId$$implHPKeyEqualsRequiredRevision$$implHPKeyEqualsAuditSessionId$$iterate Columns( each implEqualsCmpAttr)$$iterate Columns( each implEqualsCmpAttr)$
			return( true );
		}
		else if( obj instanceof $SchemaName$$TableName$Buff ) {
			$SchemaName$$TableName$Buff rhs = ($SchemaName$$TableName$Buff)obj;$iterate Columns( each implEqualsCmpAttr)$
			return( true );
		}
		else {
			return( false );
		}
	}
</GenRule>

	<GenRule GenDef="Object" Name="implHPKeyEqualsAuditClusterId">
			{
				long lhsClusterId = getAuditClusterId();
				long rhsClusterId = rhs.getAuditClusterId();
				if( lhsClusterId != rhsClusterId ) {
					return( false );
				}
			}</GenRule>

	<GenRule GenDef="Object" Name="implHPKeyEqualsAuditStamp">
			{
				Calendar lhsAuditStamp = getAuditStamp();
				Calendar rhsAuditStamp = rhs.getAuditStamp();
				if( lhsAuditStamp != null ) {
					if( rhsAuditStamp != null ) {
						if( ! lhsAuditStamp.equals( rhsAuditStamp ) ) {
							return( false );
						}
					}
					else {
						return( false );
					}
				}
				else {
					return( false );
				}
			}</GenRule>

	<GenRule GenDef="Object" Name="implHPKeyEqualsAuditActionId">
			{
				short lhsActionId = getAuditActionId();
				short rhsActionId = rhs.getAuditActionId();
				if( lhsActionId != rhsActionId ) {
					return( false );
				}
			}</GenRule>

	<GenRule GenDef="Object" Name="implHPKeyEqualsRequiredRevision">
			{
				int lhsRevision = getRequiredRevision();
				int rhsRevision = rhs.getRequiredRevision();
				if( lhsRevision != rhsRevision ) {
					return( false );
				}
			}</GenRule>

	<GenRule GenDef="Object" Name="implHPKeyEqualsAuditSessionId">
			{
				UUID lhsAuditSessionId = getAuditSessionId();
				UUID rhsAuditSessionId = rhs.getAuditSessionId();
				if( lhsAuditSessionId != null ) {
					if( rhsAuditSessionId != null ) {
						if( ! lhsAuditSessionId.equals( rhsAuditSessionId ) ) {
							return( false );
						}
					}
					else {
						return( false );
					}
				}
				else {
					return( false );
				}
			}</GenRule>

	<GenRule GenDef="Index" Name="implHPKeyToString">
	public String toString() {
		String ret = "&lt;$SchemaName$$TableName$HPKey"$iterate Columns( each implToStringEmitXmlAttr )$
			+ " RequiredRevision=\\"" + Integer.toString( getRequiredRevision() ) + "\\""
			+ "/&gt;";
		return( ret );
	}
</GenRule>

</RuleSet>
