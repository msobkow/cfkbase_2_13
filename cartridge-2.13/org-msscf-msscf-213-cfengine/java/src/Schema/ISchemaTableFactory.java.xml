<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="java"
	Name="src/Schema/ISchemaTableFactory.java"
	Revision="2.13"
	Descr="Java 11 Factory interface for $TableName$.">

	<GenFile GenDef="Table" Name="fileSchemaTableFactoryJava"
			GenerateOnce="false"
			ModuleName="$reference ManufacturingSchema lower JavaPackage$"
		SourceBundle="java"
		BasePackageName="$reference ManufacturingSchema lower PackageName$.src"
		SubPackageName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$"
		ExpansionClassName="I$SchemaName$$TableName$FactoryJava"
		ExpansionKeyName="I$SchemaName$$TableName$FactoryJava"
		ExpansionFileName="I$SchemaName$$TableName$Factory.java">
// Description: Java 11 Factory interface for $TableName$.

$MssSourceLicense$

package $reference ManufacturingSchema lower JavaPackage$.$SchemaName$;

import java.lang.reflect.*;
import java.net.*;
import java.rmi.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import org.msscf.msscf.cflib.CFLib.*;$importJavaPackageSchemaName$

/*
 *	$SchemaName$$TableName$Factory interface for $TableName$
 */
public interface I$SchemaName$$TableName$Factory
{$declJavaTableFactoryBaseBody$}
</GenFile>

	<GenRule GenDef="Table" Name="declJavaTableFactoryBaseBody">
$switch HasSuperClassRelation no declNewPKey default empty$$iterate Index( each declNewNonPrimaryIndexKey )$$declNewBuff$
</GenRule>

	<GenRule GenDef="Index" Name="declNewNonPrimaryIndexKey"
		>$switch IsPrimaryIndex yes empty default declNewIndexKey$</GenRule>

	<GenRule GenDef="Index" Name="declNewIndexKey">
	/**
	 *	Allocate a $Suffix$ key over $TableName$ instances.
	 *
	 *	@return	The new instance.
	 */
	$SchemaName$$TableName$By$Suffix$Key new$Suffix$Key();
</GenRule>

	<GenRule GenDef="Table" Name="declNewPKey"
		>$reallyDeclNewPKey$</GenRule>

	<GenRule GenDef="Table" Name="reallyDeclNewPKey">
	/**
	 *	Allocate a primary key for $TableName$ instances.
	 *
	 *	@return	The new instance.
	 */
	$SchemaName$$TableName$PKey newPKey();
</GenRule>

	<GenRule GenDef="Table" Name="declNewBuff">
	/**
	 *	Allocate a $TableName$ instance buffer.
	 *
	 *	@return	The new instance.
	 */
	$SchemaName$$TableName$Buff newBuff();
</GenRule>

</RuleSet>
