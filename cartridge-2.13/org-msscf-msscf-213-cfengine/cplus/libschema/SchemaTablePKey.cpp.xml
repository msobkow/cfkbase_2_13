<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="cplus"
	Name="libschema/SchemaTablePKey.cpp"
	Revision="2.13"
	Descr="C++18 implementation of a $TableName$ primary key object.">

	<GenFile GenDef="Table" Name="fileSchemaTablePKeyCpp"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="cplus"
		BasePackageName="libcfcore"
		SubPackageName=""
		ExpansionClassName="$SchemaName$$TableName$PKeyCpp"
		ExpansionKeyName="$SchemaName$$TableName$PKeyCpp"
		ExpansionFileName="$SchemaName$$TableName$PKey.cpp"
>// Description: C++18 implementation of a $TableName$ primary key object.

$MssSourceLicense$

#include &lt;cflib/ICFLibPublic.hpp&gt;

using namespace std;

#include &lt;$lower SchemaName$/$SchemaName$$TableName$PKey.hpp&gt;
#include &lt;$lower SchemaName$/$SchemaName$$TableName$Buff.hpp&gt;

namespace $CPlusNamespace$ {
$switch HasDefSchema yes SchemaTablePKeyExtendImplBaseDefBody default SchemaTablePKeyImplBaseDefBody$}
$reference PrimaryKeyIndex implStdPKeyComparison$
</GenFile>

	<GenRule GenDef="Relation" Name="ToIndexIsUnique"
		>$reference ToIndex IsUnique$</GenRule>

	<GenRule GenDef="Table" Name="implPKeySet">
	$SchemaName$$TableName$PKey $SchemaName$$TableName$PKey::operator =( $CPlusDefNamespace$::$DefSchemaName$$TableName$PKey&amp; src ) {$reference PrimaryKeyIndex iterate Columns( each implBuffSetCopyCol )$
		return( *this );
	}

	$SchemaName$$TableName$PKey $SchemaName$$TableName$PKey::operator =( $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff&amp; src ) {$reference PrimaryKeyIndex iterate Columns( each implBuffSetCopyCol )$
		return( *this );
	}
</GenRule>

	<GenRule GenDef="Table" Name="implPKeySValue">
	const std::string $SchemaName$$TableName$PKey::S_VALUE( "value" );
	const std::string $SchemaName$$TableName$PKey::S_VALUE_LENGTH( "value.length()" );
</GenRule>

	<GenRule GenDef="Table" Name="SchemaTablePKeyExtendImplBaseDefBody">
	$poptop SchemaDef SchemaName$$TableName$PKey::$poptop SchemaDef SchemaName$$TableName$PKey()
	: $reference SuperClassRelation reference ToTable SchemaName$$reference SuperClassRelation reference ToTable TableName$()
	{
	}
</GenRule>

	<GenRule GenDef="Table" Name="SchemaTablePKeyImplBaseDefBody">
	const std::string $SchemaName$$TableName$PKey::CLASS_NAME( "$SchemaName$$TableName$PKey" );$implPKeySValue$$reference PrimaryKeyIndex implPKeyConstructor$$reference PrimaryKeyIndex iterate Columns( each implPKeyColumnGetterSetter )$$reference PrimaryKeyIndex implPKeyComparison$$implPKeySet$$reference PrimaryKeyIndex implPKeyGetHashCode$$reference PrimaryKeyIndex implPKeyToString$</GenRule>

	<GenRule GenDef="Index" Name="implPKeyConstructor">
	$SchemaName$$TableName$PKey::$SchemaName$$TableName$PKey() {$iterate Columns( each implConstructorInitAttr )$
	}

	$SchemaName$$TableName$PKey::$SchemaName$$TableName$PKey( const $SchemaName$$TableName$PKey&amp; src ) {$iterate Columns( each implConstructorInitAttr )$$iterate Columns( each implBuffSetCopyCol )$
	}

	$SchemaName$$TableName$PKey::~$SchemaName$$TableName$PKey() {$iterate Columns( each implDestructorDestructAttr )$
	}
</GenRule>

	<GenRule GenDef="IndexCol" Name="implConstructorInitAttr"
	>$reference Column implConstructorInitAttr$</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitAttr"
	>$switch IsNullable yes implConstructorSetAttrNull default maybeImplConstructorInitValue$</GenRule>

	<GenRule GenDef="Value" Name="maybeImplConstructorInitValue"
	>$switch HasInitValue yes implConstructorInitValue default empty$</GenRule>

	<GenRule GenDef="IndexCol" Name="implConstructorInitValue"
	>$reference Column implConstructorInitValue$</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitValue"
	>$switch BaseModelAtomClass
		BlobDef implConstructorInitBlobValue
		BoolDef implConstructorInitBoolValue
		EnumDef implConstructorInitEnumValue
		Int16Def implConstructorInitInt16Value
		Int32Def implConstructorInitInt32Value
		Int64Def implConstructorInitInt64Value
		UInt16Def implConstructorInitUInt16Value
		UInt32Def implConstructorInitUInt32Value
		UInt64Def implConstructorInitUInt64Value
		Id16Gen implConstructorInitInt16Value
		Id32Gen implConstructorInitInt32Value
		Id64Gen implConstructorInitInt64Value
		FloatDef implConstructorInitFloatValue
		DoubleDef implConstructorInitDoubleValue
		NumberDef implConstructorInitNumberValue
		StringDef implConstructorInitStringValue
		TokenDef implConstructorInitTokenValue
		NmTokenDef implConstructorInitNmTokenValue
		NmTokensDef implConstructorInitNmTokensValue
		TextDef implConstructorInitTextValue
		DateDef implConstructorInitDateValue
		TimeDef implConstructorInitTimeValue
		TimestampDef implConstructorInitTimestampValue
		TZDateDef implConstructorInitTZDateValue
		TZTimeDef implConstructorInitTZTimeValue
		TZTimestampDef implConstructorInitTZTimestampValue
		UuidGen implConstructorInitUuidValue
		UuidDef implConstructorInitUuidValue
		default ErrorUnrecognizedBaseModelAtomClass$</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitBlobValue">
		$lower implColumnAttrOptionality$$Name$ = Base64.decodeBase64( "$InitValue$".getBytes() );</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitBoolValue">
		$lower implColumnAttrOptionality$$Name$ = $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE;</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitEnumValue">
		$lower implColumnAttrOptionality$$Name$ = $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE;</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitInt16Value">
		$lower implColumnAttrOptionality$$Name$ = $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE;</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitInt32Value">
		$lower implColumnAttrOptionality$$Name$ = $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE;</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitInt64Value">
		$lower implColumnAttrOptionality$$Name$ = $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE;</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitUInt16Value">
		$lower implColumnAttrOptionality$$Name$ = $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE;</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitUInt32Value">
		$lower implColumnAttrOptionality$$Name$ = $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE;</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitUInt64Value">
		$lower implColumnAttrOptionality$$Name$ = $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE;</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitFloatValue">
		$lower implColumnAttrOptionality$$Name$ = $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE;</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitDoubleValue">
		$lower implColumnAttrOptionality$$Name$ = $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE;</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitNumberValue">
		$lower implColumnAttrOptionality$$Name$ = new cflib::TCFLibBigDecimal&lt;$Digits$,$Precis$&gt;( $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE );</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitStringValue">
		$lower implColumnAttrOptionality$$Name$ = new std::string( $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE );</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitTokenValue">
		$lower implColumnAttrOptionality$$Name$ = new std::string( $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE );</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitNmTokenValue">
		$lower implColumnAttrOptionality$$Name$ = new std::string( $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE );</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitNmTokensValue">
		$lower implColumnAttrOptionality$$Name$ = new std::string( $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE );</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitTextValue">
		$lower implColumnAttrOptionality$$Name$ = new std::string( $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_INIT_VALUE );</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitDateValue">
		$lower implColumnAttrOptionality$$Name$ = cflib::CFLib::getUTCGregorianCalendarInstance( 2020, 0, 1, 0, 0, 0 );</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitTimeValue">
		$lower implColumnAttrOptionality$$Name$ = cflib::CFLib::getUTCGregorianCalendarInstance( 1970, 0, 1, 0, 0, 0 );</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitTimestampValue">
		$lower implColumnAttrOptionality$$Name$ = cflib::CFLib::getUTCGregorianCalendarInstance( 2020, 0, 1, 0, 0, 0 );</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitTZDateValue">
		$lower implColumnAttrOptionality$$Name$ = cflib::CFLib::getUTCGregorianCalendarInstance( 2020, 0, 1, 0, 0, 0 );</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitTZTimeValue">
		$lower implColumnAttrOptionality$$Name$ = cflib::CFLib::getUTCGregorianCalendarInstance( 1970, 0, 1, 0, 0, 0 );</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitTZTimestampValue">
		$lower implColumnAttrOptionality$$Name$ = cflib::CFLib::getUTCGregorianCalendarInstance( 2020, 0, 1, 0, 0, 0 );</GenRule>

	<GenRule GenDef="Value" Name="implConstructorInitUuidValue">
		for( int i = 0; i &lt; 16; i ++ ) {
			$lower implColumnAttrOptionality$$Name$[i] = 0;
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implConstructorSetAttrNull"
	>$reference Column implConstructorSetAttrNull$</GenRule>

	<GenRule GenDef="Value" Name="implConstructorSetAttrNull"
	>$switch BaseModelAtomClass
		BlobDef implConstructorSetAttrNullPointer
		BoolDef implConstructorSetAttrNullWrapper
		EnumDef implConstructorSetAttrNullPointer
		Int16Def implConstructorSetAttrNullWrapper
		Int32Def implConstructorSetAttrNullWrapper
		Int64Def implConstructorSetAttrNullWrapper
		UInt16Def implConstructorSetAttrNullWrapper
		UInt32Def implConstructorSetAttrNullWrapper
		UInt64Def implConstructorSetAttrNullWrapper
		Id16Gen implConstructorSetAttrNullWrapper
		Id32Gen implConstructorSetAttrNullWrapper
		Id64Gen implConstructorSetAttrNullWrapper
		FloatDef implConstructorSetAttrNullWrapper
		DoubleDef implConstructorSetAttrNullWrapper
		NumberDef implConstructorSetAttrNullPointer
		StringDef implConstructorSetAttrNullPointer
		TokenDef implConstructorSetAttrNullPointer
		NmTokenDef implConstructorSetAttrNullPointer
		NmTokensDef implConstructorSetAttrNullPointer
		TextDef implConstructorSetAttrNullPointer
		DateDef implConstructorSetAttrNullPointer
		TimeDef implConstructorSetAttrNullPointer
		TimestampDef implConstructorSetAttrNullPointer
		TZDateDef implConstructorSetAttrNullPointer
		TZTimeDef implConstructorSetAttrNullPointer
		TZTimestampDef implConstructorSetAttrNullPointer
		UuidGen implConstructorSetUuidAttrNullPointer
		UuidDef implConstructorSetUuidAttrNullPointer
		default ErrorUnrecognizedBaseModelAtomClass$</GenRule>

	<GenRule GenDef="Value" Name="implConstructorSetAttrNullPointer">
		$lower implColumnAttrOptionality$$Name$ = NULL;</GenRule>

	<GenRule GenDef="Value" Name="implConstructorSetUuidAttrNullPointer">
		for( int i = 0; i &lt; 16; i ++ ) {
			$lower implColumnAttrOptionality$$Name$[i] = 0;
		}</GenRule>

	<GenRule GenDef="Value" Name="implConstructorSetAttrNullWrapper">
		$lower implColumnAttrOptionality$$Name$.setNull();</GenRule>

	<GenRule GenDef="IndexCol" Name="implDestructorDestructAttr"
	>$reference Column implDestructorDestructAttr$</GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructAttr"
	>$switch IsNullable yes implDestructorDestructOptValue default implDestructorDestructReqValue$</GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqValue"
	>$switch BaseModelAtomClass
		BlobDef implDestructorDestructReqBlobValue
		BoolDef implDestructorDestructReqBoolValue
		EnumDef implDestructorDestructReqEnumValue
		Int16Def implDestructorDestructReqInt16Value
		Int32Def implDestructorDestructReqInt32Value
		Int64Def implDestructorDestructReqInt64Value
		UInt16Def implDestructorDestructReqUInt16Value
		UInt32Def implDestructorDestructReqUInt32Value
		UInt64Def implDestructorDestructReqUInt64Value
		Id16Gen implDestructorDestructReqInt16Value
		Id32Gen implDestructorDestructReqInt32Value
		Id64Gen implDestructorDestructReqInt64Value
		FloatDef implDestructorDestructReqFloatValue
		DoubleDef implDestructorDestructReqDoubleValue
		NumberDef implDestructorDestructReqNumberValue
		StringDef implDestructorDestructReqStringValue
		TokenDef implDestructorDestructReqTokenValue
		NmTokenDef implDestructorDestructReqNmTokenValue
		NmTokensDef implDestructorDestructReqNmTokensValue
		TextDef implDestructorDestructReqTextValue
		DateDef implDestructorDestructReqDateValue
		TimeDef implDestructorDestructReqTimeValue
		TimestampDef implDestructorDestructReqTimestampValue
		TZDateDef implDestructorDestructReqTZDateValue
		TZTimeDef implDestructorDestructReqTZTimeValue
		TZTimestampDef implDestructorDestructReqTZTimestampValue
		UuidGen implDestructorDestructReqUuidValue
		UuidDef implDestructorDestructReqUuidValue
		default ErrorUnreconizedBaseModelAtomClass$</GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructOptValue"
	>$switch BaseModelAtomClass
		BlobDef implDestructorDestructOptValueNullify
		BoolDef empty
		EnumDef implDestructorDestructOptValueNullify
		Int16Def empty
		Int32Def empty
		Int64Def empty
		UInt16Def empty
		UInt32Def empty
		UInt64Def empty
		Id16Gen empty
		Id32Gen empty
		Id64Gen empty
		FloatDef empty
		DoubleDef empty
		NumberDef implDestructorDestructOptValueNullify
		StringDef implDestructorDestructOptValueNullify
		TokenDef implDestructorDestructOptValueNullify
		NmTokenDef implDestructorDestructOptValueNullify
		NmTokensDef implDestructorDestructOptValueNullify
		TextDef implDestructorDestructOptValueNullify
		DateDef implDestructorDestructOptValueNullify
		TimeDef implDestructorDestructOptValueNullify
		TimestampDef implDestructorDestructOptValueNullify
		TZDateDef implDestructorDestructOptValueNullify
		TZTimeDef implDestructorDestructOptValueNullify
		TZTimestampDef implDestructorDestructOptValueNullify
		UuidGen implDestructorDestructReqUuidValue
		UuidDef implDestructorDestructReqUuidValue
		default ErrorUnreconizedBaseModelAtomClass$</GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructOptValueNullify">
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}</GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqBlobValue">
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}</GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqBoolValue"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqEnumValue"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqInt16Value"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqInt32Value"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqInt64Value"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqUInt16Value"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqUInt32Value"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqUInt64Value"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqFloatValue"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqDoubleValue"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqNumberValue">
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}</GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqStringValue">
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}</GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqTokenValue">
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}</GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqNmTokenValue">
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}</GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqNmTokensValue">
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}</GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqTextValue">
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}</GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqDateValue"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqTimeValue"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqTimestampValue"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqTZDateValue"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqTZTimeValue"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqTZTimestampValue"></GenRule>

	<GenRule GenDef="Value" Name="implDestructorDestructReqUuidValue">
		for( int i = 0; i &lt; 16; i ++ ) {
			$lower implColumnAttrOptionality$$Name$[i] = 0;
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implColumnAttrOptionality"
	>$switch IsNullable
		no implColumnAttrRequired
		default implColumnAttrOptional$</GenRule>
	<GenRule GenDef="Atom" Name="implColumnAttrOptionality"
	>$switch IsNullable
		no implColumnAttrRequired
		default implColumnAttrOptional$</GenRule>
	<GenRule GenDef="TableCol" Name="implColumnAttrOptionality"
	>$switch IsNullable
		no implColumnAttrRequired
		default implColumnAttrOptional$</GenRule>

	<GenRule GenDef="Object" Name="implColumnAttrOptional"
	>Optional</GenRule>
	<GenRule GenDef="Object" Name="implColumnAttrRequired"
	>Required</GenRule>

	<GenRule GenDef="IndexCol" Name="implPKeyColumnGetterSetter"
	>$reference Column implPKeyColumnGetterSetter$</GenRule>

	<GenRule GenDef="Object" Name="implPKeyRevisionGetterSetter">
	int32_t $SchemaName$$TableName$PKey::getRequiredRevision() const {
		return( requiredRevision );
	}

	void $SchemaName$$TableName$PKey::setRequiredRevision( int32_t value ) {
		requiredRevision = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyColumnGetterSetter"
	>$switch IsNullable yes implPKeyOptGetterSetter default implPKeyReqGetterSetter$</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqGetterSetter"
	>$switch BaseModelAtomClass
		BlobDef implPKeyReqBlobGetterSetter
		BoolDef implPKeyReqBoolGetterSetter
		EnumDef implPKeyReqEnumGetterSetter
		Id16Gen implPKeyReqInt16GetterSetter
		Id32Gen implPKeyReqInt32GetterSetter
		Id64Gen implPKeyReqInt64GetterSetter
		Int16Def implPKeyReqInt16GetterSetter
		Int32Def implPKeyReqInt32GetterSetter
		Int64Def implPKeyReqInt64GetterSetter
		UInt16Def implPKeyReqUInt16GetterSetter
		UInt32Def implPKeyReqUInt32GetterSetter
		UInt64Def implPKeyReqUInt64GetterSetter
		FloatDef implPKeyReqFloatGetterSetter
		DoubleDef implPKeyReqDoubleGetterSetter
		NumberDef implPKeyReqNumberGetterSetter
		DateDef implPKeyReqDateGetterSetter
		TimeDef implPKeyReqTimeGetterSetter
		TimestampDef implPKeyReqTimestampGetterSetter
		TZDateDef implPKeyReqTZDateGetterSetter
		TZTimeDef implPKeyReqTZTimeGetterSetter
		TZTimestampDef implPKeyReqTZTimestampGetterSetter
		UuidGen implPKeyReqUuidGetterSetter
		UuidDef implPKeyReqUuidGetterSetter
		StringDef implPKeyReqStringGetterSetter
		TokenDef implPKeyReqTokenGetterSetter
		NmTokenDef implPKeyReqNmTokenGetterSetter
		NmTokensDef implPKeyReqNmTokensGetterSetter
		TextDef implPKeyReqTextGetterSetter
		default ErrorUnrecognizedBaseModelAtomClass$</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqBlobGetterSetter">
	const std::vector&lt;cflib::BYTE&gt;&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::vector&lt;cflib::BYTE&gt;* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const std::vector&lt;cflib::BYTE&gt;&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );
		static const std::string S_ValueSize( "value.size()" );
		if( value.size() > $SchemaName$$TableName$Buff::$upper Name$_MAX_LEN ) {
			throw cflib::CFLibArgumentOverflowException( CLASS_NAME,
				S_ProcName,
				1,
				S_ValueSize,
				value.size(),
				$SchemaName$$TableName$Buff::$upper Name$_MAX_LEN );
		}
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::vector&lt;cflib::BYTE&gt;( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqBoolGetterSetter">
	const bool $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const bool* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const bool value ) {
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="EnumTag" Name="implPKeyEmitTagName"
	>$Name$</GenRule>

	<GenRule GenDef="Value" Name="implPKeyEnumInitValueAlways"
	>$switch HasInitValue yes implPKeyEnumInitValueConvertOrdinal default implPKeyEnumInitValueUseFirst$</GenRule>

	<GenRule GenDef="Value" Name="implPKeyEnumInitValueConvertOrdinal"
	>$reference DataType EffSchemaName$Schema::ordinalTo$reference DataType Name$( $InitValue$ )</GenRule>

	<GenRule GenDef="Value" Name="implPKeyEnumInitValueUseFirst"
	>$reference DataType CPlusDefNamespace$::I$reference DataType EffSchemaName$Schema::$reference DataType Name$::$reference DataType iterate Tag( first implPKeyEnumInitValueUseFirstTagName each empty )$</GenRule>

	<GenRule GenDef="EnumTag" Name="implPKeyEnumInitValueUseFirstTagName"
	>$Name$</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqEnumGetterSetter">
	const $reference DataType CPlusDefNamespace$::I$reference DataType EffSchemaName$Schema::$reference DataType Name$ $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const $reference DataType CPlusDefNamespace$::I$reference DataType EffSchemaName$Schema::$reference DataType Name$* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( $reference DataType CPlusDefNamespace$::I$reference DataType EffSchemaName$Schema::$reference DataType Name$ value ) {
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqInt16GetterSetter">
	const int16_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const int16_t* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const int16_t value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$switch HasMinValue yes implReqSetterCheckMinValue default empty$$switch HasMaxValue yes implReqSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqInt32GetterSetter">
	const int32_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const int32_t* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const int32_t value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$switch HasMinValue yes implReqSetterCheckMinValue default empty$$switch HasMaxValue yes implReqSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqInt64GetterSetter">
	const int64_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const int64_t* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const int64_t value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$switch HasMinValue yes implReqSetterCheckMinValue default empty$$switch HasMaxValue yes implReqSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqUInt16GetterSetter">
	const uint16_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const uint16_t* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const uint16_t value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$switch HasMinValue yes implReqSetterCheckMinValue default empty$$switch HasMaxValue yes implReqSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqUInt32GetterSetter">
	const uint32_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const uint32_t* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const uint32_t value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$switch HasMinValue yes implReqSetterCheckMinValue default empty$$switch HasMaxValue yes implReqSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqUInt64GetterSetter">
	const uint64_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const uint64_t* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const uint64_t value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$switch HasMinValue yes implReqSetterCheckMinValue default empty$$switch HasMaxValue yes implReqSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqFloatGetterSetter">
	const float $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const float* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const float value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$switch HasMinValue yes implReqSetterCheckMinValue default empty$$switch HasMaxValue yes implReqSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqDoubleGetterSetter">
	const double $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const double* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const double value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$switch HasMinValue yes implReqSetterCheckMinValue default empty$$switch HasMaxValue yes implReqSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqNumberGetterSetter">
	const cflib::TCFLibBigDecimal&lt;$Digits$,$Precis$&gt;&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const cflib::TCFLibBigDecimal&lt;$Digits$,$Precis$&gt;* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const cflib::CFLibGenericBigDecimal&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$switch HasMinValue yes implReqSetterCheckMinValue default empty$$switch HasMaxValue yes implReqSetterCheckMaxValue default empty$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new cflib::TCFLibBigDecimal&lt;$Digits$,$Precis$&gt;( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqDateGetterSetter">
	const std::chrono::system_clock::time_point&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const std::chrono::system_clock::time_point* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const std::chrono::system_clock::time_point&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$switch HasMinValue yes implReqSetterCheckMinValue default empty$$switch HasMaxValue yes implReqSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqTimeGetterSetter">
	const std::chrono::system_clock::time_point&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const std::chrono::system_clock::time_point* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const std::chrono::system_clock::time_point&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqTimestampGetterSetter">
	const std::chrono::system_clock::time_point&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const std::chrono::system_clock::time_point* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const std::chrono::system_clock::time_point&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$switch HasMinValue yes implReqSetterCheckMinValue default empty$$switch HasMaxValue yes implReqSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqTZDateGetterSetter">
	const std::chrono::system_clock::time_point&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const std::chrono::system_clock::time_point* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const std::chrono::system_clock::time_point&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$switch HasMinValue yes implReqSetterCheckMinValue default empty$$switch HasMaxValue yes implReqSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqTZTimeGetterSetter">
	const std::chrono::system_clock::time_point&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const std::chrono::system_clock::time_point* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const std::chrono::system_clock::time_point&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqTZTimestampGetterSetter">
	const std::chrono::system_clock::time_point&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const std::chrono::system_clock::time_point* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( &amp;$lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const std::chrono::system_clock::time_point&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$switch HasMinValue yes implReqSetterCheckMinValue default empty$$switch HasMaxValue yes implReqSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqUuidGetterSetter">
	const uuid_ptr_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const uuid_ptr_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const uuid_ptr_t value ) {
		uuid_copy( $lower implColumnAttrOptionality$$Name$, value );
	}

	void $SchemaName$$TableName$PKey::generate$implColumnAttrOptionality$$Name$() {
		uuid_generate_random( $lower implColumnAttrOptionality$$Name$ );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqStringGetterSetter">
	const std::string&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::string* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const std::string&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$implReqSetterCheckMaxLen$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::string( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqTokenGetterSetter">
	const std::string&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::string* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const std::string&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$implReqSetterCheckMaxLen$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::string( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqNmTokenGetterSetter">
	const std::string&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::string* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const std::string&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$implReqSetterCheckMaxLen$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::string( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqNmTokensGetterSetter">
	const std::string&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::string* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const std::string&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$implReqSetterCheckMaxLen$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::string( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyReqTextGetterSetter">
	const std::string&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::string* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$( const std::string&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$" );$implReqSetterCheckMaxLen$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::string( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implReqSetterCheckMaxLen">
		if( value.length() &gt; $SchemaName$$TableName$Buff::$upper Name$_MAX_LEN ) {
			throw cflib::CFLibArgumentOverflowException( CLASS_NAME,
				S_ProcName,
				1,
				S_VALUE_LENGTH,
				value.length(),
				$SchemaName$$TableName$Buff::$upper Name$_MAX_LEN );
		}</GenRule>

	<GenRule GenDef="Value" Name="implReqSetterCheckMinValue"
	>$switch BaseModelAtomClass
		BlobDef empty
		BoolDef empty
		EnumDef empty
		Id16Gen implReqSetterCheckGenericMinValue
		Id32Gen implReqSetterCheckGenericMinValue
		Id64Gen implReqSetterCheckGenericMinValue
		Int16Def implReqSetterCheckGenericMinValue
		Int32Def implReqSetterCheckGenericMinValue
		Int64Def implReqSetterCheckGenericMinValue
		UInt16Def implReqSetterCheckGenericMinValue
		UInt32Def implReqSetterCheckGenericMinValue
		UInt64Def implReqSetterCheckGenericMinValue
		FloatDef implReqSetterCheckGenericMinValue
		DoubleDef implReqSetterCheckGenericMinValue
		NumberDef implReqSetterCheckNumberMinValue
		DateDef empty
		TimeDef empty
		TimestampDef empty
		TZDateDef empty
		TZTimeDef empty
		TZTimestampDef empty
		UuidGen empty
		UuidDef empty
		StringDef empty
		TokenDef empty
		NmTokenDef empty
		NmTokensDef empty
		TextDef empty
		default ErrorUnrecognizedBaseModelAtomClass$</GenRule>

	<GenRule GenDef="Value" Name="implReqSetterCheckGenericMinValue">
		if( value &lt; $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MIN_VALUE ) {
			throw cflib::CFLibArgumentUnderflowException( CLASS_NAME,
				S_ProcName,
				1,
				S_VALUE,
				value,
				$CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MIN_VALUE );
		}</GenRule>

	<GenRule GenDef="Value" Name="implReqSetterCheckNumberMinValue">
		if( value &lt; $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MIN_VALUE ) {
			throw cflib::CFLibArgumentUnderflowException( CLASS_NAME,
				S_ProcName,
				1,
				S_VALUE,
				value,
				$CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MIN_VALUE );
		}</GenRule>

	<GenRule GenDef="Value" Name="implReqSetterCheckMaxValue"
	>$switch BaseModelAtomClass
		BoolDef empty
		Id16Gen implReqSetterCheckGenericMaxValue
		Id32Gen implReqSetterCheckGenericMaxValue
		Id64Gen implReqSetterCheckGenericMaxValue
		Int16Def implReqSetterCheckGenericMaxValue
		Int32Def implReqSetterCheckGenericMaxValue
		Int64Def implReqSetterCheckGenericMaxValue
		UInt16Def implReqSetterCheckGenericMaxValue
		UInt32Def implReqSetterCheckGenericMaxValue
		UInt64Def implReqSetterCheckGenericMaxValue
		FloatDef implReqSetterCheckGenericMaxValue
		DoubleDef implReqSetterCheckGenericMaxValue
		NumberDef implReqSetterCheckNumberMaxValue
		DateDef empty
		TimeDef empty
		TimestampDef empty
		TZDateDef empty
		TZTimeDef empty
		TZTimestampDef empty
		StringDef empty
		TokenDef empty
		NmTokenDef empty
		NmTokensDef empty
		TextDef empty
		UuidGen empty
		UuidDef empty
		default ErrorUnrecognizedBaseModelAtomClass$</GenRule>

	<GenRule GenDef="Value" Name="implReqSetterCheckGenericMaxValue">
		if( value &gt; $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MAX_VALUE ) {
			throw cflib::CFLibArgumentOverflowException( CLASS_NAME,
				S_ProcName,
				1,
				S_VALUE,
				value,
				$CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MAX_VALUE );
		}</GenRule>

	<GenRule GenDef="Value" Name="implReqSetterCheckNumberMaxValue">
		if( value &gt; $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MAX_VALUE ) {
			throw cflib::CFLibArgumentOverflowException( CLASS_NAME,
				S_ProcName,
				1,
				S_VALUE,
				value,
				$CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MAX_VALUE );
		}</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptGetterSetter"
	>$switch BaseModelAtomClass
		BlobDef implPKeyOptBlobGetterSetter
		BoolDef implPKeyOptBoolGetterSetter
		EnumDef implPKeyOptEnumGetterSetter
		Id16Gen implPKeyOptInt16GetterSetter
		Id32Gen implPKeyOptInt32GetterSetter
		Id64Gen implPKeyOptInt64GetterSetter
		Int16Def implPKeyOptInt16GetterSetter
		Int32Def implPKeyOptInt32GetterSetter
		Int64Def implPKeyOptInt64GetterSetter
		UInt16Def implPKeyOptUInt16GetterSetter
		UInt32Def implPKeyOptUInt32GetterSetter
		UInt64Def implPKeyOptUInt64GetterSetter
		FloatDef implPKeyOptFloatGetterSetter
		DoubleDef implPKeyOptDoubleGetterSetter
		NumberDef implPKeyOptNumberGetterSetter
		DateDef implPKeyOptDateGetterSetter
		TimeDef implPKeyOptTimeGetterSetter
		TimestampDef implPKeyOptTimestampGetterSetter
		TZDateDef implPKeyOptTZDateGetterSetter
		TZTimeDef implPKeyOptTZTimeGetterSetter
		TZTimestampDef implPKeyOptTZTimestampGetterSetter
		UuidGen implPKeyOptUuidGetterSetter
		UuidDef implPKeyOptUuidGetterSetter
		StringDef implPKeyOptStringGetterSetter
		TokenDef implPKeyOptTokenGetterSetter
		NmTokenDef implPKeyOptNmTokenGetterSetter
		NmTokensDef implPKeyOptNmTokensGetterSetter
		TextDef implPKeyOptTextGetterSetter
		default ErrorUnrecognizedBaseModelAtomClass$</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptBlobGetterSetter">
	const std::vector&lt;cflib::BYTE&gt;&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		static const std::string S_ProcName( "get$implColumnAttrOptionality$$Name$Value" );
		if( $lower implColumnAttrOptionality$$Name$ == NULL ) {
			throw cflib::CFLibNullArgumentException( CLASS_NAME,
				S_ProcName,
				0,
				S_VALUE );
		}
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::vector&lt;cflib::BYTE&gt;* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const std::vector&lt;cflib::BYTE&gt;&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );
		static const std::string S_ValueSize( "value.size()" );
		if( value.size() > $SchemaName$$TableName$Buff::$upper Name$_MAX_LEN ) {
			throw cflib::CFLibArgumentOverflowException( CLASS_NAME,
				S_ProcName,
				1,
				S_ValueSize,
				value.size(),
				$SchemaName$$TableName$Buff::$upper Name$_MAX_LEN );
		}
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::vector&lt;cflib::BYTE&gt;( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptBoolGetterSetter">
	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$.isNull() );
	}

	const bool $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( $lower implColumnAttrOptionality$$Name$.getValue() );
	}

	const bool* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$.getReference() );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		$lower implColumnAttrOptionality$$Name$.setNull();
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const bool value ) {
		$lower implColumnAttrOptionality$$Name$.setValue( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptEnumGetterSetter">
	const $reference DataType CPlusDefNamespace$::I$reference DataType EffSchemaName$Schema::$reference DataType Name$ $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		static const std::string S_ProcName( "get$implColumnAttrOptionality$$Name$Value" );
		if( $lower implColumnAttrOptionality$$Name$ == NULL ) {
			throw cflib::CFLibNullArgumentException( CLASS_NAME,
				S_ProcName,
				0,
				S_VALUE );
		}
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const $reference DataType CPlusDefNamespace$::I$reference DataType EffSchemaName$Schema::$reference DataType Name$* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		static const std::string S_ProcName( "get$implColumnAttrOptionality$$Name$Value" );
		if( $lower implColumnAttrOptionality$$Name$ == NULL ) {
			throw cflib::CFLibNullArgumentException( CLASS_NAME,
				S_ProcName,
				0,
				S_VALUE );
		}
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const $reference DataType CPlusDefNamespace$::I$reference DataType EffSchemaName$Schema::$reference DataType Name$ value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		if( $lower implColumnAttrOptionality$$Name$ == NULL ) {
			$lower implColumnAttrOptionality$$Name$ = new I$reference DataType EffSchemaName$Schema::$reference DataType Name$;
		}
		*$lower implColumnAttrOptionality$$Name$ = value;
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptInt16GetterSetter">
	const int16_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( $lower implColumnAttrOptionality$$Name$.getValue() );
	}

	const int16_t* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$.getReference() );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$.isNull() );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		$lower implColumnAttrOptionality$$Name$.setNull();
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const int16_t value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$.setValue( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptInt32GetterSetter">
	const int32_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( $lower implColumnAttrOptionality$$Name$.getValue() );
	}

	const int32_t* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$.getReference() );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$.isNull() );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		$lower implColumnAttrOptionality$$Name$.setNull();
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const int32_t value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$.setValue( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptInt64GetterSetter">
	const int64_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( $lower implColumnAttrOptionality$$Name$.getValue() );
	}

	const int64_t* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$.getReference() );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$.isNull() );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		$lower implColumnAttrOptionality$$Name$.setNull();
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const int64_t value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$.setValue( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptUInt16GetterSetter">
	const uint16_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( $lower implColumnAttrOptionality$$Name$.getValue() );
	}

	const uint16_t* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$.getReference() );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$.isNull() );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		$lower implColumnAttrOptionality$$Name$.setNull();
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const uint16_t value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$.setValue( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptUInt32GetterSetter">
	const uint32_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( $lower implColumnAttrOptionality$$Name$.getValue() );
	}

	const uint32_t* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$.getReference() );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$.isNull() );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		$lower implColumnAttrOptionality$$Name$.setNull();
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const uint32_t value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$.setValue( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptUInt64GetterSetter">
	const uint64_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( $lower implColumnAttrOptionality$$Name$.getValue() );
	}

	const uint64_t* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$.getReference() );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$.isNull() );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		$lower implColumnAttrOptionality$$Name$.setNull();
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const uint64_t value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$.setValue( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptFloatGetterSetter">
	const float $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( $lower implColumnAttrOptionality$$Name$.getValue() );
	}

	const float* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$.getReference() );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$.isNull() );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		$lower implColumnAttrOptionality$$Name$.setNull();
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const float value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$.setValue( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptDoubleGetterSetter">
	const double $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( $lower implColumnAttrOptionality$$Name$.getValue() );
	}

	const double* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$.getReference() );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$.isNull() );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		$lower implColumnAttrOptionality$$Name$.setNull();
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const double value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		$lower implColumnAttrOptionality$$Name$.setValue( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptNumberGetterSetter">
	const cflib::TCFLibBigDecimal&lt;$Digits$,$Precis$&gt;&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		static const std::string S_ProcName( "get$implColumnAttrOptionality$$Name$Value" );
		if( $lower implColumnAttrOptionality$$Name$ == NULL ) {
			throw cflib::CFLibNullArgumentException( CLASS_NAME,
				S_ProcName,
				0,
				S_VALUE );
		}
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const cflib::TCFLibBigDecimal&lt;$Digits$,$Precis$&gt;* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const cflib::CFLibGenericBigDecimal&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );
		static const std::string S_ColumnName( ".$Name$" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		std::string fieldName( CLASS_NAME );
		fieldName.append( S_ColumnName );
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = cflib::TCFLibBigDecimal&lt;$Digits$,$Precis$&gt;::coerce( fieldName, value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptDateGetterSetter">
	const std::chrono::system_clock::time_point&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::chrono::system_clock::time_point* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const std::chrono::system_clock::time_point&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );
		static const std::string S_ColumnName( ".$Name$" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::chrono::system_clock::time_point( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptTimeGetterSetter">
	const std::chrono::system_clock::time_point&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::chrono::system_clock::time_point* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const std::chrono::system_clock::time_point&amp; value ) {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::chrono::system_clock::time_point( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptTimestampGetterSetter">
	const std::chrono::system_clock::time_point&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::chrono::system_clock::time_point* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const std::chrono::system_clock::time_point&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );
		static const std::string S_ColumnName( ".$Name$" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::chrono::system_clock::time_point( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptTZDateGetterSetter">
	const std::chrono::system_clock::time_point&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::chrono::system_clock::time_point* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const std::chrono::system_clock::time_point&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );
		static const std::string S_ColumnName( ".$Name$" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::chrono::system_clock::time_point( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptTZTimeGetterSetter">
	const std::chrono::system_clock::time_point&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::chrono::system_clock::time_point* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const std::chrono::system_clock::time_point&amp; value ) {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::chrono::system_clock::time_point( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptTZTimestampGetterSetter">
	const std::chrono::system_clock::time_point&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::chrono::system_clock::time_point* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const std::chrono::system_clock::time_point&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );
		static const std::string S_ColumnName( ".$Name$" );$switch HasMinValue yes implOptSetterCheckMinValue default empty$$switch HasMaxValue yes implOptSetterCheckMaxValue default empty$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::chrono::system_clock::time_point( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptUuidGetterSetter">
	const uuid_ptr_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		static const std::string S_ProcName( "get$implColumnAttrOptionality$$Name$Value" );
		if( is$implColumnAttrOptionality$$Name$Null() ) {
			throw cflib::CFLibNullArgumentException( CLASS_NAME,
				S_ProcName,
				0,
				S_VALUE );
		}
		return( $lower implColumnAttrOptionality$$Name$ );
	}

	const uuid_ptr_t $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		if( is$implColumnAttrOptionality$$Name$Null() ) {
			return( NULL );
		}
		else {
			return( $lower implColumnAttrOptionality$$Name$ );
		}
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		for( int i = 0; i &lt; 16; i ++ ) {
			if( $lower implColumnAttrOptionality$$Name$[ i ] != 0 ) {
				return( false );
			}
		}
		return( true );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		for( int i = 0; i &lt; 16; i ++ ) {
			$lower implColumnAttrOptionality$$Name$[i] = 0;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const uuid_ptr_t value ) {
		uuid_copy( $lower implColumnAttrOptionality$$Name$, value );
	}

	void $SchemaName$$TableName$PKey::generate$implColumnAttrOptionality$$Name$() {
		uuid_generate_random( $lower implColumnAttrOptionality$$Name$ );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptStringGetterSetter">
	const std::string&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		static const std::string S_ProcName( "get$implColumnAttrOptionality$$Name$Value" );
		if( $lower implColumnAttrOptionality$$Name$ == NULL ) {
			throw cflib::CFLibNullArgumentException( CLASS_NAME,
				S_ProcName,
				0,
				S_VALUE );
		}
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::string* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const std::string&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$implOptSetterCheckMaxLen$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::string( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptTokenGetterSetter">
	const std::string&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		static const std::string S_ProcName( "get$implColumnAttrOptionality$$Name$Value" );
		if( $lower implColumnAttrOptionality$$Name$ == NULL ) {
			throw cflib::CFLibNullArgumentException( CLASS_NAME,
				S_ProcName,
				0,
				S_VALUE );
		}
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::string* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const std::string&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$implOptSetterCheckMaxLen$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::string( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptNmTokenGetterSetter">
	const std::string&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		static const std::string S_ProcName( "get$implColumnAttrOptionality$$Name$Value" );
		if( $lower implColumnAttrOptionality$$Name$ == NULL ) {
			throw cflib::CFLibNullArgumentException( CLASS_NAME,
				S_ProcName,
				0,
				S_VALUE );
		}
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::string* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const std::string&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$implOptSetterCheckMaxLen$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::string( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptNmTokensGetterSetter">
	const std::string&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		static const std::string S_ProcName( "get$implColumnAttrOptionality$$Name$Value" );
		if( $lower implColumnAttrOptionality$$Name$ == NULL ) {
			throw cflib::CFLibNullArgumentException( CLASS_NAME,
				S_ProcName,
				0,
				S_VALUE );
		}
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::string* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const std::string&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$implOptSetterCheckMaxLen$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::string( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implPKeyOptTextGetterSetter">
	const std::string&amp; $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Value() const {
		static const std::string S_ProcName( "get$implColumnAttrOptionality$$Name$Value" );
		if( $lower implColumnAttrOptionality$$Name$ == NULL ) {
			throw cflib::CFLibNullArgumentException( CLASS_NAME,
				S_ProcName,
				0,
				S_VALUE );
		}
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const std::string* $SchemaName$$TableName$PKey::get$implColumnAttrOptionality$$Name$Reference() const {
		return( *$lower implColumnAttrOptionality$$Name$ );
	}

	const bool $SchemaName$$TableName$PKey::is$implColumnAttrOptionality$$Name$Null() const {
		return( $lower implColumnAttrOptionality$$Name$ == NULL );
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Null() {
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
	}

	void $SchemaName$$TableName$PKey::set$implColumnAttrOptionality$$Name$Value( const std::string&amp; value ) {
		static const std::string S_ProcName( "set$implColumnAttrOptionality$$Name$Value" );$implOptSetterCheckMaxLen$
		if( $lower implColumnAttrOptionality$$Name$ != NULL ) {
			delete $lower implColumnAttrOptionality$$Name$;
			$lower implColumnAttrOptionality$$Name$ = NULL;
		}
		$lower implColumnAttrOptionality$$Name$ = new std::string( value );
	}
</GenRule>

	<GenRule GenDef="Value" Name="implOptSetterCheckMaxLen">
		if( value.length() &gt; $SchemaName$$TableName$Buff::$upper Name$_MAX_LEN ) {
			throw cflib::CFLibArgumentOverflowException( CLASS_NAME,
				S_ProcName,
				1,
				S_VALUE_LENGTH,
				value.length(),
				$SchemaName$$TableName$Buff::$upper Name$_MAX_LEN );
		}</GenRule>

	<GenRule GenDef="Value" Name="implOptSetterCheckMinValue"
	>$switch BaseModelAtomClass
		BlobDef empty
		BoolDef empty
		EnumDef empty
		Id16Gen implOptSetterCheckGenericMinValue
		Id32Gen implOptSetterCheckGenericMinValue
		Id64Gen implOptSetterCheckGenericMinValue
		Int16Def implOptSetterCheckGenericMinValue
		Int32Def implOptSetterCheckGenericMinValue
		Int64Def implOptSetterCheckGenericMinValue
		UInt16Def implOptSetterCheckGenericMinValue
		UInt32Def implOptSetterCheckGenericMinValue
		UInt64Def implOptSetterCheckGenericMinValue
		FloatDef implOptSetterCheckGenericMinValue
		DoubleDef implOptSetterCheckGenericMinValue
		NumberDef implOptSetterCheckNumberMinValue
		DateDef empty
		TimeDef empty
		TimestampDef empty
		TZDateDef empty
		TZTimeDef empty
		TZTimestampDef empty
		UuidGen empty
		UuidDef empty
		StringDef empty
		TokenDef empty
		NmTokenDef empty
		NmTokensDef empty
		TextDef empty
		default ErrorUnrecognizedBaseModelAtomClass$</GenRule>

	<GenRule GenDef="Value" Name="implOptSetterCheckGenericMinValue">
		if( value &lt; $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MIN_VALUE ) {
			throw cflib::CFLibArgumentUnderflowException( CLASS_NAME,
				S_ProcName,
				1,
				S_VALUE,
				value,
				$CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MIN_VALUE );
		}</GenRule>

	<GenRule GenDef="Value" Name="implOptSetterCheckNumberMinValue">
		if( value &lt; $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MIN_VALUE ) {
			throw cflib::CFLibArgumentUnderflowException( CLASS_NAME,
				S_ProcName,
				1,
				S_VALUE,
				value,
				$CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MIN_VALUE );
		}</GenRule>

	<GenRule GenDef="Value" Name="implOptSetterCheckMaxValue"
	>$switch BaseModelAtomClass
		BlobDef empty
		BoolDef empty
		EnumDef empty
		Id16Gen implOptSetterCheckGenericMaxValue
		Id32Gen implOptSetterCheckGenericMaxValue
		Id64Gen implOptSetterCheckGenericMaxValue
		Int16Def implOptSetterCheckGenericMaxValue
		Int32Def implOptSetterCheckGenericMaxValue
		Int64Def implOptSetterCheckGenericMaxValue
		UInt16Def implOptSetterCheckGenericMaxValue
		UInt32Def implOptSetterCheckGenericMaxValue
		UInt64Def implOptSetterCheckGenericMaxValue
		FloatDef implOptSetterCheckGenericMaxValue
		DoubleDef implOptSetterCheckGenericMaxValue
		NumberDef implOptSetterCheckNumberMaxValue
		DateDef empty
		TimeDef empty
		TimestampDef empty
		TZDateDef empty
		TZTimeDef empty
		TZTimestampDef empty
		UuidGen empty
		UuidDef empty
		StringDef empty
		TokenDef empty
		NmTokenDef empty
		NmTokensDef empty
		TextDef empty
		default ErrorUnrecognizedBaseModelAtomClass$</GenRule>

	<GenRule GenDef="Value" Name="implOptSetterCheckGenericMaxValue">
		if( value &gt; $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MAX_VALUE ) {
			throw cflib::CFLibArgumentOverflowException( CLASS_NAME,
				S_ProcName,
				1,
				S_VALUE,
				value,
				$CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MAX_VALUE );
		}</GenRule>

	<GenRule GenDef="Value" Name="implOptSetterCheckNumberMaxValue">
		if( value &gt; $CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MAX_VALUE ) {
			throw cflib::CFLibArgumentOverflowException( CLASS_NAME,
				S_ProcName,
				1,
				S_VALUE,
				value,
				$CPlusDefNamespace$::$DefSchemaName$$TableName$Buff::$upper Name$_MAX_VALUE );
		}</GenRule>

	<GenRule GenDef="Index" Name="implPKeyComparison"
	>$implPKeyComparisonLessThan$
$implPKeyComparisonLessOrEqual$
$implPKeyComparisonEqual$
$implPKeyComparisonNotEqual$
$implPKeyComparisonGreaterOrEqual$
$implPKeyComparisonGreaterThan$
</GenRule>

	<GenRule GenDef="Index" Name="implPKeyComparisonLessThan">
	bool $SchemaName$$TableName$PKey::operator &lt;( const $SchemaName$$TableName$PKey&amp; rhs ) {$iterate Columns( each implLessThanCmpAttr )$
		return( false );
	}

	bool $SchemaName$$TableName$PKey::operator &lt;( const $SchemaName$$TableName$Buff&amp; rhs ) {$iterate Columns( each implLessThanCmpAttr )$
		return( false );
	}</GenRule>

	<GenRule GenDef="Index" Name="implPKeyComparisonLessOrEqual">
	bool $SchemaName$$TableName$PKey::operator &lt;=( const $SchemaName$$TableName$PKey&amp; rhs ) {$iterate Columns( each implLessOrEqualCmpAttr )$
		return( true );
	}

	bool $SchemaName$$TableName$PKey::operator &lt;=( const $SchemaName$$TableName$Buff&amp; rhs ) {$iterate Columns( each implLessOrEqualCmpAttr )$
		return( true );
	}</GenRule>


	<GenRule GenDef="Index" Name="implPKeyComparisonEqual">
	bool $SchemaName$$TableName$PKey::operator ==( const $SchemaName$$TableName$PKey&amp; rhs ) {$iterate Columns( each implEqualCmpAttr )$
		return( true );
	}

	bool $SchemaName$$TableName$PKey::operator ==( const $SchemaName$$TableName$Buff&amp; rhs ) {$iterate Columns( each implEqualCmpAttr )$
		return( true );
	}</GenRule>

	<GenRule GenDef="Index" Name="implPKeyComparisonNotEqual">
	bool $SchemaName$$TableName$PKey::operator !=( const $SchemaName$$TableName$PKey&amp; rhs ) {$iterate Columns( each implNotEqualCmpAttr )$
		return( false );
	}

	bool $SchemaName$$TableName$PKey::operator !=( const $SchemaName$$TableName$Buff&amp; rhs ) {$iterate Columns( each implNotEqualCmpAttr )$
		return( false );
	}</GenRule>

	<GenRule GenDef="Index" Name="implPKeyComparisonGreaterOrEqual">
	bool $SchemaName$$TableName$PKey::operator &gt;=( const $SchemaName$$TableName$PKey&amp; rhs ) {$iterate Columns( each implGreaterOrEqualCmpAttr )$
		return( true );
	}

	bool $SchemaName$$TableName$PKey::operator &gt;=( const $SchemaName$$TableName$Buff&amp; rhs ) {$iterate Columns( each implGreaterOrEqualCmpAttr )$
		return( true );
	}</GenRule>

	<GenRule GenDef="Index" Name="implPKeyComparisonGreaterThan">
	bool $SchemaName$$TableName$PKey::operator &gt;( const $SchemaName$$TableName$PKey&amp; rhs ) {$iterate Columns( each implGreaterThanCmpAttr )$
		return( false );
	}

	bool $SchemaName$$TableName$PKey::operator &gt;( const $SchemaName$$TableName$Buff&amp; rhs ) {$iterate Columns( each implGreaterThanCmpAttr )$
		return( false );
	}</GenRule>

	<GenRule GenDef="Index" Name="implStdPKeyComparison">
namespace std {
$implStdPKeyComparisonLessThan$
$implStdPKeyComparisonLessOrEqual$
$implStdPKeyComparisonEqual$
$implStdPKeyComparisonNotEqual$
$implStdPKeyComparisonGreaterOrEqual$
$implStdPKeyComparisonGreaterThan$
}
</GenRule>

	<GenRule GenDef="Index" Name="implStdPKeyComparisonLessThan">
	bool operator &lt;(const  $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; lhs, const $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; rhs ) {$iterate Columns( each implLessThanCmpLhsAttr )$
		return( false );
	}

	bool operator &lt;(const  $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; lhs, const $CPlusNamespace$::$SchemaName$$TableName$Buff&amp; rhs ) {$iterate Columns( each implLessThanCmpLhsAttr )$
		return( false );
	}</GenRule>

	<GenRule GenDef="Index" Name="implStdPKeyComparisonLessOrEqual">
	bool operator &lt;=(const  $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; lhs, const $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; rhs ) {$iterate Columns( each implLessOrEqualCmpLhsAttr )$
		return( true );
	}

	bool operator &lt;=(const  $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; lhs, const $CPlusNamespace$::$SchemaName$$TableName$Buff&amp; rhs ) {$iterate Columns( each implLessOrEqualCmpLhsAttr )$
		return( true );
	}</GenRule>


	<GenRule GenDef="Index" Name="implStdPKeyComparisonEqual">
	bool operator ==(const  $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; lhs, const $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; rhs ) {$iterate Columns( each implEqualCmpLhsAttr )$
		return( true );
	}

	bool operator ==(const  $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; lhs, const $CPlusNamespace$::$SchemaName$$TableName$Buff&amp; rhs ) {$iterate Columns( each implEqualCmpLhsAttr )$
		return( true );
	}</GenRule>

	<GenRule GenDef="Index" Name="implStdPKeyComparisonNotEqual">
	bool operator !=(const  $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; lhs, const $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; rhs ) {$iterate Columns( each implNotEqualCmpLhsAttr )$
		return( false );
	}

	bool operator !=(const  $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; lhs, const $CPlusNamespace$::$SchemaName$$TableName$Buff&amp; rhs ) {$iterate Columns( each implNotEqualCmpLhsAttr )$
		return( false );
	}</GenRule>

	<GenRule GenDef="Index" Name="implStdPKeyComparisonGreaterOrEqual">
	bool operator &gt;=(const  $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; lhs, const $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; rhs ) {$iterate Columns( each implGreaterOrEqualCmpLhsAttr )$
		return( true );
	}

	bool operator &gt;=(const  $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; lhs, const $CPlusNamespace$::$SchemaName$$TableName$Buff&amp; rhs ) {$iterate Columns( each implGreaterOrEqualCmpLhsAttr )$
		return( true );
	}</GenRule>

	<GenRule GenDef="Index" Name="implStdPKeyComparisonGreaterThan">
	bool operator &gt;(const  $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; lhs, const $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; rhs ) {$iterate Columns( each implGreaterThanCmpLhsAttr )$
		return( false );
	}

	bool operator &gt;(const  $CPlusNamespace$::$SchemaName$$TableName$PKey&amp; lhs, const $CPlusNamespace$::$SchemaName$$TableName$Buff&amp; rhs ) {$iterate Columns( each implGreaterThanCmpLhsAttr )$
		return( false );
	}</GenRule>

	<GenRule GenDef="Object" Name="implEqualCmpAttr"
		>$switch IsNullable yes implEqualCmpOpt default implEqualCmpReq$</GenRule>

	<GenRule GenDef="IndexCol" Name="implEqualCmpOpt"
		>$reference Column implEqualCmpOpt$</GenRule>

	<GenRule GenDef="Object" Name="implEqualCmpOpt"
		>$switch BaseModelAtomClass
			BlobDef implEqualCmpOptBlobVar
			BoolDef implEqualCmpOptBoolVar
			EnumDef implEqualCmpOptEnumVar
			Int16Def implEqualCmpOptInt16Var
			Int32Def implEqualCmpOptInt32Var
			Int64Def implEqualCmpOptInt64Var
			UInt16Def implEqualCmpOptUInt16Var
			UInt32Def implEqualCmpOptUInt32Var
			UInt64Def implEqualCmpOptUInt64Var
			Id16Gen implEqualCmpOptId16GenVar
			Id32Gen implEqualCmpOptId32GenVar
			Id64Gen implEqualCmpOptId64GenVar
			FloatDef implEqualCmpOptFloatVar
			DoubleDef implEqualCmpOptDoubleVar
			NumberDef implEqualCmpOptNumberVar
			StringDef implEqualCmpOptStringVar
			TokenDef implEqualCmpOptTokenVar
			NmTokenDef implEqualCmpOptNmTokenVar
			NmTokensDef implEqualCmpOptNmTokensVar
			TextDef implEqualCmpOptTextVar
			DateDef implEqualCmpOptDateVar
			TimeDef implEqualCmpOptTimeVar
			TimestampDef implEqualCmpOptTimestampVar
			TZDateDef implEqualCmpOptTZDateVar
			TZTimeDef implEqualCmpOptTZTimeVar
			TZTimestampDef implEqualCmpOptTZTimestampVar
			UuidDef implEqualCmpOptUuidVar
			UuidGen implEqualCmpOptUuidVar
			default error$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptBlobVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptBoolVar"
	>$implEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptEnumVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptInt16Var"
	>$implEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptInt32Var"
	>$implEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptInt64Var"
	>$implEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptUInt16Var"
	>$implEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptUInt32Var"
	>$implEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptUInt64Var"
	>$implEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptId16GenVar"
	>$implEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptId32GenVar"
	>$implEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptId64GenVar"
	>$implEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptFloatVar"
	>$implEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptDoubleVar"
	>$implEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptNumberVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implEqualCmpOptStringVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptNmTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptNmTokensVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptTextVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implEqualCmpOptTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptTZDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptTZTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptTZTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpOptUuidVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( 0 != uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implEqualCmpOptValue">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implEqualCmpOptObj">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implEqualCmpReq"
	>$reference Column implEqualCmpReq$</GenRule>

	<GenRule GenDef="Value" Name="implEqualCmpReq"
	>$switch BaseModelAtomClass
		BlobDef implEqualCmpReqBlobVar
		BoolDef implEqualCmpReqBoolVar
		EnumDef implEqualCmpReqEnumVar
		Int16Def implEqualCmpReqInt16Var
		Int32Def implEqualCmpReqInt32Var
		Int64Def implEqualCmpReqInt64Var
		UInt16Def implEqualCmpReqUInt16Var
		UInt32Def implEqualCmpReqUInt32Var
		UInt64Def implEqualCmpReqUInt64Var
		Id16Gen implEqualCmpReqId16GenVar
		Id32Gen implEqualCmpReqId32GenVar
		Id64Gen implEqualCmpReqId64GenVar
		FloatDef implEqualCmpReqFloatVar
		DoubleDef implEqualCmpReqDoubleVar
		NumberDef implEqualCmpReqNumberVar
		StringDef implEqualCmpReqStringVar
		TokenDef implEqualCmpReqTokenVar
		NmTokenDef implEqualCmpReqNmTokenVar
		NmTokensDef implEqualCmpReqNmTokensVar
		TextDef implEqualCmpReqTextVar
		DateDef implEqualCmpReqDateVar
		TimeDef implEqualCmpReqTimeVar
		TimestampDef implEqualCmpReqTimestampVar
		TZDateDef implEqualCmpReqTZDateVar
		TZTimeDef implEqualCmpReqTZTimeVar
		TZTimestampDef implEqualCmpReqTZTimestampVar
		UuidDef implEqualCmpReqUuidVar
		UuidGen implEqualCmpReqUuidVar
		default error$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqBlobVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqBoolVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqEnumVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqInt16Var"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqInt32Var"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqInt64Var"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqUInt16Var"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqUInt32Var"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqUInt64Var"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqId16GenVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqId32GenVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqId64GenVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqFloatVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqDoubleVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqNumberVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqStringVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqTokenVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqNmTokenVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqNmTokensVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqTextVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqDateVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqTimeVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqTimestampVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqTZDateVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqTZTimeVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqTZTimestampVar"
	>$implEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpReqUuidVar">
		if( 0 != uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( false );
		}</GenRule>

	<GenRule GenDef="Object" Name="implEqualCmpReqValue">
		if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}</GenRule>

	<GenRule GenDef="Object" Name="implEqualCmpReqObj">
		if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}</GenRule>

	<GenRule GenDef="Object" Name="implNotEqualCmpAttr"
	>$switch IsNullable yes implNotEqualCmpOpt default implNotEqualCmpReq$</GenRule>

	<GenRule GenDef="IndexCol" Name="implNotEqualCmpOpt"
	>$reference Column implNotEqualCmpOpt$</GenRule>

	<GenRule GenDef="Object" Name="implNotEqualCmpOpt"
	>$switch BaseModelAtomClass
		BlobDef implNotEqualCmpOptBlobVar
		BoolDef implNotEqualCmpOptBoolVar
		EnumDef implNotEqualCmpOptEnumVar
		Int16Def implNotEqualCmpOptInt16Var
		Int32Def implNotEqualCmpOptInt32Var
		Int64Def implNotEqualCmpOptInt64Var
		UInt16Def implNotEqualCmpOptUInt16Var
		UInt32Def implNotEqualCmpOptUInt32Var
		UInt64Def implNotEqualCmpOptUInt64Var
		Id16Gen implNotEqualCmpOptId16GenVar
		Id32Gen implNotEqualCmpOptId32GenVar
		Id64Gen implNotEqualCmpOptId64GenVar
		FloatDef implNotEqualCmpOptFloatVar
		DoubleDef implNotEqualCmpOptDoubleVar
		NumberDef implNotEqualCmpOptNumberVar
		StringDef implNotEqualCmpOptStringVar
		TokenDef implNotEqualCmpOptTokenVar
		NmTokenDef implNotEqualCmpOptNmTokenVar
		NmTokensDef implNotEqualCmpOptNmTokensVar
		TextDef implNotEqualCmpOptTextVar
		DateDef implNotEqualCmpOptDateVar
		TimeDef implNotEqualCmpOptTimeVar
		TimestampDef implNotEqualCmpOptTimestampVar
		TZDateDef implNotEqualCmpOptTZDateVar
		TZTimeDef implNotEqualCmpOptTZTimeVar
		TZTimestampDef implNotEqualCmpOptTZTimestampVar
		UuidDef implNotEqualCmpOptUuidVar
		UuidGen implNotEqualCmpOptUuidVar
		default error$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptBlobVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptBoolVar"
	>$implNotEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptEnumVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptInt16Var"
	>$implNotEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptInt32Var"
	>$implNotEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptInt64Var"
	>$implNotEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptUInt16Var"
	>$implNotEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptUInt32Var"
	>$implNotEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptUInt64Var"
	>$implNotEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptId16GenVar"
	>$implNotEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptId32GenVar"
	>$implNotEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptId64GenVar"
	>$implNotEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptFloatVar"
	>$implNotEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptDoubleVar"
	>$implNotEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptNumberVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implNotEqualCmpOptStringVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptNmTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptNmTokensVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptTextVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptTZDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptTZTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptTZTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpOptUuidVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( 0 != uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implNotEqualCmpOptValue">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implNotEqualCmpOptObj">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implNotEqualCmpReq"
	>$reference Column implNotEqualCmpReq$</GenRule>

	<GenRule GenDef="Value" Name="implNotEqualCmpReq"
	>$switch BaseModelAtomClass
		BlobDef implNotEqualCmpReqBlobVar
		BoolDef implNotEqualCmpReqBoolVar
		EnumDef implNotEqualCmpReqEnumVar
		Int16Def implNotEqualCmpReqInt16Var
		Int32Def implNotEqualCmpReqInt32Var
		Int64Def implNotEqualCmpReqInt64Var
		UInt16Def implNotEqualCmpReqUInt16Var
		UInt32Def implNotEqualCmpReqUInt32Var
		UInt64Def implNotEqualCmpReqUInt64Var
		Id16Gen implNotEqualCmpReqId16GenVar
		Id32Gen implNotEqualCmpReqId32GenVar
		Id64Gen implNotEqualCmpReqId64GenVar
		FloatDef implNotEqualCmpReqFloatVar
		DoubleDef implNotEqualCmpReqDoubleVar
		NumberDef implNotEqualCmpReqNumberVar
		StringDef implNotEqualCmpReqStringVar
		TokenDef implNotEqualCmpReqTokenVar
		NmTokenDef implNotEqualCmpReqNmTokenVar
		NmTokensDef implNotEqualCmpReqNmTokensVar
		TextDef implNotEqualCmpReqTextVar
		DateDef implNotEqualCmpReqDateVar
		TimeDef implNotEqualCmpReqTimeVar
		TimestampDef implNotEqualCmpReqTimestampVar
		TZDateDef implNotEqualCmpReqTZDateVar
		TZTimeDef implNotEqualCmpReqTZTimeVar
		TZTimestampDef implNotEqualCmpReqTZTimestampVar
		UuidDef implNotEqualCmpReqUuidVar
		UuidGen implNotEqualCmpReqUuidVar
		default error$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqBlobVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqBoolVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqEnumVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqInt16Var"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqInt32Var"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqInt64Var"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqUInt16Var"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqUInt32Var"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqUInt64Var"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqId16GenVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqId32GenVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqId64GenVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqFloatVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqDoubleVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqNumberVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqStringVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqTokenVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqNmTokenVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqNmTokensVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqTextVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqDateVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqTimeVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqTimestampVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqTZDateVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqTZTimeVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqTZTimestampVar"
	>$implNotEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpReqUuidVar">
		if( 0 != uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implNotEqualCmpReqValue">
		if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implNotEqualCmpReqObj">
		if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implLessThanCmpAttr"
	>$switch IsNullable yes implLessThanCmpOpt default implLessThanCmpReq$</GenRule>

	<GenRule GenDef="IndexCol" Name="implLessThanCmpOpt"
	>$reference Column implLessThanCmpOpt$</GenRule>

	<GenRule GenDef="Object" Name="implLessThanCmpOpt"
	>$switch BaseModelAtomClass
		BlobDef implLessThanCmpOptBlobVar
		BoolDef implLessThanCmpOptBoolVar
		EnumDef implLessThanCmpOptEnumVar
		Int16Def implLessThanCmpOptInt16Var
		Int32Def implLessThanCmpOptInt32Var
		Int64Def implLessThanCmpOptInt64Var
		UInt16Def implLessThanCmpOptUInt16Var
		UInt32Def implLessThanCmpOptUInt32Var
		UInt64Def implLessThanCmpOptUInt64Var
		Id16Gen implLessThanCmpOptId16GenVar
		Id32Gen implLessThanCmpOptId32GenVar
		Id64Gen implLessThanCmpOptId64GenVar
		FloatDef implLessThanCmpOptFloatVar
		DoubleDef implLessThanCmpOptDoubleVar
		NumberDef implLessThanCmpOptNumberVar
		StringDef implLessThanCmpOptStringVar
		TokenDef implLessThanCmpOptTokenVar
		NmTokenDef implLessThanCmpOptNmTokenVar
		NmTokensDef implLessThanCmpOptNmTokensVar
		TextDef implLessThanCmpOptTextVar
		DateDef implLessThanCmpOptDateVar
		TimeDef implLessThanCmpOptTimeVar
		TimestampDef implLessThanCmpOptTimestampVar
		TZDateDef implLessThanCmpOptTZDateVar
		TZTimeDef implLessThanCmpOptTZTimeVar
		TZTimestampDef implLessThanCmpOptTZTimestampVar
		UuidDef implLessThanCmpOptUuidVar
		UuidGen implLessThanCmpOptUuidVar
		default error$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptBlobVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptBoolVar"
	>$implLessThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptEnumVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptInt16Var"
	>$implLessThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptInt32Var"
	>$implLessThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptInt64Var"
	>$implLessThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptUInt16Var"
	>$implLessThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptUInt32Var"
	>$implLessThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptUInt64Var"
	>$implLessThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptId16GenVar"
	>$implLessThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptId32GenVar"
	>$implLessThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptId64GenVar"
	>$implLessThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptFloatVar"
	>$implLessThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptDoubleVar"
	>$implLessThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptNumberVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessThanCmpOptStringVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptNmTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptNmTokensVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptTextVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptTZDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptTZTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptTZTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpOptUuidVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( 0 &gt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( false );
			}
			else if( 0 &lt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessThanCmpOptValue">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessThanCmpOptObj">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implLessThanCmpReq"
	>$reference Column implLessThanCmpReq$</GenRule>

	<GenRule GenDef="Value" Name="implLessThanCmpReq"
	>$switch BaseModelAtomClass
		BlobDef implLessThanCmpReqBlobVar
		BoolDef implLessThanCmpReqBoolVar
		EnumDef implLessThanCmpReqEnumVar
		Int16Def implLessThanCmpReqInt16Var
		Int32Def implLessThanCmpReqInt32Var
		Int64Def implLessThanCmpReqInt64Var
		UInt16Def implLessThanCmpReqUInt16Var
		UInt32Def implLessThanCmpReqUInt32Var
		UInt64Def implLessThanCmpReqUInt64Var
		Id16Gen implLessThanCmpReqId16GenVar
		Id32Gen implLessThanCmpReqId32GenVar
		Id64Gen implLessThanCmpReqId64GenVar
		FloatDef implLessThanCmpReqFloatVar
		DoubleDef implLessThanCmpReqDoubleVar
		NumberDef implLessThanCmpReqNumberVar
		StringDef implLessThanCmpReqStringVar
		TokenDef implLessThanCmpReqTokenVar
		NmTokenDef implLessThanCmpReqNmTokenVar
		NmTokensDef implLessThanCmpReqNmTokensVar
		TextDef implLessThanCmpReqTextVar
		DateDef implLessThanCmpReqDateVar
		TimeDef implLessThanCmpReqTimeVar
		TimestampDef implLessThanCmpReqTimestampVar
		TZDateDef implLessThanCmpReqTZDateVar
		TZTimeDef implLessThanCmpReqTZTimeVar
		TZTimestampDef implLessThanCmpReqTZTimestampVar
		UuidDef implLessThanCmpReqUuidVar
		UuidGen implLessThanCmpReqUuidVar
		default error$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqBlobVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqBoolVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqEnumVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqInt16Var"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqInt32Var"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqInt64Var"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqUInt16Var"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqUInt32Var"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqUInt64Var"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqId16GenVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqId32GenVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqId64GenVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqFloatVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqDoubleVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqNumberVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqStringVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqTokenVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqNmTokenVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqNmTokensVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqTextVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqDateVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqTimeVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqTimestampVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqTZDateVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqTZTimeVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqTZTimestampVar"
	>$implLessThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpReqUuidVar">
		if( 0 &gt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( false );
		}
		else if( 0 &lt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implLessThanCmpReqValue">
		if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implLessThanCmpReqObj">
		if( get$implColumnAttrOptionality$$Name$
$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( get$implColumnAttrOptionality$$Name$
$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}</GenRule>

	<GenRule GenDef="Object" Name="implLessOrEqualCmpAttr"
	>$switch IsNullable yes implLessOrEqualCmpOpt default implLessOrEqualCmpReq$</GenRule>

	<GenRule GenDef="IndexCol" Name="implLessOrEqualCmpOpt"
	>$reference Column implLessOrEqualCmpOpt$</GenRule>

	<GenRule GenDef="Object" Name="implLessOrEqualCmpOpt"
	>$switch BaseModelAtomClass
		BlobDef implLessOrEqualCmpOptBlobVar
		BoolDef implLessOrEqualCmpOptBoolVar
		EnumDef implLessOrEqualCmpOptEnumVar
		Int16Def implLessOrEqualCmpOptInt16Var
		Int32Def implLessOrEqualCmpOptInt32Var
		Int64Def implLessOrEqualCmpOptInt64Var
		UInt16Def implLessOrEqualCmpOptUInt16Var
		UInt32Def implLessOrEqualCmpOptUInt32Var
		UInt64Def implLessOrEqualCmpOptUInt64Var
		Id16Gen implLessOrEqualCmpOptId16GenVar
		Id32Gen implLessOrEqualCmpOptId32GenVar
		Id64Gen implLessOrEqualCmpOptId64GenVar
		FloatDef implLessOrEqualCmpOptFloatVar
		DoubleDef implLessOrEqualCmpOptDoubleVar
		NumberDef implLessOrEqualCmpOptNumberVar
		StringDef implLessOrEqualCmpOptStringVar
		TokenDef implLessOrEqualCmpOptTokenVar
		NmTokenDef implLessOrEqualCmpOptNmTokenVar
		NmTokensDef implLessOrEqualCmpOptNmTokensVar
		TextDef implLessOrEqualCmpOptTextVar
		DateDef implLessOrEqualCmpOptDateVar
		TimeDef implLessOrEqualCmpOptTimeVar
		TimestampDef implLessOrEqualCmpOptTimestampVar
		TZDateDef implLessOrEqualCmpOptTZDateVar
		TZTimeDef implLessOrEqualCmpOptTZTimeVar
		TZTimestampDef implLessOrEqualCmpOptTZTimestampVar
		UuidDef implLessOrEqualCmpOptUuidVar
		UuidGen implLessOrEqualCmpOptUuidVar
		default error$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptBlobVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptBoolVar"
	>$implLessOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptEnumVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptInt16Var"
	>$implLessOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptInt32Var"
	>$implLessOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptInt64Var"
	>$implLessOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptUInt16Var"
	>$implLessOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptUInt32Var"
	>$implLessOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptUInt64Var"
	>$implLessOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptId16GenVar"
	>$implLessOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptId32GenVar"
	>$implLessOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptId64GenVar"
	>$implLessOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptFloatVar"
	>$implLessOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptDoubleVar"
	>$implLessOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptNumberVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptStringVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptNmTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptNmTokensVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptTextVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptTZDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptTZTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptTZTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptUuidVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( 0 &lt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( false );
			}
			else if( 0 &gt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptValue">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessOrEqualCmpOptObj">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implLessOrEqualCmpReq"
	>$reference Column implLessOrEqualCmpReq$</GenRule>

	<GenRule GenDef="Value" Name="implLessOrEqualCmpReq"
	>$switch BaseModelAtomClass
		BlobDef implLessOrEqualCmpReqBlobVar
		BoolDef implLessOrEqualCmpReqBoolVar
		EnumDef implLessOrEqualCmpReqEnumVar
		Int16Def implLessOrEqualCmpReqInt16Var
		Int32Def implLessOrEqualCmpReqInt32Var
		Int64Def implLessOrEqualCmpReqInt64Var
		UInt16Def implLessOrEqualCmpReqUInt16Var
		UInt32Def implLessOrEqualCmpReqUInt32Var
		UInt64Def implLessOrEqualCmpReqUInt64Var
		Id16Gen implLessOrEqualCmpReqId16GenVar
		Id32Gen implLessOrEqualCmpReqId32GenVar
		Id64Gen implLessOrEqualCmpReqId64GenVar
		FloatDef implLessOrEqualCmpReqFloatVar
		DoubleDef implLessOrEqualCmpReqDoubleVar
		NumberDef implLessOrEqualCmpReqNumberVar
		StringDef implLessOrEqualCmpReqStringVar
		TokenDef implLessOrEqualCmpReqTokenVar
		NmTokenDef implLessOrEqualCmpReqNmTokenVar
		NmTokensDef implLessOrEqualCmpReqNmTokensVar
		TextDef implLessOrEqualCmpReqTextVar
		DateDef implLessOrEqualCmpReqDateVar
		TimeDef implLessOrEqualCmpReqTimeVar
		TimestampDef implLessOrEqualCmpReqTimestampVar
		TZDateDef implLessOrEqualCmpReqTZDateVar
		TZTimeDef implLessOrEqualCmpReqTZTimeVar
		TZTimestampDef implLessOrEqualCmpReqTZTimestampVar
		UuidDef implLessOrEqualCmpReqUuidVar
		UuidGen implLessOrEqualCmpReqUuidVar
		default error$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqBlobVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqBoolVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqEnumVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqInt16Var"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqInt32Var"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqInt64Var"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqUInt16Var"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqUInt32Var"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqUInt64Var"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqId16GenVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqId32GenVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqId64GenVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqFloatVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqDoubleVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqNumberVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqStringVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqTokenVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqNmTokenVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqNmTokensVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqTextVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqDateVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqTimeVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqTimestampVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqTZDateVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqTZTimeVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqTZTimestampVar"
	>$implLessOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqUuidVar">
		if( 0 &lt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( false );
		}
		else if( 0 &gt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqValue">
		if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implLessOrEqualCmpReqObj">
		if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpAttr"
	>$switch IsNullable yes implGreaterOrEqualCmpOpt default implGreaterOrEqualCmpReq$</GenRule>

	<GenRule GenDef="IndexCol" Name="implGreaterOrEqualCmpOpt"
	>$reference Column implGreaterOrEqualCmpOpt$</GenRule>

	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpOpt"
	>$switch BaseModelAtomClass
		BlobDef implGreaterOrEqualCmpOptBlobVar
		BoolDef implGreaterOrEqualCmpOptBoolVar
		EnumDef implGreaterOrEqualCmpOptEnumVar
		Int16Def implGreaterOrEqualCmpOptInt16Var
		Int32Def implGreaterOrEqualCmpOptInt32Var
		Int64Def implGreaterOrEqualCmpOptInt64Var
		UInt16Def implGreaterOrEqualCmpOptUInt16Var
		UInt32Def implGreaterOrEqualCmpOptUInt32Var
		UInt64Def implGreaterOrEqualCmpOptUInt64Var
		Id16Gen implGreaterOrEqualCmpOptId16GenVar
		Id32Gen implGreaterOrEqualCmpOptId32GenVar
		Id64Gen implGreaterOrEqualCmpOptId64GenVar
		FloatDef implGreaterOrEqualCmpOptFloatVar
		DoubleDef implGreaterOrEqualCmpOptDoubleVar
		NumberDef implGreaterOrEqualCmpOptNumberVar
		StringDef implGreaterOrEqualCmpOptStringVar
		TokenDef implGreaterOrEqualCmpOptTokenVar
		NmTokenDef implGreaterOrEqualCmpOptNmTokenVar
		NmTokensDef implGreaterOrEqualCmpOptNmTokensVar
		TextDef implGreaterOrEqualCmpOptTextVar
		DateDef implGreaterOrEqualCmpOptDateVar
		TimeDef implGreaterOrEqualCmpOptTimeVar
		TimestampDef implGreaterOrEqualCmpOptTimestampVar
		TZDateDef implGreaterOrEqualCmpOptTZDateVar
		TZTimeDef implGreaterOrEqualCmpOptTZTimeVar
		TZTimestampDef implGreaterOrEqualCmpOptTZTimestampVar
		UuidDef implGreaterOrEqualCmpOptUuidVar
		UuidGen implGreaterOrEqualCmpOptUuidVar
		default error$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptBlobVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptBoolVar"
	>$implGreaterOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptEnumVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptInt16Var"
	>$implGreaterOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptInt32Var"
	>$implGreaterOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptInt64Var"
	>$implGreaterOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptUInt16Var"
	>$implGreaterOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptUInt32Var"
	>$implGreaterOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptUInt64Var"
	>$implGreaterOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptId16GenVar"
	>$implGreaterOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptId32GenVar"
	>$implGreaterOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptId64GenVar"
	>$implGreaterOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptFloatVar"
	>$implGreaterOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptDoubleVar"
	>$implGreaterOrEqualCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptNumberVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptStringVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptNmTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptNmTokensVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptTextVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptTZDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptTZTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptTZTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptUuidVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( 0 &gt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( false );
			}
			else if( 0 &lt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptValue">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpOptObj">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implGreaterOrEqualCmpReq"
	>$reference Column implGreaterOrEqualCmpReq$</GenRule>

	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpReq"
	>$switch BaseModelAtomClass
		BlobDef implGreaterOrEqualCmpReqBlobVar
		BoolDef implGreaterOrEqualCmpReqBoolVar
		EnumDef implGreaterOrEqualCmpReqEnumVar
		Int16Def implGreaterOrEqualCmpReqInt16Var
		Int32Def implGreaterOrEqualCmpReqInt32Var
		Int64Def implGreaterOrEqualCmpReqInt64Var
		UInt16Def implGreaterOrEqualCmpReqUInt16Var
		UInt32Def implGreaterOrEqualCmpReqUInt32Var
		UInt64Def implGreaterOrEqualCmpReqUInt64Var
		Id16Gen implGreaterOrEqualCmpReqId16GenVar
		Id32Gen implGreaterOrEqualCmpReqId32GenVar
		Id64Gen implGreaterOrEqualCmpReqId64GenVar
		FloatDef implGreaterOrEqualCmpReqFloatVar
		DoubleDef implGreaterOrEqualCmpReqDoubleVar
		NumberDef implGreaterOrEqualCmpReqNumberVar
		StringDef implGreaterOrEqualCmpReqStringVar
		TokenDef implGreaterOrEqualCmpReqTokenVar
		NmTokenDef implGreaterOrEqualCmpReqNmTokenVar
		NmTokensDef implGreaterOrEqualCmpReqNmTokensVar
		TextDef implGreaterOrEqualCmpReqTextVar
		DateDef implGreaterOrEqualCmpReqDateVar
		TimeDef implGreaterOrEqualCmpReqTimeVar
		TimestampDef implGreaterOrEqualCmpReqTimestampVar
		TZDateDef implGreaterOrEqualCmpReqTZDateVar
		TZTimeDef implGreaterOrEqualCmpReqTZTimeVar
		TZTimestampDef implGreaterOrEqualCmpReqTZTimestampVar
		UuidDef implGreaterOrEqualCmpReqUuidVar
		UuidGen implGreaterOrEqualCmpReqUuidVar
		default error$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqBlobVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqBoolVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqEnumVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqInt16Var"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqInt32Var"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqInt64Var"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqUInt16Var"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqUInt32Var"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqUInt64Var"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqId16GenVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqId32GenVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqId64GenVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqFloatVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqDoubleVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqNumberVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqStringVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqTokenVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqNmTokenVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqNmTokensVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqTextVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqDateVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqTimeVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqTimestampVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqTZDateVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqTZTimeVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqTZTimestampVar"
	>$implGreaterOrEqualCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqUuidVar">
		if( 0 &gt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( false );
		}
		else if( 0 &lt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqValue">
		if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpReqObj">
		if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGreaterThanCmpAttr"
	>$switch IsNullable yes implGreaterThanCmpOpt default implGreaterThanCmpReq$</GenRule>

	<GenRule GenDef="IndexCol" Name="implGreaterThanCmpOpt"
	>$reference Column implGreaterThanCmpOpt$</GenRule>

	<GenRule GenDef="Object" Name="implGreaterThanCmpOpt"
	>$switch BaseModelAtomClass
		BlobDef implGreaterThanCmpOptBlobVar
		BoolDef implGreaterThanCmpOptBoolVar
		EnumDef implGreaterThanCmpOptEnumVar
		Int16Def implGreaterThanCmpOptInt16Var
		Int32Def implGreaterThanCmpOptInt32Var
		Int64Def implGreaterThanCmpOptInt64Var
		UInt16Def implGreaterThanCmpOptUInt16Var
		UInt32Def implGreaterThanCmpOptUInt32Var
		UInt64Def implGreaterThanCmpOptUInt64Var
		Id16Gen implGreaterThanCmpOptId16GenVar
		Id32Gen implGreaterThanCmpOptId32GenVar
		Id64Gen implGreaterThanCmpOptId64GenVar
		FloatDef implGreaterThanCmpOptFloatVar
		DoubleDef implGreaterThanCmpOptDoubleVar
		NumberDef implGreaterThanCmpOptNumberVar
		StringDef implGreaterThanCmpOptStringVar
		TokenDef implGreaterThanCmpOptTokenVar
		NmTokenDef implGreaterThanCmpOptNmTokenVar
		NmTokensDef implGreaterThanCmpOptNmTokensVar
		TextDef implGreaterThanCmpOptTextVar
		DateDef implGreaterThanCmpOptDateVar
		TimeDef implGreaterThanCmpOptTimeVar
		TimestampDef implGreaterThanCmpOptTimestampVar
		TZDateDef implGreaterThanCmpOptTZDateVar
		TZTimeDef implGreaterThanCmpOptTZTimeVar
		TZTimestampDef implGreaterThanCmpOptTZTimestampVar
		UuidDef implGreaterThanCmpOptUuidVar
		UuidGen implGreaterThanCmpOptUuidVar
		default error$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptBlobVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptBoolVar"
	>$implGreaterThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptEnumVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptInt16Var"
	>$implGreaterThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptInt32Var"
	>$implGreaterThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptInt64Var"
	>$implGreaterThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptUInt16Var"
	>$implGreaterThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptUInt32Var"
	>$implGreaterThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptUInt64Var"
	>$implGreaterThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptId16GenVar"
	>$implGreaterThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptId32GenVar"
	>$implGreaterThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptId64GenVar"
	>$implGreaterThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptFloatVar"
	>$implGreaterThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptDoubleVar"
	>$implGreaterThanCmpOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptNumberVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterThanCmpOptStringVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptNmTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptNmTokensVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptTextVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterThanCmpOptTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptTZDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptTZTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptTZTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpOptUuidVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( 0 &gt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( false );
			}
			else if( 0 &lt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterThanCmpOptValue">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterThanCmpOptObj">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			return( false );
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implGreaterThanCmpReq"
	>$reference Column implGreaterThanCmpReq$</GenRule>

	<GenRule GenDef="Value" Name="implGreaterThanCmpReq"
	>$switch BaseModelAtomClass
		BlobDef implGreaterThanCmpReqBlobVar
		BoolDef implGreaterThanCmpReqBoolVar
		EnumDef implGreaterThanCmpReqEnumVar
		Int16Def implGreaterThanCmpReqInt16Var
		Int32Def implGreaterThanCmpReqInt32Var
		Int64Def implGreaterThanCmpReqInt64Var
		UInt16Def implGreaterThanCmpReqUInt16Var
		UInt32Def implGreaterThanCmpReqUInt32Var
		UInt64Def implGreaterThanCmpReqUInt64Var
		Id16Gen implGreaterThanCmpReqId16GenVar
		Id32Gen implGreaterThanCmpReqId32GenVar
		Id64Gen implGreaterThanCmpReqId64GenVar
		FloatDef implGreaterThanCmpReqFloatVar
		DoubleDef implGreaterThanCmpReqDoubleVar
		NumberDef implGreaterThanCmpReqNumberVar
		StringDef implGreaterThanCmpReqStringVar
		TokenDef implGreaterThanCmpReqTokenVar
		NmTokenDef implGreaterThanCmpReqNmTokenVar
		NmTokensDef implGreaterThanCmpReqNmTokensVar
		TextDef implGreaterThanCmpReqTextVar
		DateDef implGreaterThanCmpReqDateVar
		TimeDef implGreaterThanCmpReqTimeVar
		TimestampDef implGreaterThanCmpReqTimestampVar
		TZDateDef implGreaterThanCmpReqTZDateVar
		TZTimeDef implGreaterThanCmpReqTZTimeVar
		TZTimestampDef implGreaterThanCmpReqTZTimestampVar
		UuidDef implGreaterThanCmpReqUuidVar
		UuidGen implGreaterThanCmpReqUuidVar
		default error$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqBlobVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqBoolVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqEnumVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqInt16Var"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqInt32Var"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqInt64Var"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqUInt16Var"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqUInt32Var"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqUInt64Var"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqId16GenVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqId32GenVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqId64GenVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqFloatVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqDoubleVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqNumberVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqStringVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqTokenVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqNmTokenVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqNmTokensVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqTextVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqDateVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqTimeVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqTimestampVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqTZDateVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqTZTimeVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqTZTimestampVar"
	>$implGreaterThanCmpReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpReqUuidVar">
		if( 0 &gt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( false );
		}
		else if( 0 &lt; uuid_compare( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGreaterThanCmpReqValue">
		if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGreaterThanCmpReqObj">
		if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implEqualCmpLhsAttr"
		>$switch IsNullable yes implEqualCmpLhsOpt default implEqualCmpLhsReq$</GenRule>

	<GenRule GenDef="IndexCol" Name="implEqualCmpLhsOpt"
		>$reference Column implEqualCmpLhsOpt$</GenRule>

	<GenRule GenDef="Object" Name="implEqualCmpLhsOpt"
		>$switch BaseModelAtomClass
			BlobDef implEqualCmpLhsOptBlobVar
			BoolDef implEqualCmpLhsOptBoolVar
			EnumDef implEqualCmpLhsOptEnumVar
			Int16Def implEqualCmpLhsOptInt16Var
			Int32Def implEqualCmpLhsOptInt32Var
			Int64Def implEqualCmpLhsOptInt64Var
			UInt16Def implEqualCmpLhsOptUInt16Var
			UInt32Def implEqualCmpLhsOptUInt32Var
			UInt64Def implEqualCmpLhsOptUInt64Var
			Id16Gen implEqualCmpLhsOptId16GenVar
			Id32Gen implEqualCmpLhsOptId32GenVar
			Id64Gen implEqualCmpLhsOptId64GenVar
			FloatDef implEqualCmpLhsOptFloatVar
			DoubleDef implEqualCmpLhsOptDoubleVar
			NumberDef implEqualCmpLhsOptNumberVar
			StringDef implEqualCmpLhsOptStringVar
			TokenDef implEqualCmpLhsOptTokenVar
			NmTokenDef implEqualCmpLhsOptNmTokenVar
			NmTokensDef implEqualCmpLhsOptNmTokensVar
			TextDef implEqualCmpLhsOptTextVar
			DateDef implEqualCmpLhsOptDateVar
			TimeDef implEqualCmpLhsOptTimeVar
			TimestampDef implEqualCmpLhsOptTimestampVar
			TZDateDef implEqualCmpLhsOptTZDateVar
			TZTimeDef implEqualCmpLhsOptTZTimeVar
			TZTimestampDef implEqualCmpLhsOptTZTimestampVar
			UuidDef implEqualCmpLhsOptUuidVar
			UuidGen implEqualCmpLhsOptUuidVar
			default error$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptBlobVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptBoolVar"
	>$implEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptEnumVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptInt16Var"
	>$implEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptInt32Var"
	>$implEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptInt64Var"
	>$implEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptUInt16Var"
	>$implEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptUInt32Var"
	>$implEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptUInt64Var"
	>$implEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptId16GenVar"
	>$implEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptId32GenVar"
	>$implEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptId64GenVar"
	>$implEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptFloatVar"
	>$implEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptDoubleVar"
	>$implEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptNumberVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implEqualCmpLhsOptStringVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptTokenVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptNmTokenVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptNmTokensVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptTextVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptDateVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptTimeVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptTimestampVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptTZDateVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptTZTimeVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptTZTimestampVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implEqualCmpLhsOptUuidVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( 0 != uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implEqualCmpLhsOptValue">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implEqualCmpLhsOptObj">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
					return( false );
				}
			}
			else {
				return( false );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implEqualCmpLhsReq"
	>$reference Column implEqualCmpLhsReq$</GenRule>

	<GenRule GenDef="Value" Name="implEqualCmpLhsReq"
	>$switch BaseModelAtomClass
		BlobDef implEqualCmpLhsReqBlobVar
		BoolDef implEqualCmpLhsReqBoolVar
		EnumDef implEqualCmpLhsReqEnumVar
		Int16Def implEqualCmpLhsReqInt16Var
		Int32Def implEqualCmpLhsReqInt32Var
		Int64Def implEqualCmpLhsReqInt64Var
		UInt16Def implEqualCmpLhsReqUInt16Var
		UInt32Def implEqualCmpLhsReqUInt32Var
		UInt64Def implEqualCmpLhsReqUInt64Var
		Id16Gen implEqualCmpLhsReqId16GenVar
		Id32Gen implEqualCmpLhsReqId32GenVar
		Id64Gen implEqualCmpLhsReqId64GenVar
		FloatDef implEqualCmpLhsReqFloatVar
		DoubleDef implEqualCmpLhsReqDoubleVar
		NumberDef implEqualCmpLhsReqNumberVar
		StringDef implEqualCmpLhsReqStringVar
		TokenDef implEqualCmpLhsReqTokenVar
		NmTokenDef implEqualCmpLhsReqNmTokenVar
		NmTokensDef implEqualCmpLhsReqNmTokensVar
		TextDef implEqualCmpLhsReqTextVar
		DateDef implEqualCmpLhsReqDateVar
		TimeDef implEqualCmpLhsReqTimeVar
		TimestampDef implEqualCmpLhsReqTimestampVar
		TZDateDef implEqualCmpLhsReqTZDateVar
		TZTimeDef implEqualCmpLhsReqTZTimeVar
		TZTimestampDef implEqualCmpLhsReqTZTimestampVar
		UuidDef implEqualCmpLhsReqUuidVar
		UuidGen implEqualCmpLhsReqUuidVar
		default error$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqBlobVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqBoolVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqEnumVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqInt16Var"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqInt32Var"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqInt64Var"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqUInt16Var"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqUInt32Var"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqUInt64Var"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqId16GenVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqId32GenVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqId64GenVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqFloatVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqDoubleVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqNumberVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqStringVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqTokenVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqNmTokenVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqNmTokensVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqTextVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqDateVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqTimeVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqTimestampVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqTZDateVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqTZTimeVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqTZTimestampVar"
	>$implEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implEqualCmpLhsReqUuidVar">
		if( 0 != uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( false );
		}</GenRule>

	<GenRule GenDef="Object" Name="implEqualCmpLhsReqValue">
		if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}</GenRule>

	<GenRule GenDef="Object" Name="implEqualCmpLhsReqObj">
		if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}</GenRule>

	<GenRule GenDef="Object" Name="implNotEqualCmpLhsAttr"
	>$switch IsNullable yes implNotEqualCmpLhsOpt default implNotEqualCmpLhsReq$</GenRule>

	<GenRule GenDef="IndexCol" Name="implNotEqualCmpLhsOpt"
	>$reference Column implNotEqualCmpLhsOpt$</GenRule>

	<GenRule GenDef="Object" Name="implNotEqualCmpLhsOpt"
	>$switch BaseModelAtomClass
		BlobDef implNotEqualCmpLhsOptBlobVar
		BoolDef implNotEqualCmpLhsOptBoolVar
		EnumDef implNotEqualCmpLhsOptEnumVar
		Int16Def implNotEqualCmpLhsOptInt16Var
		Int32Def implNotEqualCmpLhsOptInt32Var
		Int64Def implNotEqualCmpLhsOptInt64Var
		UInt16Def implNotEqualCmpLhsOptUInt16Var
		UInt32Def implNotEqualCmpLhsOptUInt32Var
		UInt64Def implNotEqualCmpLhsOptUInt64Var
		Id16Gen implNotEqualCmpLhsOptId16GenVar
		Id32Gen implNotEqualCmpLhsOptId32GenVar
		Id64Gen implNotEqualCmpLhsOptId64GenVar
		FloatDef implNotEqualCmpLhsOptFloatVar
		DoubleDef implNotEqualCmpLhsOptDoubleVar
		NumberDef implNotEqualCmpLhsOptNumberVar
		StringDef implNotEqualCmpLhsOptStringVar
		TokenDef implNotEqualCmpLhsOptTokenVar
		NmTokenDef implNotEqualCmpLhsOptNmTokenVar
		NmTokensDef implNotEqualCmpLhsOptNmTokensVar
		TextDef implNotEqualCmpLhsOptTextVar
		DateDef implNotEqualCmpLhsOptDateVar
		TimeDef implNotEqualCmpLhsOptTimeVar
		TimestampDef implNotEqualCmpLhsOptTimestampVar
		TZDateDef implNotEqualCmpLhsOptTZDateVar
		TZTimeDef implNotEqualCmpLhsOptTZTimeVar
		TZTimestampDef implNotEqualCmpLhsOptTZTimestampVar
		UuidDef implNotEqualCmpLhsOptUuidVar
		UuidGen implNotEqualCmpLhsOptUuidVar
		default error$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptBlobVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptBoolVar"
	>$implNotEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptEnumVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptInt16Var"
	>$implNotEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptInt32Var"
	>$implNotEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptInt64Var"
	>$implNotEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptUInt16Var"
	>$implNotEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptUInt32Var"
	>$implNotEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptUInt64Var"
	>$implNotEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptId16GenVar"
	>$implNotEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptId32GenVar"
	>$implNotEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptId64GenVar"
	>$implNotEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptFloatVar"
	>$implNotEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptDoubleVar"
	>$implNotEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptNumberVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptStringVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptTokenVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptNmTokenVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptNmTokensVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptTextVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptDateVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptTimeVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptTimestampVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptTZDateVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptTZTimeVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptTZTimestampVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptUuidVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( 0 != uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptValue">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implNotEqualCmpLhsOptObj">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implNotEqualCmpLhsReq"
	>$reference Column implNotEqualCmpLhsReq$</GenRule>

	<GenRule GenDef="Value" Name="implNotEqualCmpLhsReq"
	>$switch BaseModelAtomClass
		BlobDef implNotEqualCmpLhsReqBlobVar
		BoolDef implNotEqualCmpLhsReqBoolVar
		EnumDef implNotEqualCmpLhsReqEnumVar
		Int16Def implNotEqualCmpLhsReqInt16Var
		Int32Def implNotEqualCmpLhsReqInt32Var
		Int64Def implNotEqualCmpLhsReqInt64Var
		UInt16Def implNotEqualCmpLhsReqUInt16Var
		UInt32Def implNotEqualCmpLhsReqUInt32Var
		UInt64Def implNotEqualCmpLhsReqUInt64Var
		Id16Gen implNotEqualCmpLhsReqId16GenVar
		Id32Gen implNotEqualCmpLhsReqId32GenVar
		Id64Gen implNotEqualCmpLhsReqId64GenVar
		FloatDef implNotEqualCmpLhsReqFloatVar
		DoubleDef implNotEqualCmpLhsReqDoubleVar
		NumberDef implNotEqualCmpLhsReqNumberVar
		StringDef implNotEqualCmpLhsReqStringVar
		TokenDef implNotEqualCmpLhsReqTokenVar
		NmTokenDef implNotEqualCmpLhsReqNmTokenVar
		NmTokensDef implNotEqualCmpLhsReqNmTokensVar
		TextDef implNotEqualCmpLhsReqTextVar
		DateDef implNotEqualCmpLhsReqDateVar
		TimeDef implNotEqualCmpLhsReqTimeVar
		TimestampDef implNotEqualCmpLhsReqTimestampVar
		TZDateDef implNotEqualCmpLhsReqTZDateVar
		TZTimeDef implNotEqualCmpLhsReqTZTimeVar
		TZTimestampDef implNotEqualCmpLhsReqTZTimestampVar
		UuidDef implNotEqualCmpLhsReqUuidVar
		UuidGen implNotEqualCmpLhsReqUuidVar
		default error$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqBlobVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqBoolVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqEnumVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqInt16Var"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqInt32Var"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqInt64Var"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqUInt16Var"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqUInt32Var"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqUInt64Var"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqId16GenVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqId32GenVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqId64GenVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqFloatVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqDoubleVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqNumberVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqStringVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqTokenVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqNmTokenVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqNmTokensVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqTextVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqDateVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqTimeVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqTimestampVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqTZDateVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqTZTimeVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqTZTimestampVar"
	>$implNotEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqUuidVar">
		if( 0 != uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqValue">
		if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implNotEqualCmpLhsReqObj">
		if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() != rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implLessThanCmpLhsAttr"
	>$switch IsNullable yes implLessThanCmpLhsOpt default implLessThanCmpLhsReq$</GenRule>

	<GenRule GenDef="IndexCol" Name="implLessThanCmpLhsOpt"
	>$reference Column implLessThanCmpLhsOpt$</GenRule>

	<GenRule GenDef="Object" Name="implLessThanCmpLhsOpt"
	>$switch BaseModelAtomClass
		BlobDef implLessThanCmpLhsOptBlobVar
		BoolDef implLessThanCmpLhsOptBoolVar
		EnumDef implLessThanCmpLhsOptEnumVar
		Int16Def implLessThanCmpLhsOptInt16Var
		Int32Def implLessThanCmpLhsOptInt32Var
		Int64Def implLessThanCmpLhsOptInt64Var
		UInt16Def implLessThanCmpLhsOptUInt16Var
		UInt32Def implLessThanCmpLhsOptUInt32Var
		UInt64Def implLessThanCmpLhsOptUInt64Var
		Id16Gen implLessThanCmpLhsOptId16GenVar
		Id32Gen implLessThanCmpLhsOptId32GenVar
		Id64Gen implLessThanCmpLhsOptId64GenVar
		FloatDef implLessThanCmpLhsOptFloatVar
		DoubleDef implLessThanCmpLhsOptDoubleVar
		NumberDef implLessThanCmpLhsOptNumberVar
		StringDef implLessThanCmpLhsOptStringVar
		TokenDef implLessThanCmpLhsOptTokenVar
		NmTokenDef implLessThanCmpLhsOptNmTokenVar
		NmTokensDef implLessThanCmpLhsOptNmTokensVar
		TextDef implLessThanCmpLhsOptTextVar
		DateDef implLessThanCmpLhsOptDateVar
		TimeDef implLessThanCmpLhsOptTimeVar
		TimestampDef implLessThanCmpLhsOptTimestampVar
		TZDateDef implLessThanCmpLhsOptTZDateVar
		TZTimeDef implLessThanCmpLhsOptTZTimeVar
		TZTimestampDef implLessThanCmpLhsOptTZTimestampVar
		UuidDef implLessThanCmpLhsOptUuidVar
		UuidGen implLessThanCmpLhsOptUuidVar
		default error$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptBlobVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptBoolVar"
	>$implLessThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptEnumVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptInt16Var"
	>$implLessThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptInt32Var"
	>$implLessThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptInt64Var"
	>$implLessThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptUInt16Var"
	>$implLessThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptUInt32Var"
	>$implLessThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptUInt64Var"
	>$implLessThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptId16GenVar"
	>$implLessThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptId32GenVar"
	>$implLessThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptId64GenVar"
	>$implLessThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptFloatVar"
	>$implLessThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptDoubleVar"
	>$implLessThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptNumberVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptStringVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptTokenVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptNmTokenVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptNmTokensVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptTextVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptDateVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptTimeVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptTimestampVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptTZDateVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptTZTimeVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptTZTimestampVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptUuidVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( 0 &gt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( false );
			}
			else if( 0 &lt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptValue">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessThanCmpLhsOptObj">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implLessThanCmpLhsReq"
	>$reference Column implLessThanCmpLhsReq$</GenRule>

	<GenRule GenDef="Value" Name="implLessThanCmpLhsReq"
	>$switch BaseModelAtomClass
		BlobDef implLessThanCmpLhsReqBlobVar
		BoolDef implLessThanCmpLhsReqBoolVar
		EnumDef implLessThanCmpLhsReqEnumVar
		Int16Def implLessThanCmpLhsReqInt16Var
		Int32Def implLessThanCmpLhsReqInt32Var
		Int64Def implLessThanCmpLhsReqInt64Var
		UInt16Def implLessThanCmpLhsReqUInt16Var
		UInt32Def implLessThanCmpLhsReqUInt32Var
		UInt64Def implLessThanCmpLhsReqUInt64Var
		Id16Gen implLessThanCmpLhsReqId16GenVar
		Id32Gen implLessThanCmpLhsReqId32GenVar
		Id64Gen implLessThanCmpLhsReqId64GenVar
		FloatDef implLessThanCmpLhsReqFloatVar
		DoubleDef implLessThanCmpLhsReqDoubleVar
		NumberDef implLessThanCmpLhsReqNumberVar
		StringDef implLessThanCmpLhsReqStringVar
		TokenDef implLessThanCmpLhsReqTokenVar
		NmTokenDef implLessThanCmpLhsReqNmTokenVar
		NmTokensDef implLessThanCmpLhsReqNmTokensVar
		TextDef implLessThanCmpLhsReqTextVar
		DateDef implLessThanCmpLhsReqDateVar
		TimeDef implLessThanCmpLhsReqTimeVar
		TimestampDef implLessThanCmpLhsReqTimestampVar
		TZDateDef implLessThanCmpLhsReqTZDateVar
		TZTimeDef implLessThanCmpLhsReqTZTimeVar
		TZTimestampDef implLessThanCmpLhsReqTZTimestampVar
		UuidDef implLessThanCmpLhsReqUuidVar
		UuidGen implLessThanCmpLhsReqUuidVar
		default error$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqBlobVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqBoolVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqEnumVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqInt16Var"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqInt32Var"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqInt64Var"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqUInt16Var"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqUInt32Var"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqUInt64Var"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqId16GenVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqId32GenVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqId64GenVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqFloatVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqDoubleVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqNumberVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqStringVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqTokenVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqNmTokenVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqNmTokensVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqTextVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqDateVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqTimeVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqTimestampVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqTZDateVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqTZTimeVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqTZTimestampVar"
	>$implLessThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqUuidVar">
		if( 0 &lt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( false );
		}
		else if( 0 &gt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqValue">
		if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implLessThanCmpLhsReqObj">
		if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsAttr"
	>$switch IsNullable yes implLessOrEqualCmpLhsOpt default implLessOrEqualCmpLhsReq$</GenRule>

	<GenRule GenDef="IndexCol" Name="implLessOrEqualCmpLhsOpt"
	>$reference Column implLessOrEqualCmpLhsOpt$</GenRule>

	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsOpt"
	>$switch BaseModelAtomClass
		BlobDef implLessOrEqualCmpLhsOptBlobVar
		BoolDef implLessOrEqualCmpLhsOptBoolVar
		EnumDef implLessOrEqualCmpLhsOptEnumVar
		Int16Def implLessOrEqualCmpLhsOptInt16Var
		Int32Def implLessOrEqualCmpLhsOptInt32Var
		Int64Def implLessOrEqualCmpLhsOptInt64Var
		UInt16Def implLessOrEqualCmpLhsOptUInt16Var
		UInt32Def implLessOrEqualCmpLhsOptUInt32Var
		UInt64Def implLessOrEqualCmpLhsOptUInt64Var
		Id16Gen implLessOrEqualCmpLhsOptId16GenVar
		Id32Gen implLessOrEqualCmpLhsOptId32GenVar
		Id64Gen implLessOrEqualCmpLhsOptId64GenVar
		FloatDef implLessOrEqualCmpLhsOptFloatVar
		DoubleDef implLessOrEqualCmpLhsOptDoubleVar
		NumberDef implLessOrEqualCmpLhsOptNumberVar
		StringDef implLessOrEqualCmpLhsOptStringVar
		TokenDef implLessOrEqualCmpLhsOptTokenVar
		NmTokenDef implLessOrEqualCmpLhsOptNmTokenVar
		NmTokensDef implLessOrEqualCmpLhsOptNmTokensVar
		TextDef implLessOrEqualCmpLhsOptTextVar
		DateDef implLessOrEqualCmpLhsOptDateVar
		TimeDef implLessOrEqualCmpLhsOptTimeVar
		TimestampDef implLessOrEqualCmpLhsOptTimestampVar
		TZDateDef implLessOrEqualCmpLhsOptTZDateVar
		TZTimeDef implLessOrEqualCmpLhsOptTZTimeVar
		TZTimestampDef implLessOrEqualCmpLhsOptTZTimestampVar
		UuidDef implLessOrEqualCmpLhsOptUuidVar
		UuidGen implLessOrEqualCmpLhsOptUuidVar
		default error$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptBlobVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptBoolVar"
	>$implLessOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptEnumVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptInt16Var"
	>$implLessOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptInt32Var"
	>$implLessOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptInt64Var"
	>$implLessOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptUInt16Var"
	>$implLessOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptUInt32Var"
	>$implLessOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptUInt64Var"
	>$implLessOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptId16GenVar"
	>$implLessOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptId32GenVar"
	>$implLessOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptId64GenVar"
	>$implLessOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptFloatVar"
	>$implLessOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptDoubleVar"
	>$implLessOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptNumberVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptStringVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptTokenVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptNmTokenVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptNmTokensVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptTextVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptDateVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptTimeVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptTimestampVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptTZDateVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptTZTimeVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptTZTimestampVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptUuidVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( 0 &lt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( false );
			}
			else if( 0 &gt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptValue">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsOptObj">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implLessOrEqualCmpLhsReq"
	>$reference Column implLessOrEqualCmpLhsReq$</GenRule>

	<GenRule GenDef="Value" Name="implLessOrEqualCmpLhsReq"
	>$switch BaseModelAtomClass
		BlobDef implLessOrEqualCmpLhsReqBlobVar
		BoolDef implLessOrEqualCmpLhsReqBoolVar
		EnumDef implLessOrEqualCmpLhsReqEnumVar
		Int16Def implLessOrEqualCmpLhsReqInt16Var
		Int32Def implLessOrEqualCmpLhsReqInt32Var
		Int64Def implLessOrEqualCmpLhsReqInt64Var
		UInt16Def implLessOrEqualCmpLhsReqUInt16Var
		UInt32Def implLessOrEqualCmpLhsReqUInt32Var
		UInt64Def implLessOrEqualCmpLhsReqUInt64Var
		Id16Gen implLessOrEqualCmpLhsReqId16GenVar
		Id32Gen implLessOrEqualCmpLhsReqId32GenVar
		Id64Gen implLessOrEqualCmpLhsReqId64GenVar
		FloatDef implLessOrEqualCmpLhsReqFloatVar
		DoubleDef implLessOrEqualCmpLhsReqDoubleVar
		NumberDef implLessOrEqualCmpLhsReqNumberVar
		StringDef implLessOrEqualCmpLhsReqStringVar
		TokenDef implLessOrEqualCmpLhsReqTokenVar
		NmTokenDef implLessOrEqualCmpLhsReqNmTokenVar
		NmTokensDef implLessOrEqualCmpLhsReqNmTokensVar
		TextDef implLessOrEqualCmpLhsReqTextVar
		DateDef implLessOrEqualCmpLhsReqDateVar
		TimeDef implLessOrEqualCmpLhsReqTimeVar
		TimestampDef implLessOrEqualCmpLhsReqTimestampVar
		TZDateDef implLessOrEqualCmpLhsReqTZDateVar
		TZTimeDef implLessOrEqualCmpLhsReqTZTimeVar
		TZTimestampDef implLessOrEqualCmpLhsReqTZTimestampVar
		UuidDef implLessOrEqualCmpLhsReqUuidVar
		UuidGen implLessOrEqualCmpLhsReqUuidVar
		default error$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqBlobVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqBoolVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqEnumVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqInt16Var"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqInt32Var"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqInt64Var"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqUInt16Var"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqUInt32Var"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqUInt64Var"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqId16GenVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqId32GenVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqId64GenVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqFloatVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqDoubleVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqNumberVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqStringVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqTokenVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqNmTokenVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqNmTokensVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqTextVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqDateVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqTimeVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqTimestampVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqTZDateVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqTZTimeVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqTZTimestampVar"
	>$implLessOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqUuidVar">
		if( 0 &lt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( false );
		}
		else if( 0 &gt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqValue">
		if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implLessOrEqualCmpLhsReqObj">
		if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsAttr"
	>$switch IsNullable yes implGreaterOrEqualCmpLhsOpt default implGreaterOrEqualCmpLhsReq$</GenRule>

	<GenRule GenDef="IndexCol" Name="implGreaterOrEqualCmpLhsOpt"
	>$reference Column implGreaterOrEqualCmpLhsOpt$</GenRule>

	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsOpt"
	>$switch BaseModelAtomClass
		BlobDef implGreaterOrEqualCmpLhsOptBlobVar
		BoolDef implGreaterOrEqualCmpLhsOptBoolVar
		EnumDef implGreaterOrEqualCmpLhsOptEnumVar
		Int16Def implGreaterOrEqualCmpLhsOptInt16Var
		Int32Def implGreaterOrEqualCmpLhsOptInt32Var
		Int64Def implGreaterOrEqualCmpLhsOptInt64Var
		UInt16Def implGreaterOrEqualCmpLhsOptUInt16Var
		UInt32Def implGreaterOrEqualCmpLhsOptUInt32Var
		UInt64Def implGreaterOrEqualCmpLhsOptUInt64Var
		Id16Gen implGreaterOrEqualCmpLhsOptId16GenVar
		Id32Gen implGreaterOrEqualCmpLhsOptId32GenVar
		Id64Gen implGreaterOrEqualCmpLhsOptId64GenVar
		FloatDef implGreaterOrEqualCmpLhsOptFloatVar
		DoubleDef implGreaterOrEqualCmpLhsOptDoubleVar
		NumberDef implGreaterOrEqualCmpLhsOptNumberVar
		StringDef implGreaterOrEqualCmpLhsOptStringVar
		TokenDef implGreaterOrEqualCmpLhsOptTokenVar
		NmTokenDef implGreaterOrEqualCmpLhsOptNmTokenVar
		NmTokensDef implGreaterOrEqualCmpLhsOptNmTokensVar
		TextDef implGreaterOrEqualCmpLhsOptTextVar
		DateDef implGreaterOrEqualCmpLhsOptDateVar
		TimeDef implGreaterOrEqualCmpLhsOptTimeVar
		TimestampDef implGreaterOrEqualCmpLhsOptTimestampVar
		TZDateDef implGreaterOrEqualCmpLhsOptTZDateVar
		TZTimeDef implGreaterOrEqualCmpLhsOptTZTimeVar
		TZTimestampDef implGreaterOrEqualCmpLhsOptTZTimestampVar
		UuidDef implGreaterOrEqualCmpLhsOptUuidVar
		UuidGen implGreaterOrEqualCmpLhsOptUuidVar
		default error$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptBlobVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptBoolVar"
	>$implGreaterOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptEnumVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptInt16Var"
	>$implGreaterOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptInt32Var"
	>$implGreaterOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptInt64Var"
	>$implGreaterOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptUInt16Var"
	>$implGreaterOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptUInt32Var"
	>$implGreaterOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptUInt64Var"
	>$implGreaterOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptId16GenVar"
	>$implGreaterOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptId32GenVar"
	>$implGreaterOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptId64GenVar"
	>$implGreaterOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptFloatVar"
	>$implGreaterOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptDoubleVar"
	>$implGreaterOrEqualCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptNumberVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptStringVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptTokenVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptNmTokenVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptNmTokensVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptTextVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptDateVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptTimeVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptTimestampVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptTZDateVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptTZTimeVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptTZTimestampVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptUuidVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( 0 &gt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( false );
			}
			else if( 0 &lt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptValue">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsOptObj">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implGreaterOrEqualCmpLhsReq"
	>$reference Column implGreaterOrEqualCmpLhsReq$</GenRule>

	<GenRule GenDef="Value" Name="implGreaterOrEqualCmpLhsReq"
	>$switch BaseModelAtomClass
		BlobDef implGreaterOrEqualCmpLhsReqBlobVar
		BoolDef implGreaterOrEqualCmpLhsReqBoolVar
		EnumDef implGreaterOrEqualCmpLhsReqEnumVar
		Int16Def implGreaterOrEqualCmpLhsReqInt16Var
		Int32Def implGreaterOrEqualCmpLhsReqInt32Var
		Int64Def implGreaterOrEqualCmpLhsReqInt64Var
		UInt16Def implGreaterOrEqualCmpLhsReqUInt16Var
		UInt32Def implGreaterOrEqualCmpLhsReqUInt32Var
		UInt64Def implGreaterOrEqualCmpLhsReqUInt64Var
		Id16Gen implGreaterOrEqualCmpLhsReqId16GenVar
		Id32Gen implGreaterOrEqualCmpLhsReqId32GenVar
		Id64Gen implGreaterOrEqualCmpLhsReqId64GenVar
		FloatDef implGreaterOrEqualCmpLhsReqFloatVar
		DoubleDef implGreaterOrEqualCmpLhsReqDoubleVar
		NumberDef implGreaterOrEqualCmpLhsReqNumberVar
		StringDef implGreaterOrEqualCmpLhsReqStringVar
		TokenDef implGreaterOrEqualCmpLhsReqTokenVar
		NmTokenDef implGreaterOrEqualCmpLhsReqNmTokenVar
		NmTokensDef implGreaterOrEqualCmpLhsReqNmTokensVar
		TextDef implGreaterOrEqualCmpLhsReqTextVar
		DateDef implGreaterOrEqualCmpLhsReqDateVar
		TimeDef implGreaterOrEqualCmpLhsReqTimeVar
		TimestampDef implGreaterOrEqualCmpLhsReqTimestampVar
		TZDateDef implGreaterOrEqualCmpLhsReqTZDateVar
		TZTimeDef implGreaterOrEqualCmpLhsReqTZTimeVar
		TZTimestampDef implGreaterOrEqualCmpLhsReqTZTimestampVar
		UuidDef implGreaterOrEqualCmpLhsReqUuidVar
		UuidGen implGreaterOrEqualCmpLhsReqUuidVar
		default error$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqBlobVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqBoolVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqEnumVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqInt16Var"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqInt32Var"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqInt64Var"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqUInt16Var"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqUInt32Var"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqUInt64Var"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqId16GenVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqId32GenVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqId64GenVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqFloatVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqDoubleVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqNumberVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqStringVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqTokenVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqNmTokenVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqNmTokensVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqTextVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqDateVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqTimeVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqTimestampVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqTZDateVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqTZTimeVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqTZTimestampVar"
	>$implGreaterOrEqualCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqUuidVar">
		if( 0 &gt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( false );
		}
		else if( 0 &lt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqValue">
		if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGreaterOrEqualCmpLhsReqObj">
		if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsAttr"
	>$switch IsNullable yes implGreaterThanCmpLhsOpt default implGreaterThanCmpLhsReq$</GenRule>

	<GenRule GenDef="IndexCol" Name="implGreaterThanCmpLhsOpt"
	>$reference Column implGreaterThanCmpLhsOpt$</GenRule>

	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsOpt"
	>$switch BaseModelAtomClass
		BlobDef implGreaterThanCmpLhsOptBlobVar
		BoolDef implGreaterThanCmpLhsOptBoolVar
		EnumDef implGreaterThanCmpLhsOptEnumVar
		Int16Def implGreaterThanCmpLhsOptInt16Var
		Int32Def implGreaterThanCmpLhsOptInt32Var
		Int64Def implGreaterThanCmpLhsOptInt64Var
		UInt16Def implGreaterThanCmpLhsOptUInt16Var
		UInt32Def implGreaterThanCmpLhsOptUInt32Var
		UInt64Def implGreaterThanCmpLhsOptUInt64Var
		Id16Gen implGreaterThanCmpLhsOptId16GenVar
		Id32Gen implGreaterThanCmpLhsOptId32GenVar
		Id64Gen implGreaterThanCmpLhsOptId64GenVar
		FloatDef implGreaterThanCmpLhsOptFloatVar
		DoubleDef implGreaterThanCmpLhsOptDoubleVar
		NumberDef implGreaterThanCmpLhsOptNumberVar
		StringDef implGreaterThanCmpLhsOptStringVar
		TokenDef implGreaterThanCmpLhsOptTokenVar
		NmTokenDef implGreaterThanCmpLhsOptNmTokenVar
		NmTokensDef implGreaterThanCmpLhsOptNmTokensVar
		TextDef implGreaterThanCmpLhsOptTextVar
		DateDef implGreaterThanCmpLhsOptDateVar
		TimeDef implGreaterThanCmpLhsOptTimeVar
		TimestampDef implGreaterThanCmpLhsOptTimestampVar
		TZDateDef implGreaterThanCmpLhsOptTZDateVar
		TZTimeDef implGreaterThanCmpLhsOptTZTimeVar
		TZTimestampDef implGreaterThanCmpLhsOptTZTimestampVar
		UuidDef implGreaterThanCmpLhsOptUuidVar
		UuidGen implGreaterThanCmpLhsOptUuidVar
		default error$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptBlobVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptBoolVar"
	>$implGreaterThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptEnumVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptInt16Var"
	>$implGreaterThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptInt32Var"
	>$implGreaterThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptInt64Var"
	>$implGreaterThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptUInt16Var"
	>$implGreaterThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptUInt32Var"
	>$implGreaterThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptUInt64Var"
	>$implGreaterThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptId16GenVar"
	>$implGreaterThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptId32GenVar"
	>$implGreaterThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptId64GenVar"
	>$implGreaterThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptFloatVar"
	>$implGreaterThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptDoubleVar"
	>$implGreaterThanCmpLhsOptValue$</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptNumberVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptStringVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptTokenVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptNmTokenVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptNmTokensVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptTextVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptDateVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptTimeVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptTimestampVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptTZDateVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptTZTimeVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptTZTimestampVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>
	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptUuidVar">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( 0 &gt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( false );
			}
			else if( 0 &lt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptValue">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsOptObj">
		if( ! lhs.is$implColumnAttrOptionality$$Name$Null() ) {
			if( rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( true );
			}
			if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( false );
			}
			else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
				return( true );
			}
		}
		else {
			if( ! rhs.is$implColumnAttrOptionality$$Name$Null() ) {
				return( false );
			}
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implGreaterThanCmpLhsReq"
	>$reference Column implGreaterThanCmpLhsReq$</GenRule>

	<GenRule GenDef="Value" Name="implGreaterThanCmpLhsReq"
	>$switch BaseModelAtomClass
		BlobDef implGreaterThanCmpLhsReqBlobVar
		BoolDef implGreaterThanCmpLhsReqBoolVar
		EnumDef implGreaterThanCmpLhsReqEnumVar
		Int16Def implGreaterThanCmpLhsReqInt16Var
		Int32Def implGreaterThanCmpLhsReqInt32Var
		Int64Def implGreaterThanCmpLhsReqInt64Var
		UInt16Def implGreaterThanCmpLhsReqUInt16Var
		UInt32Def implGreaterThanCmpLhsReqUInt32Var
		UInt64Def implGreaterThanCmpLhsReqUInt64Var
		Id16Gen implGreaterThanCmpLhsReqId16GenVar
		Id32Gen implGreaterThanCmpLhsReqId32GenVar
		Id64Gen implGreaterThanCmpLhsReqId64GenVar
		FloatDef implGreaterThanCmpLhsReqFloatVar
		DoubleDef implGreaterThanCmpLhsReqDoubleVar
		NumberDef implGreaterThanCmpLhsReqNumberVar
		StringDef implGreaterThanCmpLhsReqStringVar
		TokenDef implGreaterThanCmpLhsReqTokenVar
		NmTokenDef implGreaterThanCmpLhsReqNmTokenVar
		NmTokensDef implGreaterThanCmpLhsReqNmTokensVar
		TextDef implGreaterThanCmpLhsReqTextVar
		DateDef implGreaterThanCmpLhsReqDateVar
		TimeDef implGreaterThanCmpLhsReqTimeVar
		TimestampDef implGreaterThanCmpLhsReqTimestampVar
		TZDateDef implGreaterThanCmpLhsReqTZDateVar
		TZTimeDef implGreaterThanCmpLhsReqTZTimeVar
		TZTimestampDef implGreaterThanCmpLhsReqTZTimestampVar
		UuidDef implGreaterThanCmpLhsReqUuidVar
		UuidGen implGreaterThanCmpLhsReqUuidVar
		default error$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqBlobVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqBoolVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqEnumVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqInt16Var"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqInt32Var"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqInt64Var"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqUInt16Var"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqUInt32Var"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqUInt64Var"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqId16GenVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqId32GenVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqId64GenVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqFloatVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqDoubleVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqNumberVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqStringVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqTokenVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqNmTokenVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqNmTokensVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqTextVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqDateVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqTimeVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqTimestampVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqTZDateVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqTZTimeVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqTZTimestampVar"
	>$implGreaterThanCmpLhsReqValue$</GenRule>
	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqUuidVar">
		if( 0 &lt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( false );
		}
		else if( 0 &gt; uuid_compare( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$(), rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqValue">
		if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGreaterThanCmpLhsReqObj">
		if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &lt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( false );
		}
		else if( lhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() &gt; rhs.get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			return( true );
		}</GenRule>

	<GenRule GenDef="Index" Name="implPKeyGetHashCode">
	size_t $SchemaName$$TableName$PKey::hashCode() const {
		size_t hashCode = 0;$iterate Columns( each implGetHashCodeAttr )$
		return( hashCode );
	}
</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeAttr"
	>$switch IsNullable yes implGetHashCodeOpt default implGetHashCodeReq$</GenRule>

	<GenRule GenDef="IndexCol" Name="implGetHashCodeOpt"
	>$reference Column implGetHashCodeOpt$</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOpt"
	>$switch BaseModelAtomClass
		BlobDef implGetHashCodeOptBlobVar
		BoolDef implGetHashCodeOptBoolVar
		EnumDef implGetHashCodeOptEnumVar
		Int16Def implGetHashCodeOptInt16Var
		Int32Def implGetHashCodeOptInt32Var
		Int64Def implGetHashCodeOptInt64Var
		UInt16Def implGetHashCodeOptUInt16Var
		UInt32Def implGetHashCodeOptUInt32Var
		UInt64Def implGetHashCodeOptUInt64Var
		Id16Gen implGetHashCodeOptInt16Var
		Id32Gen implGetHashCodeOptInt32Var
		Id64Gen implGetHashCodeOptInt64Var
		FloatDef implGetHashCodeOptFloatVar
		DoubleDef implGetHashCodeOptDoubleVar
		NumberDef implGetHashCodeOptNumberVar
		StringDef implGetHashCodeOptStringVar
		TokenDef implGetHashCodeOptTokenVar
		NmTokenDef implGetHashCodeOptNmTokenVar
		NmTokensDef implGetHashCodeOptNmTokensVar
		TextDef implGetHashCodeOptTextVar
		DateDef implGetHashCodeOptDateVar
		TimeDef implGetHashCodeOptTimeVar
		TimestampDef implGetHashCodeOptTimestampVar
		TZDateDef implGetHashCodeOptTZDateVar
		TZTimeDef implGetHashCodeOptTZTimeVar
		TZTimestampDef implGetHashCodeOptTZTimestampVar
		UuidDef implGetHashCodeOptUuidVar
		UuidGen implGetHashCodeOptUuidVar
		default error$</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptBlobVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptBoolVar">
		if(  ! is$implColumnAttrOptionality$$Name$Null() ) {
			if( get$implColumnAttrOptionality$$Name$Value() ) {
				hashCode = ( hashCode * 4 ) + 1;
			}
			else {
				hashCode = hashCode * 4;
			}
		}
		else {
			hashCode = (hashCode * 4 ) + 3;
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptEnumVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = ( hashCode * 0x10000 ) + get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$();
		}
		else {
			hashCode = (hashCode * 0x10000 );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptInt16Var">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = ( hashCode * 0x10000 ) + get$implColumnAttrOptionality$$Name$Value();
		}
		else {
			hashCode = (hashCode * 0x10000 );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptInt32Var">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = ( hashCode * 0x10000 ) + get$implColumnAttrOptionality$$Name$Value();
		}
		else {
			hashCode = (hashCode * 0x10000 );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptInt64Var">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = ( hashCode * 0x10000 ) + get$implColumnAttrOptionality$$Name$Value();
		}
		else {
			hashCode = (hashCode * 0x10000 );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptUInt16Var">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = ( hashCode * 0x10000 ) + get$implColumnAttrOptionality$$Name$Value();
		}
		else {
			hashCode = (hashCode * 0x10000 );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptUInt32Var">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = ( hashCode * 0x10000 ) + get$implColumnAttrOptionality$$Name$Value();
		}
		else {
			hashCode = (hashCode * 0x10000 );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptUInt64Var">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = ( hashCode * 0x10000 ) + get$implColumnAttrOptionality$$Name$Value();
		}
		else {
			hashCode = (hashCode * 0x10000 );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptFloatVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = ( hashCode * 0x10000 ) + get$implColumnAttrOptionality$$Name$Value();
		}
		else {
			hashCode = (hashCode * 0x10000 );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptDoubleVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = ( hashCode * 0x10000 ) + get$implColumnAttrOptionality$$Name$Value();
		}
		else {
			hashCode = (hashCode * 0x10000 );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptNumberVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = ( hashCode * 0x10000 ) + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$Value().toString() );
		}
		else {
			hashCode = (hashCode * 0x10000 );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptStringVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptNmTokenVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptNmTokensVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptTextVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptTZDateVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptTZTimeVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptTZTimestampVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeOptUuidVar">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );
		}</GenRule>

	<GenRule GenDef="IndexCol" Name="implGetHashCodeReq"
	>$reference Column implGetHashCodeReq$</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReq"
	>$switch BaseModelAtomClass
		BlobDef implGetHashCodeReqBlobVar
		BoolDef implGetHashCodeReqBoolVar
		EnumDef implGetHashCodeReqEnumVar
		Int16Def implGetHashCodeReqInt16Var
		Int32Def implGetHashCodeReqInt32Var
		Int64Def implGetHashCodeReqInt64Var
		UInt16Def implGetHashCodeReqUInt16Var
		UInt32Def implGetHashCodeReqUInt32Var
		UInt64Def implGetHashCodeReqUInt64Var
		Id16Gen implGetHashCodeReqId16GenVar
		Id32Gen implGetHashCodeReqId32GenVar
		Id64Gen implGetHashCodeReqId64GenVar
		FloatDef implGetHashCodeReqFloatVar
		DoubleDef implGetHashCodeReqDoubleVar
		NumberDef implGetHashCodeReqNumberVar
		StringDef implGetHashCodeReqStringVar
		TokenDef implGetHashCodeReqTokenVar
		NmTokenDef implGetHashCodeReqNmTokenVar
		NmTokensDef implGetHashCodeReqNmTokensVar
		TextDef implGetHashCodeReqTextVar
		DateDef implGetHashCodeReqDateVar
		TimeDef implGetHashCodeReqTimeVar
		TimestampDef implGetHashCodeReqTimestampVar
		TZDateDef implGetHashCodeReqTZDateVar
		TZTimeDef implGetHashCodeReqTZTimeVar
		TZTimestampDef implGetHashCodeReqTZTimestampVar
		UuidDef implGetHashCodeReqUuidVar
		UuidGen implGetHashCodeReqUuidVar
		default error$</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqBlobVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqBoolVar">
		if( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) {
			hashCode = ( hashCode * 2 ) + 1;
		}
		else {
			hashCode = hashCode * 2;
		}</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqEnumVar">
		hashCode = ( hashCode * 0x10000 ) + get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$();</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqInt16Var">
		hashCode = ( hashCode * 0x10000 ) + get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$();</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqUInt16Var">
		hashCode = ( hashCode * 0x10000 ) + get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$();</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqId16GenVar">
		hashCode = ( hashCode * 0x10000 ) + get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$();</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqInt32Var">
		hashCode = hashCode + get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$();</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqUInt32Var">
		hashCode = hashCode + (int)( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqId32GenVar">
		hashCode = hashCode + get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$();</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqInt64Var">
		hashCode = hashCode + (int)( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqUInt64Var">
		hashCode = hashCode + get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$();</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqId64GenVar">
		hashCode = hashCode + (int)( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqFloatVar">
		hashCode = hashCode + (int)( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqDoubleVar">
		hashCode = hashCode + (int)( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqNumberVar">
		hashCode = ( hashCode * 0x10000 ) + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$().toString() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqStringVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqTokenVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqNmTokenVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqNmTokensVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqTextVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqDateVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqTimeVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqTimestampVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqTZDateVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqTZTimeVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqTZTimestampVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Object" Name="implGetHashCodeReqUuidVar">
		hashCode = hashCode + cflib::CFLib::hash( get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() );</GenRule>

	<GenRule GenDef="Index" Name="implPKeyToString">
	std::string $SchemaName$$TableName$PKey::toString() {
		static const std::string S_Space( " " );
		static const std::string S_Preamble( "&lt;$SchemaName$$TableName$PKey" );
		static const std::string S_Postamble( "/&gt;" );$iterate Columns( each implToStringAttrName )$
		std::string ret( S_Preamble );$iterate Columns( each implToStringEmitXmlAttr )$
		ret.append( S_Postamble );
		return( ret );
	}
</GenRule>

	<GenRule GenDef="IndexCol" Name="implToStringAttrName"
	>$reference Column implToStringAttrName$</GenRule>
	<GenRule GenDef="TableCol" Name="implToStringAttrName">
		static const std::string S_$Name$( "$Name$" );</GenRule>
	<GenRule GenDef="Atom" Name="implToStringAttrName">
		static const std::string S_$Name$( "$Name$" );</GenRule>

	<GenRule GenDef="IndexCol" Name="implToStringEmitXmlAttr"
	>$reference Column implToStringEmitXmlAttr$</GenRule>

	<GenRule GenDef="TableCol" Name="implToStringEmitXmlAttr"
	>$switch IsNullable yes implToStringEmitOptXmlAttr default implToStringEmitReqXmlAttr$</GenRule>
	<GenRule GenDef="Atom" Name="implToStringEmitXmlAttr"
	>$switch IsNullable yes implToStringEmitOptXmlAttr default implToStringEmitReqXmlAttr$</GenRule>

	<GenRule GenDef="TableCol" Name="implToStringEmitReqXmlAttr">
		ret.append( cflib::CFLibXmlUtil::$CFLibXmlUtilFormatRequired$( &amp;S_Space, S_$Name$, get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) );</GenRule>
	<GenRule GenDef="Atom" Name="implToStringEmitReqXmlAttr">
		ret.append( cflib::CFLibXmlUtil::$CFLibXmlUtilFormatRequired$( &amp;S_Space, S_$Name$, get$implColumnAttrOptionality$$Name$$switch IsNullable yes declIObjColumnValue default empty$() ) );</GenRule>

	<GenRule GenDef="TableCol" Name="implToStringEmitOptXmlAttr">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			ret.append( cflib::CFLibXmlUtil::$CFLibXmlUtilFormatRequired$( &amp;S_Space, S_$Name$, get$implColumnAttrOptionality$$Name$Value() ) );
		}</GenRule>
	<GenRule GenDef="Atom" Name="implToStringEmitOptXmlAttr">
		if( ! is$implColumnAttrOptionality$$Name$Null() ) {
			ret.append( cflib::CFLibXmlUtil::$CFLibXmlUtilFormatRequired$( &amp;S_Space, S_$Name$, get$implColumnAttrOptionality$$Name$Value() ) );
		}</GenRule>

	<GenRule GenDef="Value" Name="CFLibXmlUtilFormatRequired"
	>$switch BaseModelAtomClass
		BlobDef CFLibXmlUtilFormatRequiredBlob
		BoolDef CFLibXmlUtilFormatRequiredBool
		EnumDef CFLibXmlUtilFormatRequiredEnum
		Id16Gen CFLibXmlUtilFormatRequiredInt16
		Id32Gen CFLibXmlUtilFormatRequiredInt32
		Id64Gen CFLibXmlUtilFormatRequiredInt64
		Int16Def CFLibXmlUtilFormatRequiredInt16
		Int32Def CFLibXmlUtilFormatRequiredInt32
		Int64Def CFLibXmlUtilFormatRequiredInt64
		UInt16Def CFLibXmlUtilFormatRequiredUInt16
		UInt32Def CFLibXmlUtilFormatRequiredUInt32
		UInt64Def CFLibXmlUtilFormatRequiredUInt64
		FloatDef CFLibXmlUtilFormatRequiredFloat
		DoubleDef CFLibXmlUtilFormatRequiredDouble
		NumberDef CFLibXmlUtilFormatRequiredNumber
		StringDef CFLibXmlUtilFormatRequiredString
		TokenDef CFLibXmlUtilFormatRequiredToken
		NmTokenDef CFLibXmlUtilFormatRequiredNmToken
		NmTokensDef CFLibXmlUtilFormatRequiredNmTokens
		TextDef CFLibXmlUtilFormatRequiredText
		DateDef CFLibXmlUtilFormatRequiredDate
		TimeDef CFLibXmlUtilFormatRequiredTime
		TimestampDef CFLibXmlUtilFormatRequiredTimestamp
		TZDateDef CFLibXmlUtilFormatRequiredTZDate
		TZTimeDef CFLibXmlUtilFormatRequiredTZTime
		TZTimestampDef CFLibXmlUtilFormatRequiredTZTimestamp
		UuidGen CFLibXmlUtilFormatRequiredUuid
		UuidDef CFLibXmlUtilFormatRequiredUuid
		default ErrorUnrecognizedBaseModelAtomClass$</GenRule>

	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredBlob">formatRequiredBlob</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredBool">formatRequiredBoolean</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredEnum">formatRequiredInt16</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredInt16">formatRequiredInt16</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredInt32">formatRequiredInt32</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredInt64">formatRequiredInt64</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredUInt16">formatRequiredUInt16</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredUInt32">formatRequiredUInt32</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredUInt64">formatRequiredUInt64</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredFloat">formatRequiredFloat</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredDouble">formatRequiredDouble</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredNumber">formatRequiredNumber</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredString">formatRequiredXmlString</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredToken">formatRequiredXmlString</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredNmToken">formatRequiredXmlString</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredNmTokens">formatRequiredXmlString</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredText">formatRequiredXmlString</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredDate">formatRequiredDate</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredTime">formatRequiredTime</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredTimestamp">formatRequiredTimestamp</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredTZDate">formatRequiredTZDate</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredTZTime">formatRequiredTZTime</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredTZTimestamp">formatRequiredTZTimestamp</GenRule>
	<GenRule GenDef="Object" Name="CFLibXmlUtilFormatRequiredUuid">formatRequiredUuid</GenRule>

</RuleSet>
