<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="cplus"
	Name="libschema/schema/ISchemaTablePerms.hpp"
	Revision="2.13"
	Descr="C++18 $SchemaName$ Table Permissions Interface.">

	<GenFile GenDef="SchemaDef" Name="fileSchemaITablePermsHpp"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="cplus"
		BasePackageName="libcfcore"
		SubPackageName="$lower reference ManufacturingSchema SchemaName$"
		ExpansionClassName="I$SchemaName$TablePermsHpp"
		ExpansionKeyName="I$SchemaName$TablePermsHpp"
		ExpansionFileName="I$SchemaName$TablePerms.hpp"
>#pragma once

// Description: C++18 $SchemaName$ Table Permissions Interface.

$MssSourceLicense$

#include &lt;uuid/uuid.h&gt;

#include &lt;array&gt;
#include &lt;cassert&gt;
#include &lt;cstddef&gt;
#include &lt;chrono&gt;
#include &lt;ctime&gt;
#include &lt;functional&gt;
#include &lt;list&gt;
#include &lt;string&gt;
$iterate SchemaRefs( each includeISchemaTablePerms empty empty )$

namespace $CPlusNamespace$ {

	class $SchemaName$Authorization;

	class I$SchemaName$TablePerms$iterate SchemaRefs( first extendsCPlusDefSchemaTablePerms each commaNewlineCPlusDefSchemaTablePerms empty empty )$
	{
	public:$declISchemaTablePermsConstructor$$iterate SchemaTables( each implITablePermsAllowAccessors )$	};
}
</GenFile>

	<GenRule GenDef="SchemaDef" Name="declISchemaTablePermsConstructor">
		I$SchemaName$TablePerms();
		virtual ~I$SchemaName$TablePerms();
</GenRule>

	<GenRule GenDef="SchemaRef" Name="includeISchemaTablePerms">
#include &lt;$lower reference RefSchema SchemaName$/I$reference RefSchema SchemaName$TablePerms.hpp&gt;</GenRule>

	<GenRule GenDef="SchemaRef" Name="extendsCPlusDefSchemaTablePerms">
	: public virtual $reference RefSchema CPlusNamespace$::I$reference RefSchema SchemaName$TablePerms</GenRule>

	<GenRule GenDef="SchemaRef" Name="commaNewlineCPlusDefSchemaTablePerms">,
	  public virtual $reference RefSchema CPlusNamespace$::I$reference RefSchema SchemaName$TablePerms</GenRule>

	<GenRule GenDef="Table" Name="implITablePermsAllowAccessors"
		>$reallyImplITablePermsAllowAccessors$</GenRule>

	<GenRule GenDef="Table" Name="reallyImplITablePermsAllowAccessors">
		virtual bool allowCreate$TableName$( const $CPlusSecNamespace$::$SecSchemaName$Authorization* Authorization ) = 0;
		virtual bool allowRead$TableName$( const $CPlusSecNamespace$::$SecSchemaName$Authorization Authorization ) = 0;
		virtual bool allowUpdate$TableName$( const $CPlusSecNamespace$::$SecSchemaName$Authorization* Authorization ) = 0;
		virtual bool allowDelete$TableName$( const $CPlusSecNamespace$::$SecSchemaName$Authorization* Authorization ) = 0;
</GenRule>

</RuleSet>
