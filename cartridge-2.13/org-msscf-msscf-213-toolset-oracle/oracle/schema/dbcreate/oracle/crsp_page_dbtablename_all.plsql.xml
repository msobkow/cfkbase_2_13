<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="oracle"
	Name="schema/dbcreate/oracle/crsp_page_dbtablename_all.oracle"
	Revision="2.13"
	Descr="null">

	<GenFile ScopeDef="SchemaDef" GenDef="Table" Name="dbadminfile_CreateSPPageDbTableNameAll"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="dbcreate"
		BasePackageName="$lower SchemaName$"
		SubPackageName="oracle"
		ExpansionClassName="$dbadminfilename_CreateSPPageDbTableNameAll$"
		ExpansionKeyName="$dbadminfilename_CreateSPPageDbTableNameAll$"
		ExpansionFileName="$dbadminfilename_CreateSPPageDbTableNameAll$">--
--	@(#) $GenPackageDir$/$GenFileName$
$MssDoubleDashScriptLicense$
alter session set plsql_warnings = 'ENABLE:ALL';
/

create or replace procedure $lower DbSchemaName$.$sp_page_dbtablename_all$(
	retCursor out sys_refcursor,$implOracleSPStandardArgs$$reference BaseClass reference PrimaryKeyIndex iterate Columns( each implOracleSPSpecPriorArg )$ ) authid definer
is$switch SecScope None empty System empty Cluster implOracleSPReadTableDeclPermFlag Tenant implOracleSPReadTableDeclPermFlag default error$
begin$switch SecScope None empty System empty Cluster implOracleSPReadTableCheckCluster Tenant implOracleSPReadTableCheckTenant default error$$switch SecScope None implOracleSPPageTableRetSelectNormal System implOracleSPPageTableRetSelectNormal Cluster implOracleSPPageTableRetSelectRestrictCluster Tenant implOracleSPPageTableRetSelectRestrictTenant default error$
end $sp_page_dbtablename_all$;
/

show errors procedure $lower DbSchemaName$.$sp_page_dbtablename_all$;
</GenFile>

	<GenRule GenDef="Index" Name="PageData"
		>$poptop Table PageData$</GenRule>

	<GenRule GenDef="Object" Name="implImposeTableLimit">
			limit 25</GenRule>

	<GenRule GenDef="IndexCol" Name="implOracleSPSpecPriorArg">,
	prior$Name$ $reference Column clause_SPColType$</GenRule>

	<GenRule GenDef="Object" Name="clauseEmitWhere">
			where </GenRule>

	<GenRule GenDef="Object" Name="restrictQueryWhereBeforePrior"
		>$clauseEmitWhere$$restrictBeforePrior$</GenRule>

	<GenRule GenDef="Table" Name="restrictReadAllQueryBeforePrior"
		>$switch HasSuperClassRelation yes restrictReadQueryByClassCodeAndBeforePrior default restrictBaseReadQueryByClassCodeBeforePrior$</GenRule>

	<GenRule GenDef="Table" Name="restrictBaseReadQueryByClassCodeBeforePrior"
		>$switch IsBaseTable yes restrictReadQueryByClassCodeAndBeforePrior default restrictQueryWhereBeforePrior $</GenRule>

	<GenRule GenDef="Table" Name="restrictReadAllQueryWhereBeforePrior"
		>$switch HasSuperClassRelation yes restrictReadQueryByClassCodeAndBeforePrior default restrictBaseReadQueryByClassCodeAndBeforePrior$</GenRule>

	<GenRule GenDef="Table" Name="restrictBaseReadQueryByClassCodeAndBeforePrior"
		>$switch IsBaseTable yes restrictReadQueryByClassCodeAndBeforePrior default restrictWhereBeforePrior$</GenRule>

	<GenRule GenDef="Table" Name="restrictReadQueryByClassCodeAndBeforePrior"
		>$restrictReadQueryByClassCode$
			and $restrictBeforePrior$</GenRule>

	<GenRule GenDef="Index" Name="restrictAndBeforePrior"
		>$poptop Table restrictAndBeforePrior$</GenRule>

	<GenRule GenDef="Table" Name="restrictAndBeforePrior">
			and $restrictBeforePriorCore$</GenRule>

	<GenRule GenDef="Index" Name="restrictWhereBeforePrior"
		>$poptop Table restrictWhereBeforePrior$</GenRule>

	<GenRule GenDef="Table" Name="restrictWhereBeforePrior">
			where $restrictBeforePriorCore$</GenRule>

	<GenRule GenDef="Index" Name="restrictBeforePrior"
		>$poptop Table restrictBeforePrior$</GenRule>

	<GenRule GenDef="Table" Name="restrictBeforePrior">
			$restrictBeforePriorCore$</GenRule>

	<GenRule GenDef="Table" Name="restrictBeforePriorCore"
			>( $reference BaseClass reference PrimaryKeyIndex spread Columns( before emitLParen after emitRParen first emitPriorEquals each emitAndPriorEquals last emitAndPriorLess lone emitPriorLess between emitOr )$ )</GenRule>

	<GenRule GenDef="Object" Name="emitLParen">( </GenRule>
	<GenRule GenDef="Object" Name="emitRParen"> )</GenRule>

	<GenRule GenDef="IndexCol" Name="emitAndPriorEquals">
					and $emitPriorEquals$</GenRule>

	<GenRule GenDef="IndexCol" Name="emitAndPriorLess">
					and $emitPriorLess$</GenRule>

	<GenRule GenDef="Object" Name="emitOr">
				or </GenRule>

	<GenRule GenDef="IndexCol" Name="emitPriorEquals"
		>( $lower reference Index reference Table ClassCode$.$DbColumnName$ = prior$Name$ )</GenRule>

	<GenRule GenDef="IndexCol" Name="emitPriorLess"
		>( $lower reference Index reference Table ClassCode$.$DbColumnName$ &lt; prior$Name$ )</GenRule>

	<GenRule GenDef="IndexCol" Name="implOraclePriorNotNull"
		>( prior$Name$ is not null )</GenRule>

	<GenRule GenDef="IndexCol" Name="implOracleAndPriorNotNull"
		>and $implOraclePriorNotNull$</GenRule>

	<GenRule GenDef="Table" Name="implOracleSPPageTableRetSelectNormal">
	if( $reference BaseClass reference PrimaryKeyIndex iterate Columns( first implOraclePriorNotNull each implOracleAndPriorNotNull )$ )
	then
		open retCursor for
			select * from (
				select
$poptop Table implOracleSelectTableColumns$,
					$poptop Table lower reference BaseClass ClassCode$.revision as revision
				from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implOracleClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQueryBeforePrior default restrictWhereBeforePrior$$implSPReadTableOrderByDescendingPKey$
			) where ROWNUM &lt;= 25;
	end if;
	if( not ( $reference BaseClass reference PrimaryKeyIndex iterate Columns( first implOraclePriorNotNull each implOracleAndPriorNotNull )$ ) )
	then
		open retCursor for
			select * from (
				select
$poptop Table implOracleSelectTableColumns$,
					$poptop Table lower reference BaseClass ClassCode$.revision as revision
				from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implOracleClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQuery default empty$$implSPReadTableOrderByDescendingPKey$
			) where ROWNUM &lt;= 25;
	end if;</GenRule>

	<GenRule GenDef="Table" Name="implOracleSPPageTableRetSelectRestrictCluster">
	if( ( isSystemUser = 1 ) and ( $reference BaseClass reference PrimaryKeyIndex iterate Columns( first implOraclePriorNotNull each implOracleAndPriorNotNull )$ ) )
	then
		open retCursor for
			select * from (
				select
$poptop Table implOracleSelectTableColumns$,
					$poptop Table lower reference BaseClass ClassCode$.revision as revision
				from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implOracleClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQueryBeforePrior default restrictWhereBeforePrior$$implSPReadTableOrderByDescendingPKey$
			) where ROWNUM &lt;= 25;
	end if;
	if( ( isSystemUser = 1 ) and ( not ( $reference BaseClass reference PrimaryKeyIndex iterate Columns( first implOraclePriorNotNull each implOracleAndPriorNotNull )$ ) ) )
	then
		open retCursor for
			select * from (
				select
$poptop Table implOracleSelectTableColumns$,
					$poptop Table lower reference BaseClass ClassCode$.revision as revision
				from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implOracleClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQuery default empty$$implSPReadTableOrderByDescendingPKey$
			) where ROWNUM &lt;= 25;
	end if;$implOracleSPPageTableRetSelectRestrictClusterPart2$</GenRule>

	<GenRule GenDef="Table" Name="implOracleSPPageTableRetSelectRestrictClusterPart2">
	if( ( isSystemUser = 0 ) and ( $reference BaseClass reference PrimaryKeyIndex iterate Columns( first implOraclePriorNotNull each implOracleAndPriorNotNull )$ ) )
	then
		open retCursor for
			select * from (
				select
$poptop Table implOracleSelectTableColumns$,
					$poptop Table lower reference BaseClass ClassCode$.revision as revision
				from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implOracleClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQuery default empty$$switch TableInClassHierarchy yes implOracleSPReadTableRetSelectAndRestrictCluster default implOracleSPReadTableRetSelectWhereRestrictCluster$$restrictAndBeforePrior$$implSPReadTableOrderByDescendingPKey$
			) where ROWNUM &lt;= 25;
	end if;
	if( ( isSystemUser = 0 ) and ( not ( $reference BaseClass reference PrimaryKeyIndex iterate Columns( first implOraclePriorNotNull each implOracleAndPriorNotNull )$ ) ) )
	then
		open retCursor for
			select * from (
				select
$poptop Table implOracleSelectTableColumns$,
					$poptop Table lower reference BaseClass ClassCode$.revision as revision
				from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implOracleClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQuery default empty$$switch TableInClassHierarchy yes implOracleSPReadTableRetSelectAndRestrictCluster default implOracleSPReadTableRetSelectWhereRestrictCluster$$implSPReadTableOrderByDescendingPKey$
			) where ROWNUM &lt;= 25;
	end if;</GenRule>

	<GenRule GenDef="Table" Name="implOracleSPPageTableRetSelectRestrictTenant">
	if( ( isSystemUser = 1 ) and ( $reference BaseClass reference PrimaryKeyIndex iterate Columns( first implOraclePriorNotNull each implOracleAndPriorNotNull )$ ) )
	then
		open retCursor for
			select * from (
				select
$poptop Table implOracleSelectTableColumns$,
					$poptop Table lower reference BaseClass ClassCode$.revision as revision
				from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implOracleClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQueryBeforePrior default restrictWhereBeforePrior$$implSPReadTableOrderByDescendingPKey$
			) where ROWNUM &lt;= 25;
	end if;
	if( ( isSystemUser = 1 ) and ( not ( $reference BaseClass reference PrimaryKeyIndex iterate Columns( first implOraclePriorNotNull each implOracleAndPriorNotNull )$ ) ) )
	then
		open retCursor for
			select * from (
				select
$poptop Table implOracleSelectTableColumns$,
					$poptop Table lower reference BaseClass ClassCode$.revision as revision
				from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implOracleClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQuery default empty$$implSPReadTableOrderByDescendingPKey$
			) where ROWNUM &lt;= 25;
	end if;$implOracleSPPageTableRetSelectRestrictTenantPart2$</GenRule>

	<GenRule GenDef="Table" Name="implOracleSPPageTableRetSelectRestrictTenantPart2">
	if( ( isSystemUser = 0 ) and ( $reference BaseClass reference PrimaryKeyIndex iterate Columns( first implOraclePriorNotNull each implOracleAndPriorNotNull )$ ) )
	then
		open retCursor for
			select * from (
				select
$poptop Table implOracleSelectTableColumns$,
					$poptop Table lower reference BaseClass ClassCode$.revision as revision
				from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implOracleClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQuery default empty$$switch TableInClassHierarchy yes implOracleSPReadTableRetSelectAndRestrictTenant default implOracleSPReadTableRetSelectWhereRestrictTenant$$restrictAndBeforePrior$$implSPReadTableOrderByDescendingPKey$
			) where ROWNUM &lt;= 25;
	end if;
	if( ( isSystemUser = 0 ) and ( not ( $reference BaseClass reference PrimaryKeyIndex iterate Columns( first implOraclePriorNotNull each implOracleAndPriorNotNull )$ ) ) )
	then
		open retCursor for
			select * from (
				select
$poptop Table implOracleSelectTableColumns$,
					$poptop Table lower reference BaseClass ClassCode$.revision as revision
				from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implOracleClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQuery default empty$$switch TableInClassHierarchy yes implOracleSPReadTableRetSelectAndRestrictTenant default implOracleSPReadTableRetSelectWhereRestrictTenant$$implSPReadTableOrderByDescendingPKey$
			) where ROWNUM &lt;= 25;
	end if;</GenRule>

</RuleSet>
