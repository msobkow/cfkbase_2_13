<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="pgsql"
	Name="schema/dbcreate/pgsql/crtype_dbtablenamerec.pgsql"
	Revision="2.13"
	Descr="null">

	<GenFile ScopeDef="SchemaDef" GenDef="Table" Name="dbadminfile_CreateDbTableNameRecType"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="dbcreate"
		BasePackageName="$lower SchemaName$"
		SubPackageName="pgsql"
		ExpansionClassName="$dbadminfilename_CreateDbTableNameRecType$"
		ExpansionKeyName="$dbadminfilename_CreateDbTableNameRecType$"
		ExpansionFileName="$dbadminfilename_CreateDbTableNameRecType$" >--
--	@(#) $GenPackageDir$/$GenFileName$
$MssDoubleDashScriptLicense$
create type $lower DbSchemaName$.$type_dbtablename_rec$ as (
$implOracleSpecTypeTableColumns$,
		revision integer );
</GenFile>

	<GenRule GenDef="Table" Name="implOracleSpecTypeTableColumns"
		>$switch HasSuperClassRelation yes implOracleSpecTypeSuperTable default implOracleSpecTypeBaseTable$</GenRule>

	<GenRule GenDef="Table" Name="implOracleSpecTypeSuperTable"
		>$reference SuperClassRelation reference ToTable implOracleSpecTypeTableColumns$$iterate Columns( each implOracleSpecTypeFragCommaDataColumn )$</GenRule>

	<GenRule GenDef="Value" Name="implOracleSpecTypeFragCommaDataColumn"
		>$switch ColumnInPrimaryIndex yes empty default implOracleTableColumnSpecTypeFragCommaColumn$</GenRule>

	<GenRule GenDef="Table" Name="implOracleSpecTypeBaseTable"
		>$switch IsBaseTable yes implOracleSpecTypeBaseTableWithCC default implOracleSpecTypeBaseTableNoCC$</GenRule>

	<GenRule GenDef="Table" Name="implOracleSpecTypeBaseTableWithCC"
>		ClassCode varchar$iterate Columns( each implOracleTableColumnSpecTypeFragCommaColumn )$</GenRule>

	<GenRule GenDef="Table" Name="implOracleSpecTypeBaseTableNoCC"
>		$iterate Columns( first implOracleTableColumnSpecTypeFragDbColumnName each implOracleTableColumnSpecTypeFragCommaColumn )$</GenRule>

	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragCommaColumn">,
		$implOracleTableColumnSpecTypeFragDbColumnName$</GenRule>

	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameBlob"
		>$lower DbColumnName$ bytea</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameBool"
		>$lower DbColumnName$ boolean</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameEnum"
		>$lower DbColumnName$ smallint</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameInt16"
		>$lower DbColumnName$ smallint</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameInt32"
		>$lower DbColumnName$ integer</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameInt64"
		>$lower DbColumnName$ numeric(22,0)</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameUInt16"
		>$lower DbColumnName$ integer</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameUInt32"
		>$lower DbColumnName$ numeric(22,0)</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameUInt64"
		>$lower DbColumnName$ clob</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameFloat"
		>$lower DbColumnName$ real</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameDouble"
		>$lower DbColumnName$ double precision</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameNumber"
		>$lower DbColumnName$ clob</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameString"
		>$lower DbColumnName$ varchar</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameToken"
		>$lower DbColumnName$ varchar</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameNmToken"
		>$lower DbColumnName$ varchar</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameNmTokens"
		>$lower DbColumnName$ varchar</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameText"
		>$lower DbColumnName$ clob</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameDate"
		>$lower DbColumnName$ clob</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameTime"
		>$lower DbColumnName$ clob</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameTimestamp"
		>$lower DbColumnName$ clob</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameTZDate"
		>$lower DbColumnName$ clob</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameTZTime"
		>$lower DbColumnName$ clob</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameTZTimestamp"
		>$lower DbColumnName$ clob</GenRule>
	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnNameUuid"
		>$lower DbColumnName$ varchar</GenRule>

	<GenRule GenDef="Object" Name="implOracleTableColumnSpecTypeFragDbColumnName"
>$switch BaseModelAtomClass
			BlobDef implOracleTableColumnSpecTypeFragDbColumnNameBlob
			BoolDef implOracleTableColumnSpecTypeFragDbColumnNameBool
			EnumDef implOracleTableColumnSpecTypeFragDbColumnNameEnum
			Int16Def implOracleTableColumnSpecTypeFragDbColumnNameInt16
			Int32Def implOracleTableColumnSpecTypeFragDbColumnNameInt32
			Int64Def implOracleTableColumnSpecTypeFragDbColumnNameInt64
			UInt16Def implOracleTableColumnSpecTypeFragDbColumnNameUInt16
			UInt32Def implOracleTableColumnSpecTypeFragDbColumnNameUInt32
			UInt64Def implOracleTableColumnSpecTypeFragDbColumnNameUInt64
			Id16Gen implOracleTableColumnSpecTypeFragDbColumnNameInt16
			Id32Gen implOracleTableColumnSpecTypeFragDbColumnNameInt32
			Id64Gen implOracleTableColumnSpecTypeFragDbColumnNameInt64
			FloatDef implOracleTableColumnSpecTypeFragDbColumnNameFloat
			DoubleDef implOracleTableColumnSpecTypeFragDbColumnNameDouble
			NumberDef implOracleTableColumnSpecTypeFragDbColumnNameNumber
			StringDef implOracleTableColumnSpecTypeFragDbColumnNameString
			TokenDef implOracleTableColumnSpecTypeFragDbColumnNameToken
			NmTokenDef implOracleTableColumnSpecTypeFragDbColumnNameNmToken
			NmTokensDef implOracleTableColumnSpecTypeFragDbColumnNameNmTokens
			TextDef implOracleTableColumnSpecTypeFragDbColumnNameText
			DateDef implOracleTableColumnSpecTypeFragDbColumnNameDate
			TimeDef implOracleTableColumnSpecTypeFragDbColumnNameTime
			TimestampDef implOracleTableColumnSpecTypeFragDbColumnNameTimestamp
			TZDateDef implOracleTableColumnSpecTypeFragDbColumnNameTZDate
			TZTimeDef implOracleTableColumnSpecTypeFragDbColumnNameTZTime
			TZTimestampDef implOracleTableColumnSpecTypeFragDbColumnNameTZTimestamp
			UuidDef implOracleTableColumnSpecTypeFragDbColumnNameUuid
			UuidGen implOracleTableColumnSpecTypeFragDbColumnNameUuid
			default empty$</GenRule>

</RuleSet>
