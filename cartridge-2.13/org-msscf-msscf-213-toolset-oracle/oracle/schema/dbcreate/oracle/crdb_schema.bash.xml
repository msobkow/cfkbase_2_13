<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="oracle"
	Name="schema/dbcreate/oracle/crdb_schema.bash"
	Revision="2.13"
	Descr="Oracle Create Database Schema bash script">

	<GenRule GenDef="SchemaDef" Name="dataseg_SchemaData1">$lower DbSchemaName$_data1</GenRule>

	<GenRule GenDef="Object" Name="dataseg_SchemaData1">$popto SchemaDef dataseg_SchemaData1$</GenRule>

	<GenRule GenDef="SchemaDef" Name="dataseg_SchemaIdx1">$lower DbSchemaName$_idx1</GenRule>

	<GenRule GenDef="Object" Name="dataseg_SchemaIdx1">$popto SchemaDef dataseg_SchemaIdx1$</GenRule>

	<GenFile GenDef="SchemaDef" Name="dbadminfile_CreateDatabase"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="dbcreate"
		BasePackageName="$lower SchemaName$"
		SubPackageName="oracle"
		ExpansionClassName="crdb_$lower DbSchemaName$"
		ExpansionKeyName="crdb_$lower DbSchemaName$"
		ExpansionFileName="$dbadminfilename_CreateDatabase$">#!/bin/bash
#
#	@(#) $GenPackageDir$/$GenFileName$
$MssBashScriptLicense$
#
#	Initialize locals
#
oradatadir=""
orapwd=""
oraservice=""
orahost=""
oraport=""
orauser=""
logfilename=""
parmerrors=""
TK_DUALCASE_IN_CASE_STATEMENTS=true

#
#	Parse the command line options
#
while [ -n "$$1" ]
do
	case "$$1" in

		-D)
			shift
			oradatadir=$$1
			shift
			;;

		-H)
			shift
			orahost=$$1
			shift
			;;

		-L)
			shift
			logfilename=$$1
			shift
			;;

		-P)
			shift
			orapwd=$$1
			shift
			;;

		-p)
			shift
			oraport=$$1
			shift
			;;

		-S)
			shift
			oraservice=$$1
			shift
			;;

		-U)
			shift
			orauser=$$1
			shift
			;;

		*)
			echo &gt;&amp;2 "ERROR: Option $$1 not recognized."
			parmerrors="Y"
			shift
			;;
	esac
done
$CrDbSchemaValidateParameters$
$CrDbSchemaCreateTablespaces$
$CrDbSchemaCreateDbUser$
$CrDbSchemaCreateDbInstance$
</GenFile>

<GenRule GenDef="SchemaDef" Name="CrDbSchemaValidateParameters">
#
#	Validate parameters
#

if [ "$${orauser}" = "" ]; then
	echo &gt;&amp;2 "ERROR: User must be specified with '-U username'"
	parmerrors="Y"
fi

if [ "$${orapwd}" = "" ]; then
	echo &gt;&amp;2 "ERROR: Password must be specified with '-P password'"
	parmerrors="Y"
fi

if [ "$${parmerrors}" != "" ]; then
	echo &gt;&amp;2 "ABORT: Cannot continue"
	exit 1
fi

if [ "$${logfilename}" = "" ]; then
	logfilename=`date +'$GenFileBaseName$-%Y%m%d_%Hh%M.log'`
	echo "" &gt;$$logfilename
fi

if [ "$${orahost}" = "" ]; then
	export sqlpluscmd="sqlplus $${orauser}/$${orapwd} "
else
	if [ "$${oraport}" = "" ]; then
		if [ "$${oraservice}" = "" ]; then
			export sqlpluscmd="sqlplus $${orauser}/$${orapwd}@//$${orahost} "
		else
			export sqlpluscmd="sqlplus $${orauser}/$${orapwd}@//$${orahost}/$${oraservice} "
		fi
	else
		if [ "$${oraservice}" = "" ]; then
			export sqlpluscmd="sqlplus $${orauser}/$${orapwd}@//$${orahost}:$${oraport} "
		else
			export sqlpluscmd="sqlplus $${orauser}/$${orapwd}@//$${orahost}:$${oraport}/$${oraservice} "
		fi
	fi
fi
</GenRule>

<GenRule GenDef="SchemaDef" Name="CrDbSchemaCreateTablespaces">
#
#	Create the tablespaces
#

if [ "$${oradatadir}" != "" ]; then

	need_dirs="N"

	if [ ! -d $${oradatadir} ]; then
		need_dirs="Y"
	fi

	if [ "$${need_dirs}" = "Y" ]; then
		echo "Creating tablespace directories" | tee -a $${logfilename}

		mkdir $${oradatadir}
	fi

	echo "" | tee -a $${logfilename}
	echo "Creating tablespaces $lower DbSchemaName$_data1 and $lower DbSchemaName$_idx1" | tee -a $${logfilename}
	echo "create tablespace $lower DbSchemaName$_data1 datafile '$${oradatadir}/$lower DbSchemaName$_data1' size 1G autoextend off;" | $${sqlpluscmd} &gt;&gt;$${logfilename} 2&gt;&amp;1

	echo "create tablespace $lower DbSchemaName$_idx1 datafile '$${oradatadir}/$lower DbSchemaName$_idx1' size 1G autoextend off;" | $${sqlpluscmd} &gt;&gt;$${logfilename} 2&gt;&amp;1

fi
</GenRule>

<GenRule GenDef="SchemaDef" Name="CrDbSchemaCreateDbUser">
#
#	Create the database user
#
echo "Creating user $lower DbSchemaName$ ..." | tee -a $${logfilename}

echo "" &gt;&gt;$${logfilename}
echo "#" &gt;&gt;$${logfilename}
echo "#	Create user $lower DbSchemaName$" &gt;&gt;$${logfilename}
echo "#" &gt;&gt;$${logfilename}

echo "create user $lower DbSchemaName$ identified by $${orapwd};" | $${sqlpluscmd} &gt;&gt;$${logfilename} 2&gt;&amp;1
echo "alter user $lower DbSchemaName$ quota unlimited on $lower DbSchemaName$_data1;" | $${sqlpluscmd} &gt;&gt;$${logfilename} 2&gt;&amp;1
echo "alter user $lower DbSchemaName$ quota unlimited on $lower DbSchemaName$_idx1;" | $${sqlpluscmd} &gt;&gt;$${logfilename} 2&gt;&amp;1
</GenRule>

<GenRule GenDef="SchemaDef" Name="CrDbSchemaCreateDbInstance">
#
#	Create the database instance
#
echo "Creating database $lower DbSchemaName$ ..." | tee -a $${logfilename}

echo "" &gt;&gt;$${logfilename}
echo "#" &gt;&gt;$${logfilename}
echo "#	Create database $lower DbSchemaName$" &gt;&gt;$${logfilename}
echo "#" &gt;&gt;$${logfilename}

echo "create database $lower DbSchemaName$ tablespace $lower DbSchemaName$_data1;" | $${sqlpluscmd} &gt;&gt;$${logfilename} 2&gt;&amp;1

if [ "$${orahost}" == "" ]; then
	./$dbadminfilename_CreateSchema$ -U $${orauser} -P $${orapwd} -L $${logfilename}
else
	./$dbadminfilename_CreateSchema$ -H $${orahost} -U $${orauser} -P $${orapwd} -L $${logfilename}
fi
</GenRule>

</RuleSet>
