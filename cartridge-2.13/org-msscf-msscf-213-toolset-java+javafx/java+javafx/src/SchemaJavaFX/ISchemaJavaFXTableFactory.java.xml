<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
		xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:xs="http://www.w3.org/2001/XMLSchema"
		xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="java+javafx"
	Name="src/ISchemaJavaFXTableFactory.java"
	Revision="2.13"
	Descr="Java 11 JavaFX Display Element Factory Interface for Table">

	<GenFile GenDef="Table" Name="fileISchemaJavaFXTableFactoryJava"
			GenerateOnce="false"
			ModuleName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$JavaFX"
		SourceBundle="java"
		BasePackageName="$reference ManufacturingSchema lower PackageName$javafx.src"
		SubPackageName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$JavaFX"
		ExpansionClassName="I$SchemaName$JavaFX$TableName$TableFactoryJava"
		ExpansionKeyName="I$SchemaName$JavaFX$TableName$TableFactoryJava"
		ExpansionFileName="I$SchemaName$JavaFX$TableName$Factory.java"
>// Description: Java 11 JavaFX Display Element Factory Interface for $TableName$.

$MssSourceLicense$

package $reference ManufacturingSchema lower JavaPackage$.$SchemaName$JavaFX;

import java.math.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import org.msscf.msscf.cflib.CFLib.*;
import org.msscf.msscf.cflib.CFLib.JavaFX.*;
import org.apache.commons.codec.binary.Base64;$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaName empty empty )$$poptop SchemaDef importJavaPackageSchemaName$$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaNameObj empty empty )$$poptop SchemaDef importJavaPackageSchemaNameObj$

/**
 *	I$SchemaName$JavaFX$TableName$Factory JavaFX Display Element Factory Interface
 *	for $TableName$.
 */
public interface I$SchemaName$JavaFX$TableName$Factory
{$declJavaFXTableFactoryNewAttrPane$$declJavaFXTableFactoryNewListPane$$declJavaFXTableFactoryNewPickerPane$$declJavaFXTableFactoryNewEltTabPane$$declJavaFXTableFactoryNewAskDeleteForm$$declJavaFXTableFactoryNewAddPane$$declJavaFXTableFactoryNewViewEditPane$$switch IsInstantiable yes maybeDeclJavaFXTableFactoryNewFinderForm default empty$$declJavaFXTableFactoryNewPickerForm$$declJavaFXTableFactoryNewAddForm$$declJavaFXTableFactoryNewViewEditForm$}
</GenFile>

	<GenRule GenDef="Table" Name="maybeDeclJavaFXTableFactoryNewFinderForm"
		>$switch HasContainer no declJavaFXTableFactoryNewFinderForm default containerCheckDeclJavaFXTableFactoryNewFinderForm$</GenRule>

	<GenRule GenDef="Table" Name="containerCheckDeclJavaFXTableFactoryNewFinderForm"
		>$switch ContainerIsTenantOrCluster yes declJavaFXTableFactoryNewFinderForm default empty$</GenRule>

	<GenRule GenDef="Table" Name="ContainerName"
		>$reference ContainerRelation reference ToTable TableName$</GenRule>

	<GenRule GenDef="Table" Name="ContainerIsTenantOrCluster"
		>$switch ContainerName Tenant yes Cluster yes default no$</GenRule>

	<GenRule GenDef="Table" Name="declJavaFXTableFactoryNewAttrPane">
	public CFGridPane newAttrPane( ICFFormManager formManager, I$DefSchemaName$$TableName$Obj javaFXFocus );
</GenRule>

	<GenRule GenDef="Table" Name="declJavaFXTableFactoryNewAskDeleteForm">
	public CFBorderPane newAskDeleteForm( ICFFormManager formManager, I$DefSchemaName$$TableName$Obj javaFXFocus, ICFDeleteCallback callback );
</GenRule>

	<GenRule GenDef="Table" Name="declJavaFXTableFactoryNewFinderForm">
	public CFBorderPane newFinderForm( ICFFormManager formManager );
</GenRule>

	<GenRule GenDef="Table" Name="declJavaFXTableFactoryNewPickerForm">
	public CFBorderPane newPickerForm( ICFFormManager formManager,
		I$DefSchemaName$$TableName$Obj javaFXFocus,
		$switch HasContainer yes implISchemaJavaFXTableContainerObjInterface default implISchemaJavaFXTableContainerAnyInterface$ argContainer$switch PageData yes implConstructJavaFXTableListPanePageCallback default implConstructJavaFXTableListPaneDataCollection$,
		I$DefSchemaName$JavaFX$TableName$Chosen whenChosen );
</GenRule>

	<GenRule GenDef="Table" Name="declJavaFXTableFactoryNewAddForm">
	public CFBorderPane newAddForm( ICFFormManager formManager, I$DefSchemaName$$TableName$Obj javaFXFocus, ICFFormClosedCallback closeCallback, boolean allowSave );
</GenRule>

	<GenRule GenDef="Table" Name="declJavaFXTableFactoryNewViewEditForm">
	public CFBorderPane newViewEditForm( ICFFormManager formManager, I$DefSchemaName$$TableName$Obj javaFXFocus, ICFFormClosedCallback closeCallback, boolean cameFromAdd );
</GenRule>

	<GenRule GenDef="Table" Name="declJavaFXTableFactoryNewListPane">
	public CFBorderPane newListPane( ICFFormManager formManager,
		$switch HasContainer yes implISchemaJavaFXTableContainerObjInterface default implISchemaJavaFXTableContainerAnyInterface$ argContainer,
		I$DefSchemaName$$TableName$Obj argFocus$switch PageData yes implConstructJavaFXTableListPanePageCallback default implConstructJavaFXTableListPaneDataCollection$,
		ICFRefreshCallback refreshCallback,
		boolean sortByChain );
</GenRule>

	<GenRule GenDef="Table" Name="declJavaFXTableFactoryNewPickerPane">
	public CFBorderPane newPickerPane( ICFFormManager formManager,
		I$DefSchemaName$$TableName$Obj argFocus,
		$switch HasContainer yes implISchemaJavaFXTableContainerObjInterface default implISchemaJavaFXTableContainerAnyInterface$ argContainer$switch PageData yes implConstructJavaFXTableListPanePageCallback default implConstructJavaFXTableListPaneDataCollection$,
		I$DefSchemaName$JavaFX$TableName$Chosen whenChosen );
</GenRule>

	<GenRule GenDef="Table" Name="declJavaFXTableFactoryNewEltTabPane">
	public CFTabPane newEltTabPane( ICFFormManager formManger, I$DefSchemaName$$TableName$Obj javaFXFocus );
</GenRule>

	<GenRule GenDef="Table" Name="declJavaFXTableFactoryNewAddPane">
	public CFSplitPane newAddPane( ICFFormManager formManger, I$DefSchemaName$$TableName$Obj javaFXFocus );
</GenRule>

	<GenRule GenDef="Table" Name="declJavaFXTableFactoryNewViewEditPane">
	public CFSplitPane newViewEditPane( ICFFormManager formManger, I$DefSchemaName$$TableName$Obj javaFXFocus );
</GenRule>

</RuleSet>
