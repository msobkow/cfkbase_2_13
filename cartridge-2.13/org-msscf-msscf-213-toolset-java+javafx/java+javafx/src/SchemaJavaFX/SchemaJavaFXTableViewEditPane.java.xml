<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
		xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:xs="http://www.w3.org/2001/XMLSchema"
		xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="java+javafx"
	Name="src/SchemaJavaFXTableViewEditPane.java"
	Revision="2.13"
	Descr="Java 11 JavaFX View/Edit Pane for Table">

	<GenFile GenDef="Table" Name="fileSchemaJavaFXTableViewEditPaneJava"
			GenerateOnce="false"
			ModuleName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$JavaFX"
		SourceBundle="java"
		BasePackageName="$reference ManufacturingSchema lower PackageName$javafx.src"
		SubPackageName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$JavaFX"
		ExpansionClassName="$SchemaName$JavaFX$TableName$TableViewEditPaneJava"
		ExpansionKeyName="$SchemaName$JavaFX$TableName$TableViewEditPaneJava"
		ExpansionFileName="$SchemaName$JavaFX$TableName$ViewEditPane.java"
>// Description: Java 11 JavaFX View/Edit Pane implementation for $TableName$.

$MssSourceLicense$

package $reference ManufacturingSchema lower JavaPackage$.$SchemaName$JavaFX;

import java.math.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import javafx.geometry.Orientation;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.ScrollPane.ScrollBarPolicy;
import org.msscf.msscf.cflib.CFLib.*;
import org.msscf.msscf.cflib.CFLib.JavaFX.*;
import org.apache.commons.codec.binary.Base64;$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaName empty empty )$$poptop SchemaDef importJavaPackageSchemaName$$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaNameObj empty empty )$$poptop SchemaDef importJavaPackageSchemaNameObj$

/**
 *	$SchemaName$JavaFX$TableName$ViewEditPane JavaFX View/Edit Pane implementation
 *	for $TableName$.
 */
public class $SchemaName$JavaFX$TableName$ViewEditPane
extends CFSplitPane
implements I$DefSchemaName$JavaFX$TableName$PaneCommon
{
	protected ICFFormManager cfFormManager = null;
	protected I$SchemaName$JavaFXSchema javafxSchema = null;
	protected ScrollPane attrScrollPane = null;
	protected CFGridPane attrPane = null;$switch HasEltTabs yes declJavaFXTableViewEditPaneEltTabPane default empty$
$implConstructJavaFXTableViewEditPane$$implGetSetCFFormManager$$implGetJavaFXSchema$$implGetSetJavaFXFocusViewEditPane$$implSetPaneModeViewEditPane$}
</GenFile>

	<GenRule GenDef="Table" Name="declJavaFXTableViewEditPaneEltTabPane">
	protected CFTabPane eltTabPane = null;</GenRule>

	<GenRule GenDef="Table" Name="HasEltTabs"
		>$switch HasEltTabsATab empty no default yes$</GenRule>

	<GenRule GenDef="Table" Name="HasEltTabsATab"
		>$switch HasSuperClassRelation yes HasEltTabsInhTabs default HasEltTabsBaseTabs$</GenRule>

	<GenRule GenDef="Table" Name="HasEltTabsBaseTabs"
		>$iterate Relation( each HasEltTabsATab empty empty )$</GenRule>

	<GenRule GenDef="Table" Name="HasEltTabsInhTabs"
		>$reference SuperClassRelation reference ToTable HasEltTabsATab$$iterate Relation( each HasEltTabsATab empty empty )$</GenRule>

	<GenRule GenDef="Relation" Name="HasEltTabsATab"
		>$switch RelationTypeTag
			Lookup empty
			Children yes
			Components yes
			Details yes
			Parent empty
			Container empty
			Owner empty
			Master empty
			default empty$</GenRule>

	<GenRule GenDef="Table" Name="implGetSetJavaFXFocusViewEditPane">
	public void setJavaFXFocus( ICFLibAnyObj value ) {
		final String S_ProcName = "setJavaFXFocus";
		if( ( value == null ) || ( value instanceof I$DefSchemaName$$TableName$Obj ) ) {
			super.setJavaFXFocus( value );
		}
		else {
			throw new CFLibUnsupportedClassException( getClass(),
				S_ProcName,
				"value",
				value,
				"I$DefSchemaName$$TableName$Obj" );
		}
		if( attrPane != null ) {
			attrPane.setJavaFXFocus( value );
		}$switch HasEltTabs yes ViewEditPanePropagateToEltTabPane default empty$
	}

	public void setJavaFXFocusAs$TableName$( I$DefSchemaName$$TableName$Obj value ) {
		setJavaFXFocus( value );
	}

	public I$DefSchemaName$$TableName$Obj getJavaFXFocusAs$TableName$() {
		return( (I$DefSchemaName$$TableName$Obj)getJavaFXFocus() );
	}
</GenRule>

	<GenRule GenDef="Table" Name="ViewEditPanePropagateToEltTabPane">
		if( eltTabPane != null ) {
			eltTabPane.setJavaFXFocus( value );
		}</GenRule>

	<GenRule GenDef="Table" Name="implSetPaneModeViewEditPane">
	public void setPaneMode( CFPane.PaneMode value ) {
		CFPane.PaneMode oldMode = getPaneMode();
		if( oldMode == value ) {
			return;
		}
		try {
			super.setPaneMode( value );
			((I$DefSchemaName$JavaFX$TableName$PaneCommon)attrPane).setPaneMode( value );$switch HasEltTabs yes implSetPaneModeViewEditPaneAdjustEltTabPane default empty$
		}
		catch( Throwable t ) {
			super.setPaneMode( oldMode );
			((I$DefSchemaName$JavaFX$TableName$PaneCommon)attrPane).setPaneMode( oldMode );$switch HasEltTabs yes implSetPaneModeViewEditPaneAdjustOldModeEltTabPane default empty$
			throw t;
		}
	}
</GenRule>

	<GenRule GenDef="Table" Name="implSetPaneModeViewEditPaneAdjustEltTabPane">
			((I$DefSchemaName$JavaFX$TableName$PaneCommon)eltTabPane).setPaneMode( value );</GenRule>

	<GenRule GenDef="Table" Name="implSetPaneModeViewEditPaneAdjustOldModeEltTabPane">
			((I$DefSchemaName$JavaFX$TableName$PaneCommon)eltTabPane).setPaneMode( oldMode );</GenRule>

	<GenRule GenDef="Table" Name="implConstructJavaFXTableViewEditPane">
	public $SchemaName$JavaFX$TableName$ViewEditPane( ICFFormManager formManager, I$SchemaName$JavaFXSchema argSchema, I$DefSchemaName$$TableName$Obj argFocus ) {
		super();
		final String S_ProcName = "construct-schema-focus";
		if( formManager == null ) {
			throw new CFLibNullArgumentException( getClass(),
				S_ProcName,
				1,
				"formManager" );
		}
		cfFormManager = formManager;
		if( argSchema == null ) {
			throw new CFLibNullArgumentException( getClass(),
				S_ProcName,
				2,
				"argSchema" );
		}
		// argFocus is optional; focus may be set later during execution as
		// conditions of the runtime change.
		javafxSchema = argSchema;
		setJavaFXFocus( argFocus );
		attrPane = argSchema.get$TableName$Factory().newAttrPane( cfFormManager, argFocus );
		attrScrollPane = new ScrollPane();
		attrScrollPane.setFitToWidth( true );
		attrScrollPane.setHbarPolicy( ScrollBarPolicy.NEVER );
		attrScrollPane.setVbarPolicy( ScrollBarPolicy.AS_NEEDED );
		attrScrollPane.setContent( attrPane );$switch HasEltTabs yes implConstructJavaFXTableViewEditPaneInstantiateEltTabPane default empty$
		setOrientation( Orientation.VERTICAL );
		getItems().add( attrScrollPane );$switch HasEltTabs yes implConstructJavaFXTableViewEditPaneAddEltTabPane default empty$
	}
</GenRule>

	<GenRule GenDef="Table" Name="implConstructJavaFXTableViewEditPaneInstantiateEltTabPane">
		eltTabPane = argSchema.get$TableName$Factory().newEltTabPane( cfFormManager, argFocus );</GenRule>

	<GenRule GenDef="Table" Name="implConstructJavaFXTableViewEditPaneAddEltTabPane">
		getItems().add( eltTabPane );</GenRule>

</RuleSet>
