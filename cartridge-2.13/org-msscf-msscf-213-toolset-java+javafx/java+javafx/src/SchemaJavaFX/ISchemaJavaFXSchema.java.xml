<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
		xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:xs="http://www.w3.org/2001/XMLSchema"
		xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="java+javafx"
	Name="src/ISchemaJavaFXSchema.java"
	Revision="2.13"
	Descr="Java 11 JavaFX Schema Interface specification">

	<GenFile GenDef="SchemaDef" Name="fileISchemaJavaFXSchemaJava"
			GenerateOnce="false"
			ModuleName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$JavaFX"
		SourceBundle="java"
		BasePackageName="$reference ManufacturingSchema lower PackageName$javafx.src"
		SubPackageName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$JavaFX"
		ExpansionClassName="I$SchemaName$JavaFXSchemaJava"
		ExpansionKeyName="I$SchemaName$JavaFXSchemaJava"
		ExpansionFileName="I$SchemaName$JavaFXSchema.java"
>$ISchemaJavaFXSchemaPreamble$
/**
 *	The I$SchemaName$JavaFXSchema defines the factory interface for the
 *	for the various panes and components used to construct a GUI interface
 *	using the JavaFX framework.
 */
public interface I$SchemaName$JavaFXSchema$iterate SchemaRefs( first extendISchemaJavaFXSchemaSchemaRef each commaNewlineISchemaJavaFXSchemaSchemaRef empty empty )$
{
	$SecSchemaName$ClientConfigurationFile getClientConfigurationFile();
	void setClientConfigurationFile( $SecSchemaName$ClientConfigurationFile value );

	KeyStore getKeyStore();
	void setKeyStore( KeyStore value );

	I$SecSchemaName$SchemaObj getSchema();
	void setSchema( I$SecSchemaName$SchemaObj argSchema );

	String getClusterName();
	void setClusterName( String argClusterName );
	I$SecSchemaName$ClusterObj getClusterObj();

	String getTenantName();
	void setTenantName( String argTenantName );
	I$SecSchemaName$TenantObj getTenantObj();

	String getSecUserName();
	void setSecUserName( String argSecUserName );
	I$SecSchemaName$SecUserObj getSecUserObj();

	I$SecSchemaName$SecSessionObj getSecSessionObj();
$iterate SchemaTables( each declSchemaJavaFXSchemaGetTableFactory empty empty )$}
</GenFile>

	<GenRule GenDef="SchemaRef" Name="extendISchemaJavaFXSchemaSchemaRef">
	extends I$reference RefSchema SchemaName$JavaFXSchema</GenRule>

	<GenRule GenDef="SchemaRef" Name="commaNewlineISchemaJavaFXSchemaSchemaRef">,
		I$reference RefSchema SchemaName$JavaFXSchema</GenRule>

	<GenRule GenDef="SchemaDef" Name="ISchemaJavaFXSchemaPreamble"
>// Description: Java 11 JavaFX Schema Interface for $SchemaName$.

$MssSourceLicense$

package $reference ManufacturingSchema lower JavaPackage$.$SchemaName$JavaFX;

import java.math.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import java.security.KeyStore;
import org.msscf.msscf.cflib.CFLib.*;
import org.msscf.msscf.cflib.CFLib.JavaFX.*;
import org.apache.commons.codec.binary.Base64;$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaName empty empty )$$poptop SchemaDef importJavaPackageSchemaName$$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaNameObj empty empty )$$poptop SchemaDef importJavaPackageSchemaNameObj$$iterate SchemaRefs( each importJavaPackageSchemaNameJavaFX empty empty )$
</GenRule>

	<GenRule GenDef="SchemaRef" Name="importJavaPackageSchemaNameJavaFX"
		>$reference RefSchema importJavaPackageSchemaNameJavaFX$</GenRule>
	<GenRule GenDef="SchemaDef" Name="importJavaPackageSchemaNameJavaFX">
import $lower JavaExpandPackage$.$SchemaName$JavaFX.*;</GenRule>
	<GenRule GenDef="Table" Name="importJavaPackageSchemaNameJavaFX"
		>$popto SchemaDef importJavaPackageSchemaNameJavaFX$</GenRule>
	<GenRule GenDef="Object" Name="importJavaPackageSchemaNameJavaFX"
		>$popto SchemaDef importJavaPackageSchemaNameJavaFX$</GenRule>

	<GenRule GenDef="Table" Name="declSchemaJavaFXSchemaGetTableFactory">
	public I$DefSchemaName$JavaFX$TableName$Factory get$TableName$Factory();
</GenRule>

</RuleSet>
