<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="pgsql"
	Name="schema/dbcreate/pgsql/crdatabase_schema.bat"
	Revision="2.13"
	Descr="null">

	<GenFile GenDef="SchemaDef" Name="dbadminfile_CreateSchemaBat"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="dbcreate"
		BasePackageName="$lower SchemaName$"
		SubPackageName="pgsql"
		ExpansionClassName="crdatabase_$lower DbSchemaName$_bat"
		ExpansionKeyName="crdatabase_$lower DbSchemaName$_bat"
		ExpansionFileName="$dbadminfilename_CreateSchemaBat$">@ECHO off
REM
REM	@(#) $GenPackageDir$$GenFileName$
$MssBatScriptLicense$
$parsePgSqlArgsBat$$validatePgSqlArgsBat$
ECHO Dropping old schema $lower DbSchemaName$ for %pguser%
ECHO Dropping old schema $lower DbSchemaName$ for %pguser% &gt;&gt;%logfilename%

psql -h %pghost% -U %pguser% -a -e -c "drop schema $lower DbSchemaName$" &gt;&gt;%logfilename% 2&gt;&amp;1

ECHO Creating schema $DbSchemaName$ in database %pgdb% for %pguser%
ECHO Creating schema $DbSchemaName$ in database %pgdb% for %pguser% &gt;&gt;%logfilename%

psql -h %pghost% -d %pgdb% -U %pguser% -a -e -c "create schema $lower DbSchemaName$" &gt;&gt;%logfilename% 2&gt;&amp;1

$exec_CreateAllTablesBat$$exec_CreateAllIndexesBat$$exec_CreateAllRelationsBat$$exec_CreateAllSequencesBat$$exec_CreateAllTypesBat$$exec_CreateAllStoredProcsBat$
</GenFile>

	<GenRule GenDef="SchemaDef" Name="exec_CreateAllTablesBat">
REM
REM	Create the database tables
REM
ECHO 	Creating database tables ...
ECHO  &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%
ECHO REM	Executing script $dbadminfilename_CreateAllTablesBat$ &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%
CALL $dbadminfilename_CreateAllTablesBat$ %pghost% %pgdb% %pguser% %pgpwd% %logfilename%
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateAllIndexesBat">
REM
REM	Create the database indexes
REM
ECHO 	Creating database indexes ...
ECHO REM &gt;&gt;%logfilename%
ECHO REM	Executing script $dbadminfilename_CreateAllIndexesBat$ &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%
CALL $dbadminfilename_CreateAllIndexesBat$ %pghost% %pgdb% %pguser% %pgpwd% %logfilename%
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateAllRelationsBat">
REM
REM	Create the database relations
REM
ECHO 	Creating database relations ...
ECHO  &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%
ECHO REM	Executing script $dbadminfilename_CreateAllRelationsBat$ &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%
CALL $dbadminfilename_CreateAllRelationsBat$ %pghost% %pgdb% %pguser% %pgpwd% %logfilename%
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateAllSequencesBat">
REM
REM	Create the database sequences
REM
ECHO 	Creating database sequences...
ECHO  &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%
ECHO REM	Executing script $dbadminfilename_CreateAllSequencesBat$ &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%
CALL $dbadminfilename_CreateAllSequencesBat$ %pghost% %pgdb% %pguser% %pgpwd% %logfilename%
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateAllTypesBat">
REM
REM	Create the return record types for the stored procedures
REM
ECHO 	Creating database types...
ECHO  &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%
ECHO REM	Executing script $dbadminfilename_CreateAllTypesBat$ &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%
CALL $dbadminfilename_CreateAllTypesBat$ %pghost% %pgdb% %pguser% %pgpwd% %logfilename%
</GenRule>

	<GenRule GenDef="SchemaDef" Name="exec_CreateAllStoredProcsBat">
REM
REM	Create the stored procedures
REM
ECHO 	Creating stored procedures...
ECHO  &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%
ECHO REM	Executing script $dbadminfilename_CreateAllStoredProcsBat$ &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%
CALL $dbadminfilename_CreateAllStoredProcsBat$ %pghost% %pgdb% %pguser% %pgpwd% %logfilename%
</GenRule>

</RuleSet>
