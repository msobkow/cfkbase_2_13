<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="pgsql"
	Name="schema/dbcreate/pgsql/crprocs_schema.bash"
	Revision="2.13"
	Descr="null">

	<GenFile GenDef="SchemaDef" Name="dbadminfile_CreateAllStoredProcs"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="dbcreate"
		BasePackageName="$lower SchemaName$"
		SubPackageName="pgsql"
		ExpansionClassName="crprocs_$lower SchemaName$"
		ExpansionKeyName="crprocs_$lower SchemaName$"
		ExpansionFileName="$dbadminfilename_CreateAllStoredProcs$">#!/bin/bash
#
#	@(#) $GenPackageDir$/$GenFileName$
$MssBashScriptLicense$
$parsePgSqlArgs$$validatePgSqlArgs$
$invoke_CreateSPIsSystemUser$$invoke_CreateSPIsClusterUser$$invoke_CreateSPIsTenantUser$$iterate Id16Generators( each invoke_CreateSPNextSchemaIdGen empty empty )$$iterate Id32Generators( each invoke_CreateSPNextSchemaIdGen empty empty )$$iterate Id64Generators( each invoke_CreateSPNextSchemaIdGen empty empty )$$iterate SchemaTables( each invoke_CreateTableIdGens )$
$iterate SchemaTables( each invoke_CreateAuditProcs empty empty )$
$iterate SchemaTables( each invoke_CreateStoredProcs empty empty )$
$iterate SchemaTables( each invoke_CreateDeleteSuffixStoredProcs empty empty )$
$invoke_CreateSPBootstrap$
</GenFile>

	<GenRule GenDef="Table" Name="invoke_CreateAuditProcs"
		>$switch ThisHasChain yes reallyinvoke_CreateSPAuditDbTableName default empty$</GenRule>

	<GenRule GenDef="Table" Name="reallyinvoke_CreateSPAuditDbTableName"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPAuditDbTableName$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule GenDef="Table" Name="invoke_CreateTableIdGens"
		>$iterate DispensedId16Generators( each invoke_CreateSPNextTableIdGen empty empty )$$iterate DispensedId32Generators( each invoke_CreateSPNextTableIdGen empty empty )$$iterate DispensedId64Generators( each invoke_CreateSPNextTableIdGen empty empty )$</GenRule>

	<GenRule GenDef="Table" Name="invoke_CreateStoredProcs"
		>$maybe_invoke_CreateSPCreateDbTableName$$invoke_CreateSPLockDbTableName$$invoke_CreateSPReadDbTableName$$maybe_invoke_CreateSPReadDbTableNameCC$$invoke_CreateSPReadDbTableNameAll$$switch PageData yes invoke_CreateSPPageDbTableNameAll default empty$$maybe_invoke_CreateSPReadDbTableNameCCAll$$invoke_SPReadByIndexes$$maybe_invoke_CreateSPUpdateDbTableName$$invoke_CreateSPDeleteDbTableName$$switch HasChain yes invoke_CreateSPMoveUpDbTableName default empty$$switch HasChain yes invoke_CreateSPMoveDownDbTableName default empty$
</GenRule>

	<GenRule GenDef="Table" Name="invoke_CreateSPMoveUpDbTableName"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPMoveUpDbTableName$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule GenDef="Table" Name="invoke_CreateSPMoveDownDbTableName"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPMoveDownDbTableName$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule GenDef="Table" Name="invoke_CreateDeleteSuffixStoredProcs"
		>$invoke_CreateSPDeleteDbTableNameBySuffix$
</GenRule>

	<GenRule GenDef="Table" Name="invoke_CreateSPDeleteDbTableNameBySuffix"
		>$switch HasSuperClassRelation yes invoke_CreateSPDeleteDbTableNameByInhSuffix default invoke_CreateSPDeleteDbTableNameByBaseSuffix$</GenRule>

	<GenRule GenDef="Table" Name="invoke_CreateSPDeleteDbTableNameByInhSuffix"
		>$reference SuperClassRelation reference ToTable invoke_CreateSPDeleteDbTableNameBySuffix$$iterate Index( each invoke_CreateSPDeleteDbTableNameByNonPrimarySuffix empty empty )$</GenRule>

	<GenRule GenDef="Index" Name="invoke_CreateSPDeleteDbTableNameByNonPrimarySuffix"
		>$switch IsPrimaryIndex yes empty default invoke_CreateSPDeleteDbTableNameBySuffix$</GenRule>

	<GenRule GenDef="Table" Name="invoke_CreateSPDeleteDbTableNameByBaseSuffix"
		>$iterate Index( each invoke_CreateSPDeleteDbTableNameBySuffix )$</GenRule>

	<GenRule GenDef="Table" Name="maybe_invoke_CreateSPCreateDbTableName"
		>$switch InheritsBlob yes empty default invoke_CreateSPCreateDbTableName$</GenRule>

	<GenRule GenDef="Table" Name="maybe_invoke_CreateSPUpdateDbTableName"
		>$switch InheritsBlob yes empty default invoke_CreateSPUpdateDbTableName$</GenRule>

	<GenRule GenDef="Table" Name="maybe_invoke_CreateSPReadDbTableNameCC"
		>$switch HasSubClasses yes invoke_CreateSPReadDbTableNameCC default empty$</GenRule>

	<GenRule GenDef="Table" Name="maybe_invoke_CreateSPReadDbTableNameCCAll"
		>$switch HasSubClasses yes invoke_CreateSPReadDbTableNameCCAll default empty$</GenRule>

	<GenRule GenDef="Table" Name="invoke_SPReadByIndexes"
		>$switch HasSuperClassRelation yes invoke_SPReadByInhIndexes default invoke_SPReadByBaseIndexes$</GenRule>

	<GenRule GenDef="Table" Name="invoke_SPReadByInhIndexes"
		>$reference SuperClassRelation reference ToTable invoke_SPReadByIndexes$$iterate Index( each maybe_invoke_CreateSPReadDbTableNameBySuffix )$</GenRule>

	<GenRule GenDef="Table" Name="invoke_SPReadByBaseIndexes"
		>$iterate Index( each invoke_non_nullable_ReadBySuffixProcs )$</GenRule>

	<GenRule GenDef="Index" Name="invoke_non_primary_nullable_ReadBySuffixProcs"
		>$switch IsPrimaryIndex yes empty default invoke_non_nullable_ReadBySuffixProcs$</GenRule>

	<GenRule GenDef="Index" Name="invoke_non_nullable_ReadBySuffixProcs"
		>$switch PageData yes maybe_invoke_non_nullable_CreateSPPageDbTableNameBySuffix default empty$$invoke_non_nullable_CreateSPReadDbTableNameBySuffix$$invoke_non_nullable_CreateSPReadDbTableNameCCBySuffix$</GenRule>

	<GenRule GenDef="Index" Name="maybe_invoke_non_nullable_CreateSPPageDbTableNameBySuffix"
		>$switch IsUnique yes empty default invoke_CreateSPPageDbTableNameBySuffix$</GenRule>

	<GenRule GenDef="SchemaDef" Name="invoke_CreateSPBootstrap"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPBootstrap$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule GenDef="SchemaDef" Name="invoke_CreateSPIsSystemUser"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPIsSystemUser$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule GenDef="SchemaDef" Name="invoke_CreateSPIsClusterUser"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPIsClusterUser$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule GenDef="SchemaDef" Name="invoke_CreateSPIsTenantUser"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPIsTenantUser$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule GenDef="Id16Gen" Name="invoke_CreateSPNextSchemaIdGen"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPNextSchemaIdGen$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>
	<GenRule GenDef="Id32Gen" Name="invoke_CreateSPNextSchemaIdGen"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPNextSchemaIdGen$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>
	<GenRule GenDef="Id64Gen" Name="invoke_CreateSPNextSchemaIdGen"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPNextSchemaIdGen$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule GenDef="Id16Gen" Name="invoke_CreateSPNextTableIdGen"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPNextTableIdGen$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>
	<GenRule GenDef="Id32Gen" Name="invoke_CreateSPNextTableIdGen"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPNextTableIdGen$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>
	<GenRule GenDef="Id64Gen" Name="invoke_CreateSPNextTableIdGen"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPNextTableIdGen$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule ScopeDef="Table" GenDef="Index" Name="maybe_invoke_CreateSPReadDbTableNameBySuffix">$switch IsPrimaryIndex no invoke_CreateSPReadDbTableNameBySuffix default empty$</GenRule>

	<GenRule ScopeDef="Table" GenDef="Index" Name="invoke_non_nullable_CreateSPReadDbTableNameBySuffix">$invoke_CreateSPReadDbTableNameBySuffix$</GenRule>

	<GenRule ScopeDef="Table" GenDef="Index" Name="invoke_non_nullable_CreateSPReadDbTableNameCCBySuffix">$maybe_invoke_CreateSPReadDbTableNameCCBySuffix$</GenRule>

	<GenRule GenDef="Index" Name="maybe_invoke_CreateSPReadDbTableNameCCBySuffix"
		>$switch TopHasSubClasses yes invoke_CreateSPReadDbTableNameCCBySuffix default empty$</GenRule>

	<GenRule ScopeDef="SchemaDef" GenDef="Table" Name="invoke_CreateSPCreateDbTableName"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPCreateDbTableName$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule ScopeDef="SchemaDef" GenDef="Table" Name="invoke_CreateSPLockDbTableName"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPLockDbTableName$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule ScopeDef="SchemaDef" GenDef="Table" Name="invoke_CreateSPReadDbTableName"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPReadDbTableName$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule ScopeDef="SchemaDef" GenDef="Table" Name="invoke_CreateSPPageDbTableNameAll"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPPageDbTableNameAll$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule ScopeDef="SchemaDef" GenDef="Table" Name="invoke_CreateSPReadDbTableNameAll"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPReadDbTableNameAll$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule ScopeDef="Table" GenDef="Index" Name="invoke_CreateSPPageDbTableNameBySuffix"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPPageDbTableNameBySuffix$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule ScopeDef="Table" GenDef="Index" Name="invoke_CreateSPReadDbTableNameBySuffix"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPReadDbTableNameBySuffix$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule ScopeDef="SchemaDef" GenDef="Table" Name="invoke_CreateSPReadDbTableNameCC"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPReadDbTableNameCC$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule ScopeDef="SchemaDef" GenDef="Table" Name="invoke_CreateSPReadDbTableNameCCAll"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPReadDbTableNameCCAll$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule ScopeDef="Table" GenDef="Index" Name="invoke_CreateSPReadDbTableNameCCBySuffix"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPReadDbTableNameCCBySuffix$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule ScopeDef="SchemaDef" GenDef="Table" Name="invoke_CreateSPUpdateDbTableName"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPUpdateDbTableName$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule ScopeDef="SchemaDef" GenDef="Table" Name="invoke_CreateSPDeleteDbTableName"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPDeleteDbTableName$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

	<GenRule GenDef="Index" Name="invoke_CreateSPDeleteDbTableNameBySuffix"
		>psql -h $${pghost} $${PGPORT} -d $${pgdb} -U $${pguser} -a -e -f $dbadminfilename_CreateSPDeleteDbTableNameBySuffix$ &gt;&gt;$$logfilename 2&gt;&amp;1
</GenRule>

</RuleSet>
