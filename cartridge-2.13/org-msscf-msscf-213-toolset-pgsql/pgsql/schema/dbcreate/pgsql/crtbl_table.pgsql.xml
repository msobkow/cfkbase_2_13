<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="pgsql"
	Name="schema/dbcreate/pgsql/crtbl_table.pgsql"
	Revision="2.13"
	Descr="null">

	<GenFile ScopeDef="SchemaDef" GenDef="Table" Name="dbadminfile_CreateTable"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="dbcreate"
		BasePackageName="$lower SchemaName$"
		SubPackageName="pgsql"
		ExpansionClassName="crtbl_$lower DbTableName$"
		ExpansionKeyName="crtbl_$lower DbTableName$"
		ExpansionFileName="$dbadminfilename_CreateTable$">--
--	@(#) $GenPackageDir$/$GenFileName$
$MssDoubleDashScriptLicense$
CREATE TABLE $lower DbSchemaName$.$DbTableName$ ($switch HasSuperClassRelation no dbadminfile_ClassCodeOptAuditColComma default empty$$iterate Columns( each clause_CreateColComma last clause_CreateLastCol )$$switch HasSuperClassRelation no clause_CreateColRevision default empty$)
	WITHOUT OIDS
	TABLESPACE $dataseg_SchemaData1$$RunSqlStmt$$switch HasPrimaryKey yes clause_PrimaryKey default empty$</GenFile>

	<GenRule GenDef="Value" Name="TableHasSuperClassRelation"
		>$popto Table HasSuperClassRelation$</GenRule>

	<GenRule GenDef="Value" Name="clause_CreateLastCol"
		>$switch TableHasSuperClassRelation no clause_CreateColComma default clause_CreateCol$</GenRule>

	<GenRule GenDef="Table" Name="BaseHasSubClasses"
		>$reference BaseClass HasSubClasses$</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_ClassCodeOptAuditColComma">$switch BaseHasSubClasses yes dbadminfile_implClassCodeColOptAuditComma default dbadminfile_implTableOptAuditNoClassCodeCol$</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_implTableOptAuditNoClassCodeCol"
		>$switch HasAuditColumns yes dbadminfile_implTableAuditNoClassCodeCol default empty$</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_implClassCodeColOptAuditComma">$switch HasAuditColumns yes dbadminfile_implClassCodeWithAuditColComma default dbadminfile_implClassCodeNoAuditColComma$</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_implClassCodeWithAuditColComma"
		>$dbadminfile_implClassCodeWithAuditCol$,</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_implClassCodeNoAuditColComma"
		>$dbadminfile_implClassCodeCol$,</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_implClassCodeCol">
	classcode	VARCHAR(4) NOT NULL
		CONSTRAINT chk_$lower poptop Table DbTableName$_classcode
			CHECK( classcode IN ( '$ClassCode$' $iterate TableSubClasses( each dbadminfile_WalkClassCodes empty empty )$ ))</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_implClassCodeWithAuditCol">
	classcode	VARCHAR(4) NOT NULL
		CONSTRAINT chk_$lower poptop Table DbTableName$_classcode
			CHECK( classcode IN ( '$ClassCode$' $iterate TableSubClasses( each dbadminfile_WalkClassCodes empty empty )$ )),
	createdat	TIMESTAMP NOT NULL,
	createdby	VARCHAR(36) NOT NULL,
	updatedat	TIMESTAMP NOT NULL,
	updatedby	VARCHAR(36) NOT NULL</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_implTableAuditNoClassCodeCol">
	createdat	TIMESTAMP NOT NULL,
	createdby	VARCHAR(36) NOT NULL,
	updatedat	TIMESTAMP NOT NULL,
	updatedby	VARCHAR(36) NOT NULL,</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_implTableHClassCodeCol">
	classcode	VARCHAR(4) NOT NULL
		CONSTRAINT chk_$lower poptop Table DbTableName$_h_classcode
			CHECK( classcode = '$poptop Table ClassCode$' )</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_implTableHClassCodeColComma"
		>$dbadminfile_implTableHClassCodeCol$,</GenRule>

	<GenRule GenDef="Table" Name="dbadminfile_WalkClassCodes">, '$ClassCode$'$iterate TableSubClasses( each dbadminfile_WalkClassCodes empty empty )$</GenRule>

	<GenRule GenDef="Table" Name="clause_PrimaryKey">$reference PrimaryKeyIndex clause_CreatePrimaryIndex$$reference PrimaryKeyIndex clause_PrimaryKey$</GenRule>

	<GenRule ScopeDef="SchemaDef" GenDef="Index" Name="clause_CreatePrimaryIndex">
CREATE$switch IsUnique yes clause_Unique default empty$ INDEX $DbIndexName$ ON $lower DbSchemaName$.$DbTableName$ ($iterate Columns( each clause_PrimaryIndexColComma last clause_PrimaryIndexCol )$ )
	TABLESPACE $dataseg_SchemaIdx1$$RunSqlStmt$</GenRule>

	<GenRule ScopeDef="Table" GenDef="Index" Name="clause_CreatePrimaryIndex">
CREATE$switch IsUnique yes clause_Unique default empty$ INDEX $DbIndexName$ ON $lower DbSchemaName$.$DbTableName$ ($iterate Columns( each clause_PrimaryIndexColComma last clause_PrimaryIndexCol )$ )
	TABLESPACE $dataseg_SchemaIdx1$$RunSqlStmt$</GenRule>

	<GenRule ScopeDef="Index" GenDef="IndexCol" Name="clause_PrimaryIndexColComma">$clause_PrimaryIndexCol$,</GenRule>

	<GenRule ScopeDef="Index" GenDef="IndexCol" Name="clause_PrimaryIndexCol">
	$lower reference Column DbColumnName$</GenRule>

	<GenRule GenDef="Index" Name="clause_PrimaryKey">
ALTER TABLE $lower DbSchemaName$.$DbTableName$
	ADD CONSTRAINT pk_$lower DbIndexName$ PRIMARY KEY ($iterate Columns( each clause_PKeyColComma last clause_PKeyCol )$ )$RunSqlStmt$</GenRule>

	<GenRule ScopeDef="Index" GenDef="IndexCol" Name="clause_PKeyColComma">$clause_PKeyCol$,</GenRule>

	<GenRule ScopeDef="Index" GenDef="IndexCol" Name="clause_PKeyCol"> $lower reference Column DbColumnName$</GenRule>

	<GenRule ScopeDef="Table" GenDef="Atom" Name="clause_CreateColComma">$clause_CreateCol$,</GenRule>

	<GenRule ScopeDef="Table" GenDef="TableCol" Name="clause_CreateColComma">$clause_CreateCol$,</GenRule>

	<GenRule ScopeDef="Table" GenDef="Atom" Name="clause_CreateCol">
	$lower DbColumnName$	$clause_ColType$$switch IsNullable yes clause_Null default clause_NotNull$</GenRule>

	<GenRule ScopeDef="Table" GenDef="TableCol" Name="clause_CreateCol">
	$lower DbColumnName$	$reference DataType clause_ColType$$switch IsNullable yes clause_Null default clause_NotNull$</GenRule>

	<GenRule GenDef="Object" Name="clause_CreateColRevision">
	revision	INTEGER$clause_NotNull$</GenRule>

	<GenRule GenDef="Object" Name="clause_Null"> NULL</GenRule>

	<GenRule GenDef="Object" Name="clause_NotNull"> NOT NULL</GenRule>

	<GenRule GenDef="Object" Name="DbCheckConstraintName">chk_$lower popto Table DbTableName$$lower DbColumnName$</GenRule>

	<GenRule GenDef="TableCol" Name="DbCheckConstraintName">chk_$lower popto Table DbTableName$$lower DbColumnName$</GenRule>

	<GenRule GenDef="TableCol" Name="clause_ColType">$reference DataType clause_ColType$</GenRule>

	<GenRule GenDef="BlobDef" Name="clause_ColType">bytea</GenRule>

	<GenRule GenDef="BoolDef" Name="clause_ColType">boolean</GenRule>

	<GenRule GenDef="EnumDef" Name="clause_ColType">smallint</GenRule>

	<GenRule GenDef="Int16Def" Name="clause_ColType">smallint</GenRule>

	<GenRule GenDef="Int32Def" Name="clause_ColType">integer</GenRule>

	<GenRule GenDef="Int64Def" Name="clause_ColType">bigint</GenRule>

	<GenRule GenDef="UInt16Def" Name="clause_ColType">integer</GenRule>

	<GenRule GenDef="UInt32Def" Name="clause_ColType">bigint</GenRule>

	<GenRule GenDef="UInt64Def" Name="clause_ColType">numeric(22,0)</GenRule>

	<GenRule GenDef="FloatDef" Name="clause_ColType">real</GenRule>

	<GenRule GenDef="DoubleDef" Name="clause_ColType">double precision</GenRule>

	<GenRule GenDef="NumberDef" Name="clause_ColType">numeric($Digits$,$Precis$)</GenRule>

	<GenRule GenDef="StringDef" Name="clause_ColType">varchar($MaxLen$)</GenRule>

	<GenRule GenDef="TokenDef" Name="clause_ColType">varchar($MaxLen$)</GenRule>

	<GenRule GenDef="NmTokenDef" Name="clause_ColType">varchar($MaxLen$)</GenRule>

	<GenRule GenDef="NmTokensDef" Name="clause_ColType">varchar($MaxLen$)</GenRule>

	<GenRule GenDef="TextDef" Name="clause_ColType">text</GenRule>

	<GenRule GenDef="DateDef" Name="clause_ColType">date</GenRule>

	<GenRule GenDef="TimeDef" Name="clause_ColType">time</GenRule>

	<GenRule GenDef="TimestampDef" Name="clause_ColType">timestamp</GenRule>

	<GenRule GenDef="TZDateDef" Name="clause_ColType">timestamp</GenRule>

	<GenRule GenDef="TZTimeDef" Name="clause_ColType">timestamp</GenRule>

	<GenRule GenDef="TZTimestampDef" Name="clause_ColType">timestamp</GenRule>

	<GenRule GenDef="UuidDef" Name="clause_ColType">varchar(36)</GenRule>

	<GenRule GenDef="UuidGen" Name="clause_ColType">varchar(36)</GenRule>

</RuleSet>
