<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="pgsql"
	Name="schema/dbcreate/pgsql/crtype_dbtablenamerec.pgsql"
	Revision="2.13"
	Descr="null">

	<GenFile ScopeDef="SchemaDef" GenDef="Table" Name="dbadminfile_CreateDbTableNameRecType"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="dbcreate"
		BasePackageName="$lower SchemaName$"
		SubPackageName="pgsql"
		ExpansionClassName="$dbadminfilename_CreateDbTableNameRecType$"
		ExpansionKeyName="$dbadminfilename_CreateDbTableNameRecType$"
		ExpansionFileName="$dbadminfilename_CreateDbTableNameRecType$" >--
--	@(#) $GenPackageDir$/$GenFileName$
$MssDoubleDashScriptLicense$
create type $lower DbSchemaName$.$type_dbtablename_rec$ as (
$implPgSqlSpecTypeTableColumns$,
		revision integer );
</GenFile>

	<GenRule GenDef="Table" Name="implPgSqlSpecTypeTableColumns"
		>$switch HasSuperClassRelation yes implPgSqlSpecTypeSuperTable default implPgSqlSpecTypeBaseTable$</GenRule>

	<GenRule GenDef="Table" Name="implPgSqlSpecTypeSuperTable"
		>$reference SuperClassRelation reference ToTable implPgSqlSpecTypeTableColumns$$iterate Columns( each implPgSqlSpecTypeFragCommaDataColumn )$</GenRule>

	<GenRule GenDef="Value" Name="implPgSqlSpecTypeFragCommaDataColumn"
		>$switch ColumnInPrimaryIndex yes empty default implPgSqlTableColumnSpecTypeFragCommaColumn$</GenRule>

	<GenRule GenDef="Table" Name="implPgSqlSpecTypeBaseTable"
		>$switch IsBaseTable yes implPgSqlSpecTypeBaseTableWithCC default implPgSqlSpecTypeBaseTableNoCC$</GenRule>

	<GenRule GenDef="Table" Name="implPgSqlSpecTypeBaseTableWithCC"
>		ClassCode varchar$switch HasAuditColumns yes implPgSqlSpecTypeCommaAuditColumns default empty$$iterate Columns( each implPgSqlTableColumnSpecTypeFragCommaColumn )$</GenRule>

	<GenRule GenDef="Table" Name="implPgSqlSpecTypeBaseTableNoCC"
>		$switch HasAuditColumns yes implPgSqlSpecTypeNoCCAuditColumns default implPgSqlSpecTypeNoCCNoAuditColumns$</GenRule>

	<GenRule GenDef="Table" Name="implPgSqlSpecTypeNoCCNoAuditColumns">$iterate Columns( first implPgSqlTableColumnSpecTypeFragDbName each implPgSqlTableColumnSpecTypeFragCommaColumn )$</GenRule>

	<GenRule GenDef="Table" Name="implPgSqlSpecTypeNoCCAuditColumns"
		>createdby varchar,
		createdat text,
		updatedby varchar,
		updatedat text$iterate Columns( each implPgSqlTableColumnSpecTypeFragCommaColumn )$</GenRule>

	<GenRule GenDef="Table" Name="implPgSqlSpecTypeCommaAuditColumns">,
		createdby varchar,
		createdat text,
		updatedby varchar,
		updatedat text</GenRule>

	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragCommaColumn">,
		$implPgSqlTableColumnSpecTypeFragDbName$</GenRule>

	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameBlob"
		>$lower DbColumnName$ bytea</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameBool"
		>$lower DbColumnName$ boolean</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameEnum"
		>$lower DbColumnName$ smallint</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameInt16"
		>$lower DbColumnName$ smallint</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameInt32"
		>$lower DbColumnName$ integer</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameInt64"
		>$lower DbColumnName$ bigint</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameUInt16"
		>$lower DbColumnName$ integer</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameUInt32"
		>$lower DbColumnName$ bigint</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameUInt64"
		>$lower DbColumnName$ text</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameFloat"
		>$lower DbColumnName$ real</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameDouble"
		>$lower DbColumnName$ double precision</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameNumber"
		>$lower DbColumnName$ text</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameString"
		>$lower DbColumnName$ varchar</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameToken"
		>$lower DbColumnName$ varchar</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameNmToken"
		>$lower DbColumnName$ varchar</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameNmTokens"
		>$lower DbColumnName$ varchar</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameText"
		>$lower DbColumnName$ text</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameDate"
		>$lower DbColumnName$ text</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameTime"
		>$lower DbColumnName$ text</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameTimestamp"
		>$lower DbColumnName$ text</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameTZDate"
		>$lower DbColumnName$ text</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameTZTime"
		>$lower DbColumnName$ text</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameTZTimestamp"
		>$lower DbColumnName$ text</GenRule>
	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbNameUuid"
		>$lower DbColumnName$ varchar</GenRule>

	<GenRule GenDef="Object" Name="implPgSqlTableColumnSpecTypeFragDbName"
>$switch BaseModelAtomClass
			BlobDef implPgSqlTableColumnSpecTypeFragDbNameBlob
			BoolDef implPgSqlTableColumnSpecTypeFragDbNameBool
			EnumDef implPgSqlTableColumnSpecTypeFragDbNameEnum
			Int16Def implPgSqlTableColumnSpecTypeFragDbNameInt16
			Int32Def implPgSqlTableColumnSpecTypeFragDbNameInt32
			Int64Def implPgSqlTableColumnSpecTypeFragDbNameInt64
			UInt16Def implPgSqlTableColumnSpecTypeFragDbNameUInt16
			UInt32Def implPgSqlTableColumnSpecTypeFragDbNameUInt32
			UInt64Def implPgSqlTableColumnSpecTypeFragDbNameUInt64
			Id16Gen implPgSqlTableColumnSpecTypeFragDbNameInt16
			Id32Gen implPgSqlTableColumnSpecTypeFragDbNameInt32
			Id64Gen implPgSqlTableColumnSpecTypeFragDbNameInt64
			FloatDef implPgSqlTableColumnSpecTypeFragDbNameFloat
			DoubleDef implPgSqlTableColumnSpecTypeFragDbNameDouble
			NumberDef implPgSqlTableColumnSpecTypeFragDbNameNumber
			StringDef implPgSqlTableColumnSpecTypeFragDbNameString
			TokenDef implPgSqlTableColumnSpecTypeFragDbNameToken
			NmTokenDef implPgSqlTableColumnSpecTypeFragDbNameNmToken
			NmTokensDef implPgSqlTableColumnSpecTypeFragDbNameNmTokens
			TextDef implPgSqlTableColumnSpecTypeFragDbNameText
			DateDef implPgSqlTableColumnSpecTypeFragDbNameDate
			TimeDef implPgSqlTableColumnSpecTypeFragDbNameTime
			TimestampDef implPgSqlTableColumnSpecTypeFragDbNameTimestamp
			TZDateDef implPgSqlTableColumnSpecTypeFragDbNameTZDate
			TZTimeDef implPgSqlTableColumnSpecTypeFragDbNameTZTime
			TZTimestampDef implPgSqlTableColumnSpecTypeFragDbNameTZTimestamp
			UuidDef implPgSqlTableColumnSpecTypeFragDbNameUuid
			UuidGen implPgSqlTableColumnSpecTypeFragDbNameUuid
			default empty$</GenRule>

</RuleSet>
