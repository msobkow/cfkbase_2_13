<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="pgsql"
	Name="schema/dbcreate/pgsql/CommandParse"
	Revision="2.13"
	Descr="null">

	<GenRule GenDef="Object" Name="parsePgSqlArgs">
#
#	Initialize locals
#
pgdb=""
pghost=""
pgport=""
pgpwd=""
pgsrv=""
pguser=""
logfilename=""
parmerrors=""
TK_DUALCASE_IN_CASE_STATEMENTS=true

#
#	Parse the command line options
#
while [ -n "$$1" ]
do
	case "$$1" in

		-d)
			shift
			pgdb=$$1
			shift
			;;

		-L)
			shift
			logfilename=$$1
			shift
			;;

		-H)
			shift
			pghost=$$1
			shift
			;;

		-p)
			shift
			pgport=$$1
			shift
			;;

		-P)
			shift
			pgpwd=$$1
			shift
			;;

		-S)
			shift
			pgsrv=$$1
			shift
			;;

		-U)
			shift
			pguser=$$1
			shift
			;;

		*)
			echo &gt;&amp;2 "ERROR: Option $$1 not recognized."
			parmerrors="Y"
			shift
			;;
	esac
done
</GenRule>

	<GenRule GenDef="Object" Name="validatePgSqlArgs">
#
#	Validate parameters
#

if [ "$${pguser}" = "" ]; then
	echo &gt;&amp;2 "ERROR: User must be specified with '-U username'"
	parmerrors="Y"
fi

if [ "$${pgpwd}" = "" ]; then
	echo &gt;&amp;2 "ERROR: Password must be specified with '-P password'"
	parmerrors="Y"
fi

if [ "$${pghost}" = "" ]; then
	echo &gt;&amp;2 "ERROR: Server host name must be specified with '-H hostname'"
	parmerrors="Y"
fi

if [ "$${pgdb}" = "" ]; then
	echo &gt;&amp;2 "ERROR: Database name must be specified with '-d dbname'"
	parmerrors="Y"
fi

if [ "$${parmerrors}" != "" ]; then
	echo &gt;&amp;2 "ABORT: Cannot continue"
	exit 1
fi

if [ "$${logfilename}" = "" ]; then
	logfilename=`date +'$GenFileBaseName$-%Y%m%d_%Hh%M.log'`
	echo "" &gt;$$logfilename
fi

export PGPASSWORD="$${pgpwd}"

if [ "$${pgport}" != "" ]; then
	export PGPORT="--port=$${pgport} "
	export PASSPGPORT="-p $${pgport} "
else
	export PGPORT=""
	export PASSPGPORT=""
fi
</GenRule>

	<GenRule GenDef="Object" Name="parsePgSqlArgsBat">
REM
REM	Initialize locals
REM
SET pgdb=""
SET pghost=""
SET pgpwd=""
SET pgsrv=""
SET pguser=""
SET logfilename=$GenFileBaseName$.log
IF NOT "%1" == "" SET pghost=%1
IF NOT "%2" == "" SET pgdb=%2
IF NOT "%3" == "" SET pguser=%3
IF NOT "%4" == "" SET pgpwd=%4
IF NOT "%5" == "" SET logfilename=%5
SET TK_DUALCASE_IN_CASE_STATEMENTS=true
</GenRule>

	<GenRule GenDef="Object" Name="validatePgSqlArgsBat">
REM
REM	Validate parameters
REM

IF "%pguser%" == "" (
	ECHO "ERROR: User must be specified as argument 3'"
	PAUSE
	EXIT
)

IF "%pgpwd%" == "" (
	ECHO "ERROR: Password must be specified as argument 4'"
	PAUSE
	EXIT
)

IF "%pghost%" == "" (
	ECHO "ERROR: Server host name must be specified as argument 1'"
	PAUSE
	EXIT
)

IF "%pgdb%" == "" (
	ECHO "ERROR: Database name must be specified as argument 2'"
	PAUSE
	EXIT
)

SET PGPASSWORD=%pgpwd%
</GenRule>

</RuleSet>
