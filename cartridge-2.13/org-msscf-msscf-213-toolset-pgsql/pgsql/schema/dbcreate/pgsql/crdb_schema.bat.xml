<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="pgsql"
	Name="schema/dbcreate/pgsql/crdb_schema.bat"
	Revision="2.13"
	Descr="null">

	<GenFile GenDef="SchemaDef" Name="dbadminfile_CreateDatabaseBat"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="dbcreate"
		BasePackageName="$lower SchemaName$"
		SubPackageName="pgsql"
		ExpansionClassName="crdb_$lower DbSchemaName$_bat"
		ExpansionKeyName="crdb_$lower DbSchemaName$_bat"
		ExpansionFileName="$dbadminfilename_CreateDatabaseBat$">@ECHO off
REM
REM	@(#) $GenPackageDir$/$GenFileName$
$MssBatScriptLicense$
$CrDbSchemaBashInitLocalsBat$
$CrDbSchemaBashValidateParametersBat$
$CrDbSchemaBashCreateTablespacesBat$
$CrDbSchemaBashCreateInstanceBat$</GenFile>

	<GenRule GenDef="SchemaDef" Name="CrDbSchemaBashInitLocalsBat"
>REM
REM	Initialize locals
REM
SET pghost=""
SET pgpwd=""
SET pgsrv=""
SET pguser=""
SET logfilename=$GenFileBaseName$.log
SET pgdatadir=""
IF NOT "%1" == "" SET pghost=%1
IF NOT "%2" == "" SET pguser=%2
IF NOT "%3" == "" SET pgpwd=%3
IF NOT "%4" == "" SET pgdatadir=%4
SET TK_DUALCASE_IN_CASE_STATEMENTS=true
</GenRule>

	<GenRule GenDef="SchemaDef" Name="CrDbSchemaBashValidateParametersBat">
REM
REM	Validate parameters
REM

IF "%pguser%" == "" (
	ECHO "ERROR: User must be specified as argument 2"
	PAUSE
	EXIT
)

IF "%pgpwd%" == "" (
	ECHO "ERROR: Password must be specified as argument 3"
	PAUSE
	EXIT
)

IF "%pghost%" == "" (
	ECHO "ERROR: Server host name must be specified as argument 1"
	PAUSE
	EXIT
)

SET PGPASSWORD=%pgpwd%

IF "%pgdatadir%" == "" (
	ECHO "WARNING: Database data directory was not specified as argument 4, tablespaces will not be created"
)

ECHO REM &gt;%logfilename%
</GenRule>

	<GenRule GenDef="SchemaDef" Name="CrDbSchemaBashCreateTablespacesBat">
REM
REM	Create the tablespaces
REM

IF NOT "%pgdatadir%" == "" (

	ECHO Creating tablespace directories &gt;&gt; %logfilename%

	mkdir %pgdatadir%
	mkdir %pgdatadir%\\$lower DbSchemaName$_data1
	mkdir %pgdatadir%\\$lower DbSchemaName$_idx1

	ECHO &gt;&gt; %logfilename%
	ECHO Creating tablespaces $lower DbSchemaName$_data1, $lower DbSchemaName$_idx1
	ECHO Creating tablespaces $lower DbSchemaName$_data1, $lower DbSchemaName$_idx1 &gt;&gt; %logfilename%
	psql -h %pghost% -d template1 -U %pguser% -a -e -c "create tablespace $lower DbSchemaName$_data1 location '%pgdatadir%/$lower DbSchemaName$_data1'" &gt;&gt;%logfilename% 2&gt;&amp;1

	psql -h %pghost% -d template1 -U %pguser% -a -e -c "create tablespace $lower DbSchemaName$_idx1 location '%pgdatadir%/$lower DbSchemaName$_idx1'" &gt;&gt;%logfilename% 2&gt;&amp;1

)
</GenRule>

	<GenRule GenDef="SchemaDef" Name="CrDbSchemaBashCreateInstanceBat">
REM 
REM Create the database instance
REM 
ECHO Recreating database $lower DbSchemaName$ ...
ECHO Recreating database $lower DbSchemaName$ ... &gt;&gt; %logfilename%

ECHO  &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%
ECHO REM Drop database $lower DbSchemaName$ &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%

psql -h %pghost% -d template1 -U %pguser% -a -e -c "drop database $lower DbSchemaName$" &gt;&gt;%logfilename% 2&gt;&amp;1

ECHO  &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%
ECHO REM Create database $lower DbSchemaName$ &gt;&gt;%logfilename%
ECHO REM &gt;&gt;%logfilename%

psql -h %pghost% -d template1 -U %pguser% -a -e -c "create database $lower DbSchemaName$ tablespace $lower DbSchemaName$_data1" &gt;&gt;%logfilename% 2&gt;&amp;1

CALL $dbadminfilename_CreateSchemaBat$ %pghost% $lower DbSchemaName$ %pguser% %pgpwd% %logfilename%
</GenRule>

</RuleSet>
