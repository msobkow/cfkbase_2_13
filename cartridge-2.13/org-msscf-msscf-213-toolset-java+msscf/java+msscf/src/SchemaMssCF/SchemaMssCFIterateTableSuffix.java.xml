<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="java+msscf"
	Name="src/SchemaMssCF/SchemaMssCFIterateTableSuffix.java"
	Revision="2.13"
	Descr="Java 11 SchemaMssCFIterateTableSuffix">

	<GenFile GenDef="Relation" Name="fileSchemaMssCFIterateTableSuffixJava"
			GenerateOnce="false"
			ModuleName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$MssCF"
		SourceBundle="java"
		BasePackageName="$reference ManufacturingSchema lower PackageName$msscf.src"
		SubPackageName="$reference ManufacturingSchema lower JavaPackage$.$reference ManufacturingSchema SchemaName$MssCF"
		ExpansionClassName="$SchemaName$MssCFIterate$popto Table TableName$$Suffix$Java"
		ExpansionKeyName="$SchemaName$MssCFIterate$popto Table TableName$$Suffix$Java"
		ExpansionFileName="$SchemaName$MssCFIterate$popto Table TableName$$Suffix$.java">
// Description: Java 11 MssCF Iterator for $popto Table TableName$ Relationship $Suffix$.

$MssSourceLicense$

package $reference ManufacturingSchema lower JavaPackage$.$SchemaName$MssCF;

import java.io.*;
import java.lang.reflect.*;
import java.net.*;
import java.sql.*;
import java.rmi.*;
import java.text.*;
import java.util.*;
import org.msscf.msscf.cflib.CFLib.*;
import org.msscf.msscf.cfcore.MssCF.*;$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaName empty empty )$$poptop SchemaDef importJavaPackageSchemaName$$poptop SchemaDef importJavaPackageSchemaNameObj$$poptop SchemaDef iterate SchemaRefs( each importJavaPackageSchemaNameObj empty empty )$
import org.msscf.msscf.cfcore.CFGenKb.*;
import org.msscf.msscf.cfcore.CFGenKbObj.*;

/**
 *	$SchemaName$MssCFIterate$popto Table TableName$$Suffix$ binds $popto Table TableName$.$Suffix$
 *	as an instance of MssCFGenIteratorObj.
 */
public class $SchemaName$MssCFIterate$popto Table TableName$$Suffix$
	extends MssCFGenIteratorObj
{
	private static final long serialVersionUID = 1L;

	public $SchemaName$MssCFIterate$popto Table TableName$$Suffix$() {
		super();
	}

	public $SchemaName$MssCFIterate$popto Table TableName$$Suffix$( MssCFEngine argEngine ) {
		super( argEngine,
			"any",
			null,
			"$popto Table Name$",
			"$Suffix$",
			"$reference ToTable Name$" );
	}
$implSchemaIterateTableSuffixEnumerateDetails$}
</GenFile>

	<GenRule GenDef="Relation" Name="implSchemaIterateTableSuffixEnumerateDetails">
	public ListIterator&lt;ICFLibAnyObj&gt; enumerateDetails( MssCFGenContext genContext ) {
		final String S_ProcName = "$SchemaName$MssCFIterate$popto Table Name$$Suffix$.enumerateDetails() ";

		if( genContext == null ) {
			throw new CFLibNullArgumentException( getClass(),
				S_ProcName,
				1,
				"genContext" );
		}

		ICFLibAnyObj genDef = genContext.getGenDef();
		if( genDef == null ) {
			throw new CFLibNullArgumentException( getClass(),
				S_ProcName,
				1,
				"genContext.getGenDef()" );
		}

		List&lt;ICFLibAnyObj&gt; list = new LinkedList&lt;ICFLibAnyObj&gt;();

		if( genDef instanceof I$popto Table SchemaName$$popto Table Name$Obj ) {
			Iterator&lt;I$reference ToTable DefSchemaName$$reference ToTable Name$Obj&gt; elements = ((I$popto Table SchemaName$$popto Table Name$Obj)genDef).get$OptionalOrRequired$$RelationTypeTag$$Suffix$().iterator();
			while( elements.hasNext() ) {
				list.add( elements.next() );
			}
		}
		else {
			throw new CFLibUnsupportedClassException( getClass(),
				S_ProcName,
				"genContext.getGenDef()",
				genDef,
				"I$reference ToTable SchemaName$$popto Table TableName$Obj" );
		}

		return( list.listIterator() );
	}</GenRule>

</RuleSet>
