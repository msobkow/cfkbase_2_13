<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="mysql"
	Name="schema/dbcreate/mysql/crsp_bootstrap.mysql"
	Revision="2.13"
	Descr="null">

	<GenFile GenDef="SchemaDef" Name="dbadminfile_CreateSPBootstrap"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="dbcreate"
		BasePackageName="$lower SchemaName$"
		SubPackageName="mysql"
		ExpansionClassName="$dbadminfilename_CreateSPBootstrap$"
		ExpansionKeyName="$dbadminfilename_CreateSPBootstrap$"
		ExpansionFileName="$dbadminfilename_CreateSPBootstrap$" >--
--	@(#) $GenPackageDir$/$GenFileName$
$MssDoubleDashScriptLicense$
delimiter ////
create function $lower DbSchemaName$.$sp_bootstrap$()
returns boolean
modifies sql data
not deterministic
begin
	declare curtime timestamp;
	declare clusid bigint;
	declare retval boolean default true;
	select now() into curtime;$CrSPBootstrap_AuditActionCreated$$CrSPBootstrap_AuditActionUpdated$$CrSPBootstrap_AuditActionDeleted$$CrSPBootstrap_SecUser$$CrSPBootstrap_Clus$$CrSPBootstrap_Tenant$$CrSPBootstrap_SecSess$$CrSPBootstrap_UserHist$$CrSPBootstrap_ClusHist$$CrSPBootstrap_TenantHist$
	return retval;
end;////
select $lower DbSchemaName$.$sp_bootstrap$();////
drop function $lower DbSchemaName$.$sp_bootstrap$;////
</GenFile>

	<GenRule GenDef="SchemaDef" Name="CrSPBootstrap_AuditActionCreated"></GenRule>

	<GenRule GenDef="SchemaDef" Name="CrSPBootstrap_AuditActionUpdated"></GenRule>

	<GenRule GenDef="SchemaDef" Name="CrSPBootstrap_AuditActionDeleted"></GenRule>

	<GenRule GenDef="SchemaDef" Name="CrSPBootstrap_SecUser">
	insert into $lower DbSchemaName$.SecUser (
		createdat,
		createdby,
		updatedat,
		updatedby,
		secuserid,
		login_id,
		email_addr,
		pwd_hash,
		revision )
	values (
		curtime,
		'654dbba0-eda7-11e1-aff1-0800200c9a66',
		curtime,
		'654dbba0-eda7-11e1-aff1-0800200c9a66',
		'654dbba0-eda7-11e1-aff1-0800200c9a66',
		'system',
		'root',
		'bootstrap',
		1 );</GenRule>

	<GenRule GenDef="SchemaDef" Name="CrSPBootstrap_Clus">
	insert into $lower DbSchemaName$.clus (
		createdat,
		createdby,
		updatedat,
		updatedby,
		id,
		fulldomainname,
		description,
		revision )
	values (
		curtime,
		'654dbba0-eda7-11e1-aff1-0800200c9a66',
		curtime,
		'654dbba0-eda7-11e1-aff1-0800200c9a66',
		$lower DbSchemaName$.sp_next_clusteridgen(),
		'system',
		'system',
		1 );
	select clus.id
	into clusid
	from $lower DbSchemaName$.clus
	where fulldomainname = 'system';</GenRule>

	<GenRule GenDef="SchemaDef" Name="CrSPBootstrap_Tenant">
	insert into $lower DbSchemaName$.tenant (
		createdat,
		createdby,
		updatedat,
		updatedby,
		clusterid,
		id,
		tenantname,
		revision )
	select
		curtime,
		'654dbba0-eda7-11e1-aff1-0800200c9a66',
		curtime,
		'654dbba0-eda7-11e1-aff1-0800200c9a66',
		clus.id,
		$lower DbSchemaName$.sp_next_tenantidgen(),
		'system',
		1
	from $lower DbSchemaName$.clus as clus
	where
		clus.fulldomainname = 'system';</GenRule>

	<GenRule GenDef="SchemaDef" Name="CrSPBootstrap_SecSess">
	insert into $lower DbSchemaName$.SecSess(
		secsessionid,
		secuserid,
		start_ts,
		finish_ts,
		revision )
	values (
		'cb56d150-ea1a-11e2-91e2-0800200c9a66',
		'654dbba0-eda7-11e1-aff1-0800200c9a66',
		curtime,
		curtime,
		1 );</GenRule>

	<GenRule GenDef="SchemaDef" Name="CrSPBootstrap_UserHist">
	insert into $lower DbSchemaName$.SecUser_h (
		secuserid,
		auditclusterid,
		auditsessionid,
		auditaction,
		auditstamp,
		login_id,
		email_addr,
		pwd_hash,
		revision )
	select
		susr.secuserid,
		clusid,
		'cb56d150-ea1a-11e2-91e2-0800200c9a66',
		1,
		curtime,
		susr.login_id,
		susr.email_addr,
		susr.pwd_hash,
		susr.revision
	from
		$lower DbSchemaName$.SecUser as susr
		where login_id = 'system';</GenRule>

	<GenRule GenDef="SchemaDef" Name="CrSPBootstrap_ClusHist">
	insert into $lower DbSchemaName$.clus_h (
		id,
		auditclusterid,
		auditsessionid,
		auditaction,
		auditstamp,
		fulldomainname,
		description,
		revision )
	select
		clus.id,
		clusid,
		'cb56d150-ea1a-11e2-91e2-0800200c9a66',
		0,
		curtime,
		clus.fulldomainname,
		clus.description,
		clus.revision
	from $lower DbSchemaName$.clus as clus
	where
		clus.fulldomainname = 'system';</GenRule>

	<GenRule GenDef="SchemaDef" Name="CrSPBootstrap_TenantHist">
	insert into $lower DbSchemaName$.tenant_h (
		clusterid,
		id,
		auditclusterid,
		auditsessionid,
		auditaction,
		auditstamp,
		tenantname,
		revision )
	select
		tent.clusterid,
		tent.id,
		clusid,
		'cb56d150-ea1a-11e2-91e2-0800200c9a66',
		0,
		curtime,
		tent.tenantname,
		tent.revision
	from $lower DbSchemaName$.tenant as tent
	where
		tent.clusterid = clusid
		and tent.tenantname = 'system';</GenRule>

</RuleSet>
