<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="mysql"
	Name="schema/dbcreate/mysql/crsp_read_dbtablename_all.mysql"
	Revision="2.13"
	Descr="null">

	<GenFile ScopeDef="SchemaDef" GenDef="Table" Name="dbadminfile_CreateSPReadDbTableNameAll"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="dbcreate"
		BasePackageName="$lower SchemaName$"
		SubPackageName="mysql"
		ExpansionClassName="$dbadminfilename_CreateSPReadDbTableNameAll$"
		ExpansionKeyName="$dbadminfilename_CreateSPReadDbTableNameAll$"
		ExpansionFileName="$dbadminfilename_CreateSPReadDbTableNameAll$">--
--	@(#) $GenPackageDir$/$GenFileName$
$MssDoubleDashScriptLicense$
delimiter ////
create procedure $lower DbSchemaName$.$sp_read_dbtablename_all$($implMySqlSPStandardArgs$ )
not deterministic
reads sql data
begin
	declare done boolean default false;$switch SecScope None empty System empty Cluster implMySqlSPReadTableDeclPermFlag Tenant implMySqlSPReadTableDeclPermFlag default error$
	declare continue handler for not found set done = true;$switch TableName Cluster empty Tenant empty SecUser empty default implMySqlSPReadEnforceSec$$switch SecScope None implMySqlSPReadTableRetSelectNormal System implMySqlSPReadTableRetSelectNormal Cluster implMySqlSPReadTableRetSelectRestrictCluster Tenant implMySqlSPReadTableRetSelectRestrictTenant default error$
end;////
</GenFile>

	<GenRule GenDef="Table" Name="implMySqlSPReadTableRetSelectNormal">
	select
$poptop Table implMySqlSelectTableColumns$,
			$poptop Table lower reference BaseClass ClassCode$.revision as revision
	from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ as $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implMySqlClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQuery default empty$$implSPReadTableOrderByDescendingPKey$;</GenRule>

	<GenRule GenDef="Index" Name="implSPReadTableOrderByDescendingPKey"
		>$reference Table implSPReadTableOrderByDescendingPKey$</GenRule>

	<GenRule GenDef="Table" Name="implSPReadTableOrderByDescendingPKey"
		>$reference BaseClass reference PrimaryKeyIndex iterate Columns( first implSPReadTableOrderEmitOrderByColumn each implSPReadTableOrderCommaByColumn )$</GenRule>

	<GenRule GenDef="IndexCol" Name="implSPReadTableOrderEmitOrderByColumn">
		order by $implSPReadTableOrderByColumn$</GenRule>

	<GenRule GenDef="IndexCol" Name="implSPReadTableOrderCommaByColumn">,
			$implSPReadTableOrderByColumn$</GenRule>

	<GenRule GenDef="IndexCol" Name="implSPReadTableOrderByColumn"
		><!--reference Index reference Table lower ClassCode.-->$reference Column DbColumnName$ desc</GenRule>

	<GenRule GenDef="Table" Name="implMySqlSPReadTableRetSelectRestrictCluster">
	if( isSystemUser )
	then
		select
$poptop Table implMySqlSelectTableColumns$,
			$poptop Table lower reference BaseClass ClassCode$.revision as revision
		from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ as $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implMySqlClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQuery default empty$$implSPReadTableOrderByDescendingPKey$;
	else
		select
$poptop Table implMySqlSelectTableColumns$,
			$poptop Table lower reference BaseClass ClassCode$.revision as revision
		from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ as $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implMySqlClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQuery default empty$$switch TableInClassHierarchy yes implMySqlSPReadTableRetSelectAndRestrictCluster default implMySqlSPReadTableRetSelectWhereRestrictCluster$$implSPReadTableOrderByDescendingPKey$;
	end if;</GenRule>

	<GenRule GenDef="Table" Name="implMySqlSPReadTableRetSelectAndRestrictCluster">
			and $lower reference ClusterIdColumn reference Table ClassCode$.$reference ClusterIdColumn DbColumnName$ = secClusterId</GenRule>

	<GenRule GenDef="Table" Name="implMySqlSPReadTableRetSelectWhereRestrictCluster">
		where
			$lower reference ClusterIdColumn reference Table ClassCode$.$reference ClusterIdColumn DbColumnName$ = secClusterId</GenRule>

	<GenRule GenDef="Table" Name="implMySqlSPReadTableRetSelectRestrictTenant">
	if( isSystemUser )
	then
		select
$poptop Table implMySqlSelectTableColumns$,
			$poptop Table lower reference BaseClass ClassCode$.revision as revision
		from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ as $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implMySqlClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQuery default empty$$implSPReadTableOrderByDescendingPKey$;
	else
		select
$poptop Table implMySqlSelectTableColumns$,
			$poptop Table lower reference BaseClass ClassCode$.revision as revision
		from $poptop Table lower DbSchemaName$.$poptop Table DbTableName$ as $poptop Table lower ClassCode$$poptop Table switch HasSuperClassRelation yes implMySqlClassCodeJoinSuperTable default empty$$switch TableInClassHierarchy yes restrictReadAllQuery default empty$$switch TableInClassHierarchy yes implMySqlSPReadTableRetSelectAndRestrictTenant default implMySqlSPReadTableRetSelectWhereRestrictTenant$$implSPReadTableOrderByDescendingPKey$;
	end if;</GenRule>

	<GenRule GenDef="Table" Name="implMySqlSPReadTableRetSelectAndRestrictTenant">
			and $lower reference TenantIdColumn reference Table ClassCode$.$reference TenantIdColumn DbColumnName$ = secTenantId</GenRule>

	<GenRule GenDef="Table" Name="implMySqlSPReadTableRetSelectWhereRestrictTenant">
		where
			$lower reference TenantIdColumn reference Table ClassCode$.$reference TenantIdColumn DbColumnName$ = secTenantId</GenRule>

	<GenRule GenDef="Object" Name="implMySqlSPReadTableDeclPermFlag">
	declare permissionFlag boolean;
	declare isSystemUser boolean;</GenRule>

	<GenRule GenDef="Object" Name="implMySqlSPReadTableArgSecClusterId">,
	secClusterId bigint</GenRule>

	<GenRule GenDef="Object" Name="implMySqlSPReadTableArgSecTenantId">,
	secTenantId bigint</GenRule>

	<GenRule GenDef="Index" Name="implMySqlSPReadTableCheckCluster"
		>$reference Table implMySqlSPReadTableCheckCluster$</GenRule>

	<GenRule GenDef="Index" Name="implMySqlSPReadTableCheckTenant"
		>$reference Table implMySqlSPReadTableCheckTenant$</GenRule>

	<GenRule GenDef="Table" Name="implMySqlSPReadTableCheckCluster">
	select $lower DbSchemaName$.sp_is_cluster_user( secClusterId,
			'Read$Name$',
			argAuditUserId ),
		$lower DbSchemaName$.sp_is_system_user( argAuditUserId )
	into permissionFlag, isSystemUser;
	if( permissionFlag = false )
	then
		signal sqlstate '45002'
		set message_text = '$poptop Table sp_read_dbtablename$() Permission denied for Read$TableName$ access for current Cluster',
			schema_name = '$lower DbSchemaName$',
			table_name = '$poptop Table DbTableName$';
	end if;</GenRule>

	<GenRule GenDef="Table" Name="implMySqlSPReadTableCheckTenant">
	select $lower DbSchemaName$.sp_is_tenant_user( secTenantId,
			'Read$Name$',
			argAuditUserId ),
		$lower DbSchemaName$.sp_is_system_user( argAuditUserId )
	into permissionFlag, isSystemUser;
	if( permissionFlag = false )
	then
		signal sqlstate '45003'
		set message_text = '$poptop Table sp_read_dbtablename$() Permission denied for Read$TableName$ access for current Tenant',
			schema_name = '$lower DbSchemaName$',
			table_name = '$poptop Table DbTableName$';
	end if;</GenRule>

	<GenRule GenDef="Table" Name="restrictReadAllQuery"
		>$switch HasSuperClassRelation yes restrictReadQueryByClassCode default restrictBaseReadQueryByClassCode$</GenRule>

	<GenRule GenDef="Table" Name="restrictBaseReadQueryByClassCode"
		>$switch IsBaseTable yes restrictReadQueryByClassCode default empty$</GenRule>

	<GenRule GenDef="Table" Name="TableInClassHierarchy"
		>$reference BaseClass IsBaseTable$</GenRule>

	<GenRule GenDef="Table" Name="restrictReadQueryByClassCode">
	where
		$lower reference BaseClass ClassCode$.ClassCode = '$poptop Table ClassCode$'</GenRule>

</RuleSet>
