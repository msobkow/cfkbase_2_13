<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	MSS Code Factory 2.13 Knowledge Base
 *
 *	Copyright (c) 2020 Mark Stephen Sobkow
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed under Mark Stephen
 *	Sobkow's Proprietary Data License, Version 1.0.
 *
 *	MSS Code Factory 2.13 Knowledge Base is proprietary code and is only available
 *	for production and distribution builds and environments for use in running the
 *	MSS Code Factory executables delivered.  Only registered .edu organizations may
 *	modify, extend, or refactor this knowledge base for research or courseware use.
 *
 *	The code produced by MSS Code Factory or an educational derivative thereof under
 *	an educational authorization may not be used to produced any software that is to
 *	be used for anything but research and couseware use.  You may not use an
 *	educational authorization to produce code for any business or publice use
 *	without a commercial license.
 *
 *	You may install one copy of MSS Code Factory 2.13 Knowledge Base per installation
 *	of MSS Code Factory.  You may not redistribute this data software in any form
 *	without a commercial or educational authorization license.
 *
 *	MSS Code Factory 2.13 Knowledge Base is published so that you may study it for
 *	academic purposes, perform security verification reviews, and run the MSS Code
 *	Factory tool itself.
 *
 *	Any use of a modified or extended version of MSS Code Factory 2.13 Knowledge
 *	Base in a production environment, or use of code produced by applying such
 *	a version without a commercial license from Mark Stephen Sobkow is strictly
 *	forbidden.
 *
 *	MSS Code Factory 2.13 Knowledge Base is distributed in the hope that it will
 *	be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	Donations to support MSS Code Factory 2.13 Knowledge Base can be made at
 *	https://www.paypal.com/paypalme2/MarkSobkow
 *
 *	Please contact Mark Stephen Sobkow at mark.sobkow@gmail.com for commercial licensing.
 * -->
<RuleSet
	xmlns="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="uri://org.msscf/msscf/2.0.13/cfgenkb-2.13-ruleset file:/opt/msscf/2.0.13/xsd/cfgenkb-2.13-ruleset.xsd"
	ToolSet="mysql"
	Name="schema/dbcreate/mysql/crsp_is_cluster_user.mysql"
	Revision="2.13"
	Descr="null">

	<GenFile GenDef="SchemaDef" Name="dbadminfile_CreateSPIsClusterUser"
			GenerateOnce="false"
			ModuleName=""
		SourceBundle="dbcreate"
		BasePackageName="$lower SchemaName$"
		SubPackageName="mysql"
		ExpansionClassName="$dbadminfilename_CreateSPIsClusterUser$"
		ExpansionKeyName="$dbadminfilename_CreateSPIsClusterUser$"
		ExpansionFileName="$dbadminfilename_CreateSPIsClusterUser$" >--
--	@(#) $GenPackageDir$/$GenFileName$
$MssDoubleDashScriptLicense$
delimiter ////
create function $lower DbSchemaName$.$sp_is_cluster_user$(
	argClusterId bigint,
	argSecGroupName varchar(64),
	argSecUserId varchar(36) )
returns boolean
not deterministic
begin
	declare retval boolean;
	declare varSecUserId varchar(36);
	declare done boolean default false;
	declare cur1 cursor for $CreateSPIsClusterUserPart1$$CreateSPIsClusterUserPart2$$CreateSPIsClusterUserPart3$$CreateSPIsClusterUserPart4$$CreateSPIsClusterUserPart5$;
	declare cur2 cursor for $CreateSPIsClusterUserPart6$$CreateSPIsClusterUserPart7$$CreateSPIsClusterUserPart8$$CreateSPIsClusterUserPart9$;
	declare continue handler for not found set done = true;$CreateSPIsClusterUserInit$
	open cur1;
	read_loop: loop
		fetch cur1 into varSecUserId;
		if done then
			leave read_loop;
		end if;
		select true into retval;
		leave read_loop;
	end loop;
	close cur1;$CreateSPIsClusterUserLoop2$
	return retval;
end;////
</GenFile>

	<GenRule GenDef="SchemaDef" Name="CreateSPIsClusterUserLoop2">
	if not retval
	then
		select false into done;
		open cur2;
		read_loop2: loop
			fetch cur2 into varSecUserId;
			if done then
				leave read_loop2;
			end if;
			select true into retval;
			leave read_loop2;
		end loop;
		close cur2;
	end if;</GenRule>

	<GenRule GenDef="SchemaDef" Name="CreateSPIsClusterUserInit">
	select false into retval;</GenRule>

	<GenRule GenDef="SchemaDef" Name="CreateSPIsClusterUserPart1">
			select
				susr.secuserid
			from $lower DbSchemaName$.SecUser as susr
			where
					susr.secuserid = argSecUserId
				and susr.login_id = 'system'</GenRule>

	<GenRule GenDef="SchemaDef" Name="CreateSPIsClusterUserPart2">
		union
			select
				smemb1.secuserid
			from $lower DbSchemaName$.SecGrp sgrp1
				inner join $lower DbSchemaName$.SecMemb smemb1 on
					smemb1.clusterid = sgrp1.clusterid
					and smemb1.secgroupid = sgrp1.secgroupid
			where
					sgrp1.clusterid = argClusterId
				and sgrp1.safe_name = argSecGroupName
				and smemb1.secuserid = argSecUserId</GenRule>

	<GenRule GenDef="SchemaDef" Name="CreateSPIsClusterUserPart3">
		union
			select
				smemb2.secuserid
			from $lower DbSchemaName$.SecGrp sgrp2
				inner join $lower DbSchemaName$.SecInc sinc2a on
					sinc2a.clusid = sgrp2.clusterid
					and sinc2a.secgrpid = sgrp2.secgroupid
				inner join $lower DbSchemaName$.SecMemb smemb2 on
					smemb2.clusterid = sinc2a.clusid
					and smemb2.secgroupid = sinc2a.incgrpid
			where
					sgrp2.clusterid = argClusterId
				and sgrp2.safe_name = argSecGroupName
				and smemb2.secuserid = argSecUserId</GenRule>

	<GenRule GenDef="SchemaDef" Name="CreateSPIsClusterUserPart4">
		union
			select
				smemb3.secuserid
			from $lower DbSchemaName$.SecGrp sgrp3
				inner join $lower DbSchemaName$.SecInc sinc3a on
					sinc3a.clusid = sgrp3.clusterid
					and sinc3a.secgrpid = sgrp3.secgroupid
				inner join $lower DbSchemaName$.SecInc sinc3b on
					sinc3b.clusid = sinc3a.clusid
					and sinc3b.secgrpid = sinc3a.incgrpid
				inner join $lower DbSchemaName$.SecMemb smemb3 on
					smemb3.clusterid = sinc3b.clusid
					and smemb3.secgroupid = sinc3b.incgrpid
			where
					sgrp3.clusterid = argClusterId
				and sgrp3.safe_name = argSecGroupName
				and smemb3.secuserid = argSecUserId</GenRule>

	<GenRule GenDef="SchemaDef" Name="CreateSPIsClusterUserPart5">
		union
			select
				smemb4.secuserid
			from $lower DbSchemaName$.SecGrp sgrp4
				inner join $lower DbSchemaName$.SecInc sinc4a on
					sinc4a.clusid = sgrp4.clusterid
					and sinc4a.secgrpid = sgrp4.secgroupid
				inner join $lower DbSchemaName$.SecInc sinc4b on
					sinc4b.clusid = sinc4a.clusid
					and sinc4b.secgrpid = sinc4a.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc4c on
					sinc4c.clusid = sinc4b.clusid
					and sinc4c.secgrpid = sinc4b.incgrpid
				inner join $lower DbSchemaName$.SecMemb smemb4 on
					smemb4.clusterid = sinc4c.clusid
					and smemb4.secgroupid = sinc4c.incgrpid
			where
					sgrp4.clusterid = argClusterId
				and sgrp4.safe_name = argSecGroupName
				and smemb4.secuserid = argSecUserId</GenRule>

	<GenRule GenDef="SchemaDef" Name="CreateSPIsClusterUserPart6">
			select
				smemb5.secuserid
			from $lower DbSchemaName$.SecGrp sgrp5
				inner join $lower DbSchemaName$.SecInc sinc5a on
					sinc5a.clusid = sgrp5.clusterid
					and sinc5a.secgrpid = sgrp5.secgroupid
				inner join $lower DbSchemaName$.SecInc sinc5b on
					sinc5b.clusid = sinc5a.clusid
					and sinc5b.secgrpid = sinc5a.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc5c on
					sinc5c.clusid = sinc5b.clusid
					and sinc5c.secgrpid = sinc5b.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc5d on
					sinc5d.clusid = sinc5c.clusid
					and sinc5d.secgrpid = sinc5c.incgrpid
				inner join $lower DbSchemaName$.SecMemb smemb5 on
					smemb5.clusterid = sinc5d.clusid
					and smemb5.secgroupid = sinc5d.incgrpid
			where
					sgrp5.clusterid = argClusterId
				and sgrp5.safe_name = argSecGroupName
				and smemb5.secuserid = argSecUserId</GenRule>

	<GenRule GenDef="SchemaDef" Name="CreateSPIsClusterUserPart7">
		union
			select
				smemb6.secuserid
			from $lower DbSchemaName$.SecGrp sgrp6
				inner join $lower DbSchemaName$.SecInc sinc6a on
					sinc6a.clusid = sgrp6.clusterid
					and sinc6a.secgrpid = sgrp6.secgroupid
				inner join $lower DbSchemaName$.SecInc sinc6b on
					sinc6b.clusid = sinc6a.clusid
					and sinc6b.secgrpid = sinc6a.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc6c on
					sinc6c.clusid = sinc6b.clusid
					and sinc6c.secgrpid = sinc6b.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc6d on
					sinc6d.clusid = sinc6c.clusid
					and sinc6d.secgrpid = sinc6c.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc6e on
					sinc6e.clusid = sinc6d.clusid
					and sinc6e.secgrpid = sinc6d.incgrpid
				inner join $lower DbSchemaName$.SecMemb smemb6 on
					smemb6.clusterid = sinc6e.clusid
					and smemb6.secgroupid = sinc6e.incgrpid
			where
					sgrp6.clusterid = argClusterId
				and sgrp6.safe_name = argSecGroupName
				and smemb6.secuserid = argSecUserId</GenRule>

	<GenRule GenDef="SchemaDef" Name="CreateSPIsClusterUserPart8">
		union
			select
				smemb7.secuserid
			from $lower DbSchemaName$.SecGrp sgrp7
				inner join $lower DbSchemaName$.SecInc sinc7a on
					sinc7a.clusid = sgrp7.clusterid
					and sinc7a.secgrpid = sgrp7.secgroupid
				inner join $lower DbSchemaName$.SecInc sinc7b on
					sinc7b.clusid = sinc7a.clusid
					and sinc7b.secgrpid = sinc7a.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc7c on
					sinc7c.clusid = sinc7b.clusid
					and sinc7c.secgrpid = sinc7b.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc7d on
					sinc7d.clusid = sinc7c.clusid
					and sinc7d.secgrpid = sinc7c.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc7e on
					sinc7e.clusid = sinc7d.clusid
					and sinc7e.secgrpid = sinc7d.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc7f on
					sinc7f.clusid = sinc7e.clusid
					and sinc7f.secgrpid = sinc7e.incgrpid
				inner join $lower DbSchemaName$.SecMemb smemb7 on
					smemb7.clusterid = sinc7f.clusid
					and smemb7.secgroupid = sinc7f.incgrpid
			where
					sgrp7.clusterid = argClusterId
				and sgrp7.safe_name = argSecGroupName
				and smemb7.secuserid = argSecUserId</GenRule>

	<GenRule GenDef="SchemaDef" Name="CreateSPIsClusterUserPart9">
		union
			select
				smemb8.secuserid
			from $lower DbSchemaName$.SecGrp sgrp8
				inner join $lower DbSchemaName$.SecInc sinc8a on
					sinc8a.clusid = sgrp8.clusterid
					and sinc8a.secgrpid = sgrp8.secgroupid
				inner join $lower DbSchemaName$.SecInc sinc8b on
					sinc8b.clusid = sinc8a.clusid
					and sinc8b.secgrpid = sinc8a.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc8c on
					sinc8c.clusid = sinc8b.clusid
					and sinc8c.secgrpid = sinc8b.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc8d on
					sinc8d.clusid = sinc8c.clusid
					and sinc8d.secgrpid = sinc8c.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc8e on
					sinc8e.clusid = sinc8d.clusid
					and sinc8e.secgrpid = sinc8d.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc8f on
					sinc8f.clusid = sinc8e.clusid
					and sinc8f.secgrpid = sinc8e.incgrpid
				inner join $lower DbSchemaName$.SecInc sinc8g on
					sinc8g.clusid = sinc8f.clusid
					and sinc8g.secgrpid = sinc8f.incgrpid
				inner join $lower DbSchemaName$.SecMemb smemb8 on
					smemb8.clusterid = sinc8g.clusid
					and smemb8.secgroupid = sinc8g.incgrpid
			where
					sgrp8.clusterid = argClusterId
				and sgrp8.safe_name = argSecGroupName
				and smemb8.secuserid = argSecUserId</GenRule>

</RuleSet>
